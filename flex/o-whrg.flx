 o-whrg.flx  Liste der aktuellen Euro-Wechselkurse
 2014-08-26  (uses Web service by European Central Bank)

if "???" jump wh
:exch
ask Währungscode? (??? Liste aller Codes) 
var (f" " F" ")
if "" end

:wh
// If ??? was entered, make $cu empty:
if "???" var ""
// set input to uppercase
xco cu

// curr code in upper.
ins $cu

// build the string to look for in the response
var "currency='" $cu "' rate='"
// e.g.:  currency='USD' rate='
ins #uXW

//  Call the ECB service, it sends a list with all the rates

var "http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml"
get I
// Text is now in iV
// All relevant lines look like this:
//        <Cube currency='USD' rate='1.3192'/>

// For testing: (ecb.txt = locally saved text received from the URL)
//var Fecb.txt

if "ERROR" jump exerr
if "http:" jump exerr
ins $xx


// is $cu empty?
if not $cu jump exchlist

// The response from ECB is now in $xx
//  extract the line for the rate using the string prepared for it

var $xx (b"#uXW" e"'")
if "" jump exch
// the rate is now in iV
perf CRATE
// display the results
var n "Aktueller Kurs der EZB Frankfurt: " n "    1 " $cu " = " $xy " EUR" n "    1 EUR = " $xx " " $cu n n
mes

end

:CRATE
// put the rate value to $xx, filled up by spaces to 8 characters
var (0,8)
ins $xx

// and calculate the reverse value
eval 1 / $xx
// make it 8 spaces
var (0,8)
ins $xy
return

:exchlist
var n "  Aktuelle EURO-Wechselkurse der EZB Frankfurt, " #dt(b", ") n n 
ins $Wlist
sho IV

var $xx
// the list comes unsorted, sort alphabetically!
// (There are other lines of text, which doesn't matter)
sort a0
ins $xz

:exchloop

// extract the next code
var $xz (b"<Cube currency='" e"'")
if "CHF" var "SWF"
ins $cu

// no further value in the list
if "" jump wakt
var $xz
// and the rate
var (b"rate='" e"'")

// calc the reverse
perf CRATE

// and print both
var $Wlist n "    1 " $cu " = " $xy " EUR   /   1 EUR = " $xx " " $cu 
ins $Wlist
sho IV

// next line begins somewhere after "/>"
var $xz (b"/>")
ins $xz
// loop, if there was sthg left, then loop
if $xz jump exchloop

:wakt
yesno Währungstabelle aktualisieren?
if no end

var $Wlist
ins $wh

find |; SYSWWH?
if no new 0

var "WWHRGcEURd" #dts(0,8) "WEUR:1.00000:Euro%DEM:1.95583:Deutsche Mark"
ins #9A 

:wlo
var $wh (e"^M")
ins #uwh

var #uwh(b" = " b" = " b" " f" ")
if "USD" var "US $";jump 9A
if "AUD" var "Austral.Dollar";jump 9A
if "GBP" var "Brit. Pfund";jump 9A
if "CAD" var "Canad.$";jump 9A
if "CNY" var "China.Yuan";jump 9A
if "DKK" var "D„n. Krone";jump 9A
if "JPY" var "Japan.Yen";jump 9A
if "NOK" var "Norw. Krone";jump 9A
if "RUB" var "Russ.Rubel";jump 9A
if "SEK" var "Schwed.Krone";jump 9A
if "CHF" var "Schweiz.Franken";jump 9A
if "SWF" var "Schweiz.Franken";jump 9A
if "PLN" var "Poln. Zéoty";jump 9A

jump nxt
:9A

ins $wn

var #9A "%" #uwh(f"1 " e" ") ":" #uwh(b"1 EUR = " e" ") ":" $wn
ins #9A

:nxt
var $wh (b"^J")
ins $wh
if $wh jump wlo 

disp
sho rec

mes Jetzt evtl. noch bearbeiten, dann speichern

end

:exerr
var n "Keine Internet-Verbindung? ..." n
mes



