  DISP-DOS.APR : a99-Anzeige incl. verkn. Satzstrukturen, tabellarisch
  Plus Nachladungen von Åber- und untergeordneten SÑtzen
  2002-02-15
  Wenn keine hierarchischen oder verknuepften Saetze vorkommen,
  dann genuegt einfaches Modell  D-SDOS.NPR  

pn="Hierarchie-Export DOS"

  FÅllen Sie die Bereiche zwischen den mit <<<<<<<<<  und >>>>>>>>>
  markierten Zeilen mit Ihren Exportbefehlen aus!
  Meistens reicht es, den Abschnitt unter Sprungmarke #-Z anzupassen!
  (siehe ganz unten)

  Der aktuelle (anzuzeigende oder auszugebende) Satz wird PRIMéRSATZ genannt.
  Dabei handelt es sich um entweder

  A.  einen Hauptsatz
      wenn er unabhÑngig gespeicherte UntersÑtze hat, muss die
      Kategorie #00 mit  einer eindeutigen IdNr X besetzt sein.
      In der Anzeige sollen unter dem auptsatz alle untergeordneten
      SÑtze erscheinen.
      Die untergeordneten SÑtze haben dann in #00 IdNummern der Form  X+n
      mit einer Bandnummer n :

  B.  einen Untersatz
      dann enthÑlt #00 die IdNr des Hauptsatzes PLUS eine Bandnummer
      z.B.  #00 123456+005=Vol.5
      (hinter '='  kann eine Bandnummer in Textform folgen, sonst wird
      die auf '+' folgende Nummer genommen, fÅhrende Nullen werden beseitigt)
      In der Anzeige sollen stufenfîrmig die unmittelbar Åbergeordneten, 
      aber nicht die nebengeordneten SÑtze erscheinen.

  C.  beides, auch "Mittelsatz" genannt: der PrimÑrsatz ist einerseits
      einem anderen untergeordnet, besitzt aber auch selbst UntersÑtze.
      In der Anzeige soll fÅr die untergeordneten SÑtze nach A, fÅr die
      Åbergeordneten nach B verfahren werden.


  Es kann bis zu 5 untergeordnete Stufen geben (theoretisch noch mehr).
  Jede weitere Stufe enthÑlt in der #00 oder #09 ein weiteres '+' . 
  Dieses wird fÅr den Nachladevorgang ausgewertet.

  *********** Grundparameter, nicht ohne Grund aendern: ***************
td-dos   RTF-Steuerbefehle


zl=75    ZeilenlÑnge
zi=15 

zb=" -"   Umbruch bei Leerz. und Bindestrich
zm=0      keine Seitenschaltung
dx=1      Umcodierung einschalten

i4=1    V14-Ersetzungen ausfuehren


  <<<<<<<<<<<<    Raum fÅr Ihre Zwischenteile (Textkonstanten)
  Empfehlung: Nummern 30 bis 59
  >>>>>>>>>>>>    Ende der anwendungsspezifischen Textkonstanten
4=C      

  Tabellen-Parameter                  erste Spalte:
18=""
19=""
99=""
98=""
88=""
87=""

20=C &0 t88      Neue Tabellenzeile
21=t87 &16       zwischen zwei Tab.Spalten
22=""              Ende der Tab.Zeile (bei RTF und DOS nichts)
23=C
    nur bei HTML:
  29="<pre>"
  28="</pre>"



p ™ 1     Nichtsortierzeichen ausblenden
      Absatzende bei  und |
p  "; " 
p | "; "   

  Achtung hierarchische Saetze:
  Folgende Zeile wirksam nur wenn man hierarchische Saetze hat:
  (denn fuer jeden Untersatz wird die nachfolgende Liste abgearbeitet)
  Ausfuehrlicheres Modell fuer hierarch. Strukturen:  D-K.APT


#uvE +E e0
#hi +0 e0

#n30 >Y e0   Stammsatz

   Tabulatorsetzungen fuer die Tabelle:

#t19

#uaF daF e0
#+@

#-0
    Ist alternat. Flag gesetzt? dann #-(
#uaF +( e0

   Wenn der aktuelle Satz ein Untersatz alter Art ist,

#-@
#001 +e e0      dann nach #-e , d.h. die Nachladeprozedur ueberspringen
   Tab-Einstellung: 1500, Schriftgroesse: 22 = 11pt
#t19

  ******** Nachladeprozedur: uebergeordnete Saetze laden  *******

  nimm #00 und pruefe, ob '+' darin vorkommt:
#-a
#000 +a c"+" t"+" |90   das wird "rekursiv" ausgefuehrt:
#020 +a c"+" t"+" |90   das wird "rekursiv" ausgefuehrt:
                       wenn in #00 ein '+' vorkommt, wird das letzte hinten
                       abgeschnitten (t"+" macht das) und der verbleibende Teil
                       wird im Index 9 gesucht, der gefundene Satz wird geladen
                       und wird zugleich zum aktuellen Satz. Dieser Vorgang
                       wird wiederholt (deshalb +a), bis kein '+' mehr in #00
                       zu finden ist.
        Nun gibt es evtl. einen Stapel mit mehreren Saetzen, der Hauptsatz
        an der Spitze ist dann der aktuelle Satz.

#<+b    Wurde tatsaechlich etwas nachgeladen? Dann weiter bei  #-b
        (#< kann nicht ausgefuehrt werden, wenn der Stapel leer ist, und
        dann wird auch +b nicht ausgefuehrt.)
#+e     Wenn nichts geladen wurde, dann #-e
        (d.h. der Primaersatz ist ein Einzelsatz oder Hauptsatz)

   ***** Ladeoperation beendet ******

        Jetzt wird der Stapel abgearbeitet:
#-b
#<^     zuerst  wieder hinaufschalten, denn #<+b hat hinuntergeschaltet;
        dann ist der Hauptsatz wieder der aktuelle Satz
  Was jetzt kommt, bezieht sich auf den Hauptsatz:
  <<<<<<<<<  hier einsetzen, was mit dem Hauptsatz geschehen soll <<<<<<<

#-H

#nr =za    #uza besetzten, dient fuer den gezielten Ruecksprung zu #-A
#+Z     Unterprog. #-Z ausfuehren
#-A

  >>>>>>>>>  Ende der Hauptsatz-Verarbeitung   >>>>>>>>>>>>>>>>>>>>>>>>>>


  *********  Mittelebene   **********

#<     einen Schritt runterschalten, d.h. der unter dem Hauptsatz stehende
       Satz wird nun zum aktuellen Satz


#-c   ist es ein Mittelsatz? Wenn ja, ist der folgende Befehl ausfuehrbar:
#t{ C }    (Zeilenvorschub, bevor es weitergeht)
#<+d       noch einen Schritt runterschalten, weiter bei  #-d
#t{ C }    wenn das nicht geht, Zeilenvorschub
#+e        d.h. der Primaersatz ist jetzt wieder erreicht, dann weiter bei #-e

#-d      ja, es war ein Mittelsatz
#<^      dann wieder raufschalten, weil  #<+d  runtergeschaltet hat



#000 b"+" B"=" { t13 t20 "Abteilung:" t21 } P22

#t60   Einrueckung auf aktueller Position (hinter Bandnummer) festsetzen

  <<<<<<<<<  hier einsetzen, was mit Mittelsaetzen geschehen soll  <<<<<<<
#nr =zb
 #>H     Unterprog. #(H ausfuehren
#+Z
#-B

  >>>>>>>>> Ende der Mittelsatz-Behandlung  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>

#t61   Einrueckung wieder auf 0 setzen

#<+c        Mittelsatz-Verarbeitung fortsetzen,
            bis der Primaersatz wieder erreicht ist

  ********** Mittelebenen alle abgearbeitet    ******

  ********** jetzt kommt der PRIMAERSATZ selbst an die Reihe **************

  (hier beginnt es, wenn der  Primaersatz bereits ein Hauptsatz war, also
   keine uebergeordneten existieren)

#-e
#000 +f b"+" B"=" { t13 t20 "Teil: " t21 t99 } P{ t98 t22 }
#020 +f b"+" B"=" { t13 t20 "Teil: " t21 t99 } P{ t98 t22 }
#hi +f { t13 t20 "Teil: " t21 t99 } P{ t98 t22 }

#</     Stapel jetzt beseitigen
       (wird nicht gemacht, wenn Untersaetze alter Art vorliegen)

#-f
    <<<<<<< hier einsetzen, was mit dem Primaersatz geschehen soll  <<<<<<<

#nr =zc
#+Z     Unterprog. #(H ausfuehren
#-C

    >>>>>>> Primaersatz abgearbeitet >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


   **** wenn der Primaersatz noch Untereinheiten hat  *******

  Das findet man so heraus:

  man haengt ein '+' an #00 um zu sehen, ob der Index Eintraege enthaelt, die
  so beginnen
  (wenn man #00 123456+005 hat, wird nach  "123456+005+"  gesucht
   und man findet mîglicherweise etwas wie  "123456+005+1" )

#000 +g e"=" F" " P"+" |92    erste Untereinheit finden
                             und zum aktuellen Satz machen

#+V   wenn es keine gibt, STOP

   **** Untereinheiten abarbeiten (zyklisch!)  ***

#-g
#000 +#uBD b"+" B"=" { t13 t20 "Teil: " t21 t99 } P{ t98 t22 }
#020 +#uBD b"+" B"=" { t13 t20 "Teil: " t21 t99 } P{ t98 t22 }

   <<<<<<< hier einsetzen, was mit den Untereinheiten passieren soll <<<<<<<

#uBD e0
#nr =zd e0
#+Z     Unterprog. #(H ausfuehren
#-D

   >>>>>>> Ende der Untersatz-Verarbeitung   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

#<\   Untersatz aus dem Arbeitsspeicher entfernen
#000 +g e"+" P"+" |93     naechsten Untersatz aufsuchen
                         nach #-g zurueck, wenn es einen gibt
    das wird unbegrenzt oft gemacht, solange |93 ausfuehrbar ist


#+V   ENDE
   ****** Ende der Abarbeitung aller Untersaetze ****************


   **** ENDE  ****

   <<<<<<<<< Hauptabschnitt fuer die Ausgabe der Felder >>>>>>>>
             wird fuer jeden Satztyp abgearbeitet!

    Fuer Kenner: dies ist NICHT als Unterprog. angelegt, damit man
       hier noch Unterprogramme anlegen kann, siehe #8e fuer die URL
#-Z

#hi1 { t13 t20 t99 "Bandb: " t21 t98 } P22


#-@

  Hauptteil: (ist fuer DOS, Win und Web gleich!

#bp # 8
tdisplay      display.npt laden


#t13
#t{ t20 "erfasst/bearb." t21 }
#9zc e""
#9ze e"" " / "
#9zc p22 e0

  gezielte Rueckspruenge, je nachdem, welches #uzi besetzt ist!
#uza +A dza e0
#uzb +B dzb e0
#uzc +C dzc e0
#uzd +D dzd e0
#+V

#-E    Endabschnitt
#hi +-
#t16
#+#

#-V
#+#

   <<<<<<<<< Unterprogramme hier anfÅgen, wenn man welche hat <<<<<<<
   Unterprogramm fuer URL
#(U
#t{ t20 "URL: " t21 }
#cc +#800 i5,: e0
#cc e"" p"start " =Z~
#cc B"?" =Y~
#cc B"?" p69 P68
#)U
#800
#cc e"" p"X _access!" e"!" =Z~
#cc B"?" =Y~
#cc B"?" p69 P68
#)U
   >>>>>>>>> Ende der Unterprogramme >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

tansiasci

#(Y
#n10 i5,p p79 p"Personenstammsatz!" e"!" P111
#n10 i5,b p79 p"Kˆrperschaftsstammsatz!" e"!" P111
#n10 i5,c p79 p"Sachgruppencode!" e"!" P111
#n10 i5,a p79 p"GeoCode!" e"!" P111
#n10 i5,A p79 p"Aufstell-Systematik!" e"!" P111
#n10 i5,l p79 p"Sprachencode!" e"!" P111
#n10 i5,s p79 p"Sachschlagwort!" e"!" P111
#n10 i5,g p79 p"Geoschlagwort!" e"!" P111
#n10 i5,f p79 p"Formcode/-schlagwort!" e"!" P111
#n10 i5,h p79 p"Zeitschlagwort!" e"!" P111
#n10 i5,t p79 p"Thesaurusbegriff!" e"!" P111
#n10 i5,d p79 p"DDC-Zahl!" e"!" P111
#n10 i5,k p79 p"Basisklassifikation!" e"!" P111
#n10 i5,u p79 p"UDK-Zahl!" e"!" P111
#n10 i5,w p79 p"Werk-Stammsatz!" e"!" P111
#)Y


