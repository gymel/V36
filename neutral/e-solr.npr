  E-SOLR.APR : Export fuer Solr, Grundstruktur
  20100525     Ausgabe in ASCII 7-bit, diakrit. Buchstaben -> Grundbuchstaben
  Nur, um Daten fuer Solr auszugeben!

zl=0        Zeilenlaenge unbegrenzt (kein Umbruch)
zm=0   Kein Seitenumbruch

ke=32       Kategorie-Ende = Leerzeichen

i4=1    V14-Nummern aufloesen


    i.apt laden (Indexparameter-Zeichenumwandlungstabelle)
titab

  Einige Werte aber anders
q ª 1
q  32
q  2
q  32
q & "and"
q < 32
q > 32


ak=zz+1
  Nur fuer das Ende
ak=zz+2

   -------- Anweisungsteil --------------------------------------------------

  Hier kommts nur hin, wenn ein hierarch. Untersatz dran ist
  Wenn Flag #uxy gesetzt, hier Schluss
#uxy +# e0

  Falls der ganze Satz exportiert werden soll
#-1
#R00 +- e0
#n10 +- e0
#9A0 +- e0

#dt dxy e0
#hi +A e0
  So muss ein Satz fuer Solr anfangen
#t{ "<doc>" C }
#t{ '<field name="id">' }
  interne Satznummer (!) kommt in <id>
#uiR +n    aus dem Befehl "fetch rec" in srch.job
  sonst die normale interne Nr.
#nr
  alle Felder kommen ins "text"-Feld
  Hier muesste man differenzieren, wenn feldspezifische Suche gebraucht wird
#-n
#t{ '</field><field name="text">' }

#-A
#t{ C }
!#           Pauschalexport : alle Kategorien hintereinander ausgeben
             aber siehe unten die mit / beginnenden Zeilen
#+#

  // Nur damit am Ende die schliessenden Tags den Satz beenden
#-2
#R00 +- e0
#n10 +- e0
#9A0 +- e0


  Flag #uxy setzen, damit hierarch. Untersaetze hier nicht wirksam werden
#nr Axy e0
#hi +# e0
  schliessende Tags
#t{ C "</field></doc>" C }
#+#


  Diese Felder beim Pauschalexport weglassen:
/9h0
/810
/000

  Bei "write" in expsolr.flx wird hier umcodiert:
    (in #u1 steht der Text, !u1 heisst: Umcodieren mit q-Tabelle
#-X
#hi +- e0
!u1
#+#

