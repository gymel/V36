<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title>allegro
views</title></head>
<body style="" link="blue" vlink="purple"><br>
<table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2"> <tbody> <tr>
<td style="vertical-align: top;"><a href="http://www.allegro-c.de"><img src="file:///c:/allegro/html/a10.gif" title="allegro homepage" alt="" style="border: 0px solid ; width: 90px; height: 112px;"></a><br>
</td> <td style="vertical-align: top; text-align: center;"><big style="color: rgb(255, 0, 0);"><big><span style="font-weight: bold; font-family: verdana;"><span style="font-style: italic;"><br> </span><span style="color: rgb(204, 0, 0);">Neue Sicht der Dinge</span><br style="color: rgb(204, 0, 0);"> </span></big></big><span style="color: rgb(255, 0, 0);"><span style="font-weight: bold; font-family: verdana;"><big style="font-family: verdana; font-weight: bold; color: rgb(51, 51, 51);"><br>
<big style="color: rgb(204, 0, 0);"><big><big>Views</big></big></big></big><br>
</span></span></td> <td style="vertical-align: top;">&nbsp; &nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;
&nbsp; &nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</td> </tr> </tbody></table>
<span style="font-family: &quot;cg omega&quot;;"><span style="font-weight: bold;"><br></span></span>
<p style="text-align: right;"><small><span style="font-family: verdana;">Auszug
aus </span><span style="font-weight: bold; font-style: italic; font-family: verdana;">allegro
news</span><span style="font-family: verdana;"> Nr.
58, (2000/2) vom 19.10.2000</span> </small></p>
<small><b style="font-family: verdana;">Ergebnismengen</b><span style="font-family: verdana;">
konnten früher nur mit Hilfe der Kurztiteldatei der
Datenbank (.STL) betrachtet werden: In der Kurzanzeige sieht man zu
jedem Satz
die zugehörige Kurzzeile. Zum Ordnen der Ergebnismenge können
in </span><i style="font-family: verdana;">a99/alcarta</i><span style="font-family: verdana;"> nur diejenigen Kriterien
verwendet werden, die in der Kurzzeile an festen Positionen auftreten
(oder mit Alt+s&nbsp; die interne Satznummer).
</span></small><p style="font-family: verdana;"><small><span style="">&nbsp;&nbsp;&nbsp;
</span>Nicht immer ist für einen konkreten Zweck die Kurzzeile
gut
geeignet - weil sie immer gleich aussieht, und es gibt nur genau eine
je Satz.
Manchmal bräuchte man einen Überblick mit anderen
Datenelementen,
und manchmal würde man gerne eine andere Ordnung herstellen können. Zum
Beispiel sind die
Kurzlisten bei einer <b style=""><i style="">bolero</i></b>-Datenbank
nach dem
Einheitstitel geordnet, manchmal ist aber eine Übersicht nach
Opusnummern
erwünscht oder auch nach Interpreten, Dirigenten,
Aufführungsjahren,
Orchestern
... nichts davon steht aber in der Kurzliste.</small></p>
<p style="font-family: verdana;"><small><span style="">&nbsp;&nbsp;&nbsp;
</span>Man hätte also gern geschmeidige Alternativen zur
Standard-Kurzanzeige, um Ergebnismengen in einer dem Zweck
angemes­senen Form
und Reihenfolge durchsehen oder auch exportieren zu können. Denn
Datenbanken
können viele unterschiedliche Satztypen enthalten und es
können immer
neue und
neuartige Ansprüche über eine Datenbank hereinbrechen, z.B.
wenn man
Geschäftsgänge damit unterstützt.</small></p>
<p style="font-family: verdana;"><small><span style="">&nbsp;&nbsp;&nbsp;
</span>Angedacht wurde auch
einmal, daß
es mehr
als nur <i style="">eine</i> STL-Datei geben
könnte.
Zwar würde dies für eine Reduzierung gähnender
Leerräume auf
zeitgenössischen
Festplatten sorgen, dennoch aber hätte man nur eine begrenzte Zahl
von
letztlich auch wieder voreingestellten und wenig anpassungsfreudigen
Sichtweisen, weil man dazu gute Parametrierkenntnisse braucht und
schnelle
Änderungen selten machbar sind, im laufenden Betrieb
überhaupt nicht.</small></p>
<p style="font-family: verdana;"><small><i style="">Kurzum:</i> die <b style="">Sicht</b>
(engl. <b style="">view</b>)
der
Dinge, sprich der Ergebnismengen, sollte flexibel einstellbar sein und
wenn
irgend möglich ohne großes Insiderwissen kurzfristig, am
besten ad-hoc
neue An-
und Einsichten eröffnen einschl. Export. Schließlich ist die
Datenbank
kein
Selbstzweck, sondern sie soll Früchte tragen.</small></p>
<p style="font-family: verdana;"><small>Aus der
Sicht des <i style="">classico</i>-Systems
ist
außerdem
noch
festzustellen: </small></p>
<p style="font-family: verdana;"><small>Per <i style="">CockPit</i>
können aus Ergebnismengen beliebig <b style="">sortierte
Listen</b>
erstellt werden (siehe Handbuch Kap. 6), doch wird
dies trotz Vereinfachungen noch immer als relativ umständlich
empfunden. Im
Windows-System soll es mindestens soviel Flexibilität geben, aber
man
wünscht
sich entscheidend weniger Parametrierarbeit und die Möglichkeit,
die
Vorgänge
online durchzuführen und mit sofortiger Betrachtung der sortierten
Liste,
wahlweise jedoch auch mit einer Druck- oder Dateiausgabe in Listen-
oder
Tabellenform. Letztere könnte dann nebenbei unter Windows die
"alten"
<i style="">CockPit</i>-Funktionen der
Listen­produktion
ersetzen. (Es gibt sie aber auch noch auf dem <a href="flex:h%20exprt">Export-Menü
von <span style="font-style: italic;">a99</span></a>.)</small></p>
<small><span style="font-family: verdana;">Die
Lösung sind
</span><span style="font-weight: bold; font-family: verdana;">ViewListen</span><span style="font-family: verdana;">:
</span></small><p style="font-family: verdana;"><small><span style="font-size: 13pt;">Eine
<b style="">ViewListe</b> ist
eine
besondere Form der Darstellung einer
Ergebnismenge.&nbsp;</span></small></p><p style="font-family: verdana;"><small><small><small><small><small><small><small><small><span style="font-size: 11pt;">(Eine andere Form ist die <span style="font-weight: bold;">Tabelle</span>, die man auch mit Office-Programmen weiterverwenden kann. Geben Sie ein &nbsp;h table, dann erfahren Sie mehr.)</span></small></small></small></small></small></small></small></small></p>
<p style="font-family: verdana;"><small><span style="font-size: 12pt;">Eine
ViewListe
gestattet das
<i style="">Durchsehen, Durchsuchen</i> und <i style="">Exportieren</i>
einer Ergebnismenge in einer
sinnvollen Reihenfolge und mit Anzeige von zweckdienlichen
Feldinhalten, und
zwar bei Bedarf mit <i style="">Gruppierung</i>
nach einem
gewünschten Feld und mit <i style="">Summierung</i>
von Zahlen.</span></small></p>
<p style="font-family: verdana;"><small><b style="">Sie wollen das
sofort sehen? <a href="#wie">Weiter unten</a>
steht, wie's
geht.</b></small></p>
<p style="font-family: verdana;"><small>&nbsp;Im
Folgenden wird
immer das
englische Wort<span style="">&nbsp; </span>"View"
statt
des deutschen "Sicht" benutzt.</small></p>
<p style="font-family: verdana;"><small>Unter
derselben
Bezeichnung gibt
es etwas Ähnliches, aber grundsätzlich doch anderes bei
relationalen
Daten­banken.
Dort ist ein View ein zur Datenbank­struktur gehöriges
Element,
einzurichten
vom Systemverwalter und dann permanent vorhanden, aber selten schnell
realisierbar oder änderbar. Für <b style=""><i style="">allegro</i></b>
ist ein View eine temporäre
Datei, erstellbar durch jeden Datenbankbenutzer, jederzeit und sofort.
Die
entwickelte Methodik ist einerseits sofort einsetzbar, ohne langes
Vorstudium,
andererseits kann man mit einschlägigen Kenntnissen, wie bei <i style="">allegro</i> üblich, für lokale Zwecke und
kompliziertere Aufgaben beliebige Varianten und Verfeinerungen
ausarbeiten. Das
gilt für die Parameterdateien sowohl wie für die FLEXe.</small></p>
<p><small><span style="font-family: verdana;">Datentechnisch
besteht eine
ViewListe aus einer sehr einfachen Textdatei mit je einer Zeile
für
jeden Datensatz.
Solche Dateien können leicht und schnell erstellt werden, auch
außerhalb von </span><i style="font-family: verdana;">a99/alcarta</i><span style="font-family: verdana;">, z.B. mit PRESTO oder
SRCH.
Die View-Funktionen gibt es nur für </span><b style="font-family: verdana;"><i style="">a99/alcarta</i></b><span style="font-family: verdana;">
,&nbsp; nicht für die konventionellen
Programme;
es
wurde dafür der neue FLEX-Befehl</span></small>&nbsp; <a href="flex:h%20xview"><span style="font-family: &quot;Courier New&quot;; color: rgb(204, 0, 0);">View</span></a>&nbsp;
<small><span style="font-family: verdana;">eingerichtet.</span></small></p>
<p style="font-family: verdana;"><small><span style=""><span style="font-weight: bold;">Das
ViewListen-Fenster kann aber noch mehr:</span><br>
</span>Nicht nur Ergebnismengen können in dem Fenster
präsentiert und genutzt werden, auch Textlisten aller Art und
beliebiger Größe:
Auswahllisten für Codes oder Systematiken, Menülisten (wobei
hinter
jeder Zeile
ein FLEX stecken kann). Und diese Listen können komfortabel
durchsucht
werden, in FLEXe und Formulare eingebunden ...
Vielleicht wird die praktische Bedeutung dieser Sonder­funktion
nicht
geringer
sein als die der Ergebnismengen-Nutzung.&nbsp;&nbsp;&nbsp; <a href="flex:h%20viewlist">Mehr zum Thema ViewListen.</a><br>
</small></p><p style="font-family: verdana;"><small>
<span style="font-size: 10pt;"></span><b style=""><span style="font-size: 12pt;"><br>
Einzelteile
des View-Konzepts </span></b><span style="">&nbsp;&nbsp;</span><span style="">&nbsp;&nbsp;&nbsp;&nbsp;
</span>[Hintergrundwissen
für <i style="">Allegrologen</i>]
</small></p><p><small><span style="font-family: verdana;">Nutzung
der
View-Technik setzt
voraus, daß man auf dem Start- und auf dem Temp-Verzeichnis
Schreibrecht hat. Wenn in
der
INI-Datei kein Befehl</span></small><span style="">&nbsp;
</span><span style="font-family: &quot;Courier New&quot;;">DbAux=...
</span><span style="">&nbsp;</span><small><span style="font-family: verdana;">steht (mit dem man das
Arbeitsverzeichnis setzt), wird als Temp-Verz. dasjenige genommen, das
in der
Environment-Variablen TEMP steht. Meistens ist dies</span></small><span style=""><small><span style="font-family: verdana;">&nbsp;</span></small>
</span><span style="font-family: &quot;Courier New&quot;;">c:\windows\temp</span>.
<small><span style="font-family: verdana;">Dort
kommen die
temporären Dateien zu liegen, die nach Ende einer
Sitzung ohne
Weiteres gelöscht werden können. Die Parameterdateien (vom
Typ</span></small> <span style="font-family: &quot;Courier New&quot;;">v-*.cpr</span>
)<small><span style="font-family: verdana;">, die
man nicht selten
später erneut gebrauchen kann, werden auf
das
Startverzeichnis
geschrieben, desgleichen Exporte, was man durch Eingriff in die FLEXe
aber
ändern könnte.</span></small></p>
<p><small><span style="font-family: verdana;">Eine
</span><b style="font-family: verdana;">ViewListe</b><span style="font-family: verdana;"> hat den Dateityp </span></small><b style=""><span style="font-family: &quot;Courier New&quot;;">.VW</span></b><small><span style="font-family: verdana;">. Sie besteht aus
Zeilen
von exakt gleicher Länge (Auffüllung am Ende mit
Leer­zeichen!). Ist
das beim
Aufruf nicht gegeben, wird das Programm selbständig eine Kopie der
Datei
erstellen und darin alle Zeilen an der längsten ausrichten. Jede
ViewListe kann
aber ihre individuelle, passende Zeilenlänge haben. (</span><span style="font-style: italic; font-family: verdana;">Achtung:</span><span style="font-family: verdana;"> die Ausgangsdatei wird
durch die Kopie ersetzt. Bein nächsten Aufruf hat sie also schon
die richtige Gestalt.)</span><br style="font-family: verdana;">
</small></p><p style="font-family: verdana;"><small>So
sieht, schematisch,
ein
Datensatz, d.h. also eine Zeile, in einer ViewListe aus:</small></p>
<p><span style="font-size: 12pt; font-family: &quot;Courier New&quot;;">00001234|TEXT<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><u><sup>13</sup></u>
<u><sup>10</sup></u></span></p>
<p style="font-family: verdana;"><small>Die
hochgestellten,
unterstrichenen Zahlen 13 und 10 sind die üblichen
ASCII-Steuercodes
für die
Zeilentrennung. <br>
Warum die feste Länge? Diese macht es viel
schneller,
die Anzeige
dann erscheinen zu lassen und darin zu blättern, als wenn die
Zeilen
variabel
wären. Bei Ergebnismengen von mehreren tausend Sätzen wirkt
sich dies
sehr
spürbar aus. ViewListen sind in aller Regel temporär, daher
kann man
sich diese
Ineffizienz leisten. (Übrigens: Hat eine ViewListe ausnahmsweise
Zeilen
unterschiedlicher Länge, merkt das Programm dies beim Einlesen und
korrigiert
es, d.h. die Datei wird entsprechend verändert; es dauert nur
etwas
länger, bis
sie dann erscheint! <i style="">Tip:</i> Bei sehr
langen ViewListen
geht das Verändern am schnellsten, wenn die erste Zeile die
längste ist.)<span style=""> </span></small></p>
<p style="font-family: verdana;"><small>Der Inhalt
eines
View-Satzes ist
zweiteilig: eine interne Satznummer (hier 8stellig mit führenden
Nullen, das
ist jedoch nicht verbindlich), und ein davon durch das Zeichen '<b style="">|</b>'
getrennter TEXT, eine
beliebige Zeichenkette. Diese besteht normalerweise aus Elementen des
Datensatzes, dessen Nummer vorn steht, und zwar genau den Elementen,
die man
für einen bestimmten Zweck braucht. In der Regel wird dieser Text
in
sinnvoller
Weise sortierbar sein, wobei die zum Sortieren dienenden Elemente vorn
stehen
müssen.</small></p>
<p><small><i style="font-family: verdana;">Erfreuliche
Nebenwirkung</i><span style="font-family: verdana;">:
Jede Datei </span><i style="font-family: verdana;">xyz</i><span style="font-family: verdana;">, die so aussieht,
kann mit dem FLEX-Befehl </span></small><span style="font-family: &quot;Courier New&quot;;"><span style="">&nbsp;</span><b style="">View </b><i style="">xyz</i>
</span><span style="">&nbsp;</span><small><span style="font-family: verdana;">als ViewListe angezeigt
werden, egal wie
man sie
erstellt hat! Im
Extremfall ist es eine Textdatei ohne ein </span></small><span style="font-family: &quot;Courier New&quot;;">'|' </span><small><span style="font-family: verdana;">oder mit jeweils "</span></small><span style="font-family: &quot;Courier New&quot;;">abc|</span><small><span style="font-family: verdana;">"
am Anfang jeder Zeile, wobei 'abc'
nicht mit einer Ziffer
beginnt.&nbsp; Die ViewListe wird angezeigt
im Kurzanzeige-Fenster und erlaubt dann die Auswahl einer Zeile.
Beginnt die
Zeile mit einer Nummer größer als Null, wird der
zugehörige Satz sofort
angezeigt, wenn der Leuchtbalken darauf geht. Man hat hier nebenbei
eine
Alternative zum FLEX-Befehl "</span></small><span style="font-family: &quot;Courier New&quot;;">select</span>"<small><span style="font-family: verdana;">,
denn:</span></small> </p>
<p style="font-family: verdana;"><small>Anschließend
(nach
Druck auf
[Enter]) steht die ausgewählte Zeile dann in der "internen
Variablen". D.h. die Angabe "abc",
im View nicht
sichtbar, kann dann auch per FLEX ausgewertet werden! Kommt kein '|'
vor, ist die ganze Zeile sichtbar. select-Listen sind im Umfang
recht begrenzt und langsam, bei sehr langen Listen ist die View-Methode
sehr im Vorteil. Beispiel: geben Sie ein&nbsp; <big><span style="font-family: monospace;">v quick</span></big>
(dann erscheint
quick.vw ). Schauen Sie sich
die Datei quick.vw an,
dann erkennen Sie leicht, was man alles machen kann. Eine weitere
Alternative zum select gibt es ab V25: das <a href="http://www.allegro-c.de/aresqa.rtf">aresqa</a>-Fenster.<br>
&nbsp;<br>
Wie könnte nun der
TEXT
zusammengestellt werden? Vielleicht einfach so, daß man die
gewünschten
Kategorienummern angibt? Das mag in einfachen Fällen reichen und
wird
auch über
ein Formular komfortabel gelöst, siehe unten (Seite 6), aber wenn
die
gesamte
Bandbreite der potentiellen Wünsche abgedeckt werden soll,
muß
man
vieles
bedenken:<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></p>
<ol style="font-family: verdana;"> <small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span>Nicht
jedes Feld kommt jedesmal vor, manchmal wird
statt eines
fehlenden Feldes ersatzweise ein anderes an seine Stelle treten sollen.
Das ist
vor allem dann wichtig, wenn eine Ergebnismenge unterschiedliche
Satztypen
enthält.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></li>
<small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span>Wenn
die Datenbank mit V14-Ersetzungen arbeitet,
möchte man
Klartexte statt Stammsatznummern.</small></li> <small>
</small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span>Manchmal
wird man
Teilfelder oder andere
Bestandteile als
Elemente brauchen, nicht den gesamten Feldtext.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></li>
<small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;</span>Die
Länge jedes am TEXT beteiligten Feldes muß
begrenzbar
sein.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></li>
<small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;</span>Nichtsortierzeichen
sollten sich berücksichtigen
lassen.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></li>
<small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;</span>Zeichenumcodierungen
und Textersetzungen können
nötig sein.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></li>
<small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;</span>Zahlenwerte
sollten aus Textfeldern herausgelöst
oder auch aus
mehreren Feldinhalten berechnet werden können.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></li>
<small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;</span>Die
Sortierung wird nicht immer unmittelbar durch
den Inhalt
eines Feldes definiert werden können, es muß vielmehr die
Möglichkeit
geben,
einen veränderten und/oder zusammengesetzten Sortierschlüssel
zu
definieren.
Korrekte Sortierung von Umlauten und Akzentbuchstaben wird man
ebenfalls
erwarten.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></li>
<small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span>Es
sollte möglich sein, die ViewListe in Gruppen
einzuteilen,
d.h. Zwischenüberschriften zu erzeugen.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></li>
<small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span>Zahlen
sollte man addieren und im Falle von
Gruppierungen auch
Zwischensummen bilden können.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></li>
<small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span>Mehrfach
besetzte Felder sollen evtl. mehrere
Einträge in der
Liste erzeugen.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></small></li>
<small> </small><li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span>Letzte,
aber für viele Anwender vielleicht sogar
wichtigste
Wunschvorstellung: Eine ViewListe muß exportiert werden
können,
und
zwar
wahlweise die vollständigen Datensätze mit allen geeigneten
Druckparametern
oder die Liste als <b style="">Tabelle</b>, mit
einem eindeutigen Trennzeichen zwischen den (ungekürzten)
Datenfeldern,
damit
sie dann leicht in andere Programme übernommen werden kann
(Textsysteme,
Tabellen- und relationale Datenbanksysteme).</small></li> 
</ol><p style="font-family: verdana;"><small><span style="">&nbsp;</span>Das
alles legt nahe, daß eine ViewListe
nur mit
den Mitteln
der Exportsprache adäquat herstellbar ist. Dabei gibt es zwei
Möglichkeiten:</small></p>
<p style="font-family: verdana;"><small>A)<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;
</span>die TEXT-Zeilen sind unmittelbar sortierfähig.
Dann kann die
Liste direkt in der beschriebenen Form exportiert und dann sortiert
werden,
bevor man sie anzeigen läßt.</small></p>
<p style="font-family: verdana;"><small>B)<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>die TEXT-Zeilen sind nicht unmittelbar
sortierfähig. Dann muß
die Erstellung der ViewListe über einen Umweg laufen: es wird
zuerst
eine
sortierbare Grunddatei mit zwei Kategorien je Satz erstellt. Die erste
Kategorie, <b style="">#u1</b>,
enthält
den Sortierwert, die zweite, <b style="">#u2</b>,
die anzuzeigende Zeile. Beide können in ihrer Form, aber auch im
Inhalt, ganz
verschieden sein. Nach dem Sortieren<span style="">&nbsp;
</span>wird dann die #u1
ganz beseitigt und es bleibt die geordnete
ViewListe übrig.</small></p>
<p style="font-family: verdana;"><small>Das
Sortieren im Fall
2) geschieht
mit dem <i style="">allegro</i>-Sortierprogramm
ASORT.EXE, welches so angepaßt wurde, daß es die
Beseitigung des
Sortierfeldes #u1
am Schluß automatisch machen kann (neue Option -u3). <i style="">Übrigens:
</i>#u1 braucht nicht von fester Länge zu sein, nur #u2.</small></p>
<p style="font-family: verdana;"><small>Eine
ViewListe
entsteht in beiden
Fällen als Export einer Ergebnismenge mit Hilfe einer
View-Parameterdatei, kurz
<b style="">ViP</b> genannt, mit einem Namen der
Form V&#8209;XYZ.APR,
die immer denselben Aufbau hat. Den Teil mit den allgemeinen
Exportparametern
kann man für andere Kategoriesysteme einfach kopieren. Die
speziellen,
auf den
jeweiligen Zweck bezogenen Angaben bilden einen Block, der jeweils
für
eine
neue Aufgabe zu bearbeiten ist. Im classico-System entsprechen diesen
Dateien
die Parameterdateien S&#8209;*.APR
zur Erstellung einer Sortierdatei. Es
kann beliebig viele solche ViPs geben. </small></p>
<p style="font-family: verdana;"><small>Das <i style="">Erstellen</i>
von ViP-Dateien ist Sache des Systemverwalters, der dafür
aber nur relativ wenige Parametrier­kenntnisse braucht (es sei
denn,
man hat
sehr diffizile Wünsche).<span style="">&nbsp; </span></small></p>
<p style="font-family: verdana;"><small>Das <i style="">Anwenden</i>
der ViPs ist, wie das Anwenden der Sortierdateien im
classico-System, ohne Parameterkenntnisse möglich, zumal wenn die
Anwendung
auch noch in FLEXe eingebettet wird. Als kommentierte Vorlage benutzt
man die
Datei V&#8209;STAND1.APR<span style="">&nbsp; </span>oder<span style="">&nbsp;
</span>V-STAND2.APR<span style="">&nbsp; </span>(letztere
mit
Gruppierung und Summierung)
oder eine andere vorhandene ViP.</small></p>
<p><small><i style="font-family: verdana;">Hier
ein Beispiel:</i><br style="font-family: verdana;">
</small><span style="font-family: verdana;">In der
Datei</span><span style="">&nbsp; </span><span style="font-family: &quot;Courier New&quot;;"><span style="">&nbsp;</span>V-STAND2.APR
</span><span style="">&nbsp;</span><small><span style="font-family: verdana;">(für den Standard-View 2 )
findet
man in der
Mitte diesen Abschnitt:</span></small></p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;">#-A<span style="">&nbsp;&nbsp;&nbsp;&nbsp;
</span>(Oberhalb befindet sich das Kopfstück,
der standardisierte Abschnitt view1.apt)</span></p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;"><span style="">&nbsp;
</span>****** Variabler Teil ********</span></p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;"><span style="">&nbsp;
</span>Nur hier muß man eingreifen, und zwar<span style="">
</span>diejenigen
Kategorien einsetzen, aus denen
der View bestehen soll,<br>
<span style="">&nbsp;
</span>jeweils mit geeigneten Manipulationsbefehlen<br>
<span style=""><br>&nbsp;
</span><b style="">Abschnitt
für die ViewListen-Zeile</b>:</span></p>
<p></p>
<span style="font-family: monospace;">#nr p'j!' e'!'
=vY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Gruppierung
gewuenscht<br>
<br>#76 +#40 x"*1" x"&gt;1449" e"." u e4 P'///' Avv<br>
#nr p"o.J.///" e7 Avv<br>
#40 e" = " u e15 F" " P": " Avv<br>
#20 u e40 Avv<br>
#77 +D x"*1" x"r2" r7 F"." =vu<br>
#nr p'00000000' e7 =vu<br>
#+D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sprung zur
Verarbeitung von #uvv<br>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Abschnitt fuer den
Tabellenexport (Felder mit Trennzeichen)</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
aus VIEWTAB.FLX heraus mit "download view"</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#-Q</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
#uzV enthaelt die aktuelle View-Zeile</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
mit 00000t|... beginnen Trennstrichzeilen,</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
mit 00000a|... beginnen Ueberschriftzeilen</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#uzV +- c't|' B'|'
f' |' e0</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#uzV c'a|' B'|' f'
|' F' '</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp;#76 +E</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp;#nr
p"o.J." e4</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#-E</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#t9</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#40 e" = "</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#t9</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#20</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#t9</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#77 x"*1" e"." r7</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
mit 00000s|... beginnen Summenzeilen</span><br style="font-family: monospace;">
<span style="font-family: monospace;">#uzV c's|' B'|' f'
|' F' ' e"."</span><br>
<br><p><br>
<small><span style="font-family: verdana;">Nur die
mit Strichen
markierten
Zeilen muß man verändern, alles andere kann übernommen
werden, auch
für andere
Konfigurationen. </span><i style="font-family: verdana;">Wichtig:
</i><span style="font-family: verdana;">Im ersten
Abschnitt wird keine eigentliche Ausgabe gemacht! Es wird hier nur eine
Variable #uvv erstellt, aus der dann weiter unten erst (unter #-D)
die Zeilen der ViewListe gemacht werden. Allenfalls kann man dort noch
die
Länge (default: 80 Zeichen) verändern, sonst braucht man
nichts weiter
zu tun.</span></small></p>
<p style="font-family: verdana;"><small>Will man für
die
ViewListe eine
Spaltenanordnung, kann man das jeweils mit den Befehlen<span style="">&nbsp;&nbsp;
</span><b style="">en sn</b><span style="">&nbsp;&nbsp;
</span>erreichen,
also z.B. <b style="">e20&nbsp;s20</b> um
die Länge des Abschnitts auf 20 Zeichen zu begrenzen und mit
Leerzeichen
aufzufüllen.</small></p>
<p style="font-family: verdana;"><small>Für die
Differenzierung
der Anzeige des Views gibt
es zwei
Möglichkeiten. Dabei wird nach dem Sortieren die Parameterdatei <b style="">VIEWGRUP.APR</b>
benutzt, die
man unverändert auch für andere Kategoriesysteme einsetzen
kann.</small></p>
<p style="font-family: verdana;"><small>&nbsp;<br>
</small></p><ol> <li><small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span><b style="font-family: verdana;">Gruppierung:</b><span style="font-family: verdana;"> Dazu
muß </span><i style="font-family: verdana;">hinter
dem ersten
Feld</i><span style="font-family: verdana;"> ein '</span><b style="font-family: verdana;">:</b><span style="font-family: verdana;">'
stehen statt irgendeines anderen
Trennzeichens, dann wird der Inhalt des ersten Feldes als
Zwischenüberschrift
verwendet</span><br> <br> </small><small><span style="font-family: verdana;"></span></small></li>
<li><small><span style="font-family: verdana;"></span><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span><b style="font-family: verdana;">Summierung:</b><span style="font-family: verdana;"> Dazu
muß </span><i style="font-family: verdana;">vor das
letzte Feld</i><span style="font-family: verdana;">
ein '_'
statt irgendeines anderen Trennzeichens gesetzt werden. Dies
führt,
wenn
"Gruppierung" eingestellt ist, nicht nur zur Gesamtsummierung,
sondern auch auch zur Errechnung von Zwischensummen für die
Gruppen.</span> </small></li>
</ol><p style="font-family: verdana;"><small>&nbsp;<br>
Wenn beides zutrifft, hat das Feld TEXT also die
Form:</small></p>
<p><b style=""><span style="font-size: 12pt; font-family: &quot;Courier New&quot;;">Gruppe:Text_Zahl</span></b></p>
<p style="font-family: verdana;"><small><i style="">Für
Allegrologen:</i></small></p>
<p style="font-family: verdana;"><small>Daraus macht
das Programm SRCH
mit der
Parameterdatei
VIEWGRUP.APR eine übersichtliche ViewListe. Die Funktion der
Zeichen<span style="">&nbsp; </span><b style="">: </b><span style="">&nbsp;</span>und<span style="">&nbsp;
</span>_<span style="">&nbsp; </span>ist
nicht im Programm
"verdrahtet", sondern nur in VIEWGRUP.APR. Wer parametrieren kann,
darf sich auch ganz andere Dinge ausdenken, um die ViewListe zu
erstellen.</small></p>
<ol> <li><small><span style="font-family: verdana;">Folgende Funktionen
braucht man für den Umgang mit
Views:</span><br style="font-family: verdana;"> </small><span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal; font-family: verdana;"></span><small><span style="font-family: verdana;">Ergebnismenge in eine
ViewListe
umwandeln : FLEXe&nbsp;
view1.flx&nbsp; und&nbsp; view2.flx
&nbsp;mit vorgegebenen ViPs, viewform.flx
&nbsp;und&nbsp; viewpara.flx
&nbsp;für ad-hoc erstellbare ViPs.<br> <br> </span></small><span style="font-family: &quot;Times New Roman&quot;; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></li>
<li><span style="font-family: &quot;Times New Roman&quot;; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span><small><span style="font-family: verdana;">ViewListe betrachten, Sätze
auswählen und
bearbeiten:
FLEX-Befehl&nbsp; </span></small><b style=""><span style="font-family: &quot;Courier New&quot;;">View</span></b><br>
<br> <span style="font-family: &quot;Times New Roman&quot;; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;"></span></li>
<li><span style="font-family: &quot;Times New Roman&quot;; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;</span><small><span style="font-family: verdana;">ViewListe exportieren:
FLEX-Befehl</span></small><span style="">&nbsp;
</span><b style=""><span style="font-family: &quot;Courier New&quot;;">download
view</span></b></li>
</ol><p style="font-family: verdana;"><small>Auch
eine extern (mit
PRESTO oder
SRCH oder anders) erstellte ViewListe kann mit den Schritten 2 und 3
benutzt
werden.</small></p>
<p><small><span style="font-family: verdana;">Aber
noch mehr: die
schlichte
Struktur der ViewListen erlaubt es sogar, Auswahllisten beliebiger Art
in
derselben Form zu erstellen, die dann mit dem Befehl&nbsp;
</span><b style="font-family: verdana;">View</b><span style="font-family: verdana;">&nbsp; präsentiert werden
können. Zeilen,
die nicht
mit einem Satz ver­bunden sind, sollten am Anfang die Angabe "0|"
haben oder aber das Zeichen '|' nicht enthalten. Die ausgewählte
Zeile
geht
dann in die interne Variable über und kann beliebig weiter
verwertet
werden. Im
FLEX sieht das so aus:</span><br style="font-family: verdana;">
</small>&nbsp;</p>
<p><span style="font-family: &quot;Courier New&quot;;"><span style="">&nbsp; </span>ViewListe
anzeigen:</span><br>
<b style=""><span style="font-family: &quot;Courier New&quot;;">View
</span></b><i style=""><span style="font-family: &quot;Courier New&quot;;">dateiname<span style="">&nbsp; </span></span></i><span style="font-family: &quot;Courier New&quot;;"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;</span></span>(<i style="">Achtung:</i> <span style="font-family: &quot;Courier New&quot;;">View</span>
mit großem V, sonst keine
Anzeige, sondern nur Dateiöffnung)<span style="font-family: &quot;Courier New&quot;;"><br>
<span style="">&nbsp; </span>Es
wurde [Esc]
gedrückt:</span><br>
<b style=""><span style="font-family: &quot;Courier New&quot;;" lang="EN-US">if
cancel jump xxx</span></b><br>
<span style="font-family: &quot;Courier New&quot;;" lang="EN-US"><span style="">&nbsp;
</span></span><span style="font-family: &quot;Courier New&quot;;">Es
wurde eine
Zeile ausgewählt
(mit
Enter oder [OK]): in #uaw kopieren</span><br>
<b style=""><span style="font-family: &quot;Courier New&quot;;">ins
#uaw</span></b><br>
<span style="font-family: &quot;Courier New&quot;;">...</span></p>
<p>&nbsp;<br>
In <span style="font-family: &quot;Courier New&quot;;">#uaw</span>
hat man anschließend die ausgewählte Zeile aus
der ViewList und kann damit beliebig umgehen.</p>
<p><i style="">Tip: </i>Um eine
bestimmte ViewListe, die man vorher produziert hat, erneut zu sehen,
kann man
sie auch manuell aufrufen:<span style="">&nbsp; </span>man
gibt im
Schreibfeld ein</p>
<p><b style=""><span style="font-family: &quot;Courier New&quot;;">v</span></b><span style="font-family: &quot;Courier New&quot;;"> <i style="">dateiname</i></span></p>
<p>&nbsp;</p>
<p><b style="">Verbesserungen von
ASORT</b><br>
Das DOS-Sortierprogramm ASORT.EXE wurde so
verbessert, daß
es die Aufgaben des View-Konzepts wahrnehmen kann, wenn auf DOS-Ebene
eine
ViewListe hergestellt werden soll:</p>
<p>&nbsp;Option<span style="">&nbsp;&nbsp;&nbsp;
</span><b style=""><span style="font-family: &quot;Courier New&quot;;">-u3</span></b></p>
<p>beseitigt die
Kategorie #u1 <i style="">und</i> verwandelt #u2 in
eine reine
Textzeile</p>
<p>(Option <b style=""><span style="font-family: &quot;Courier New&quot;;">-u1</span></b>
würde nur<span style="">&nbsp; </span>#u1<span style="">&nbsp; </span>weglassen,
<b style=""><span style="font-family: &quot;Courier New&quot;;">-u1</span></b>
dagegen beseitigt&nbsp; #u1 und #u2)</p>
<p>&nbsp;Option&nbsp;&nbsp; <b style=""><span style="font-family: &quot;Courier New&quot;;">-r</span></b><span style="font-family: &quot;Courier New&quot;;"></span></p>
<p>sorgt für umgekehrte
Sortierung
(wird im Standardpaket nicht ausgenutzt).</p>
<p>&nbsp;Ältere Versionen (vor dem 7.8.2000) dieses
Programms sind
nicht brauchbar für die View-Technik.</p>
<p><b style=""><span style="font-size: 12pt;">&nbsp;</span></b></p>
<b style=""><span style="font-size: 12pt; font-family: &quot;Times New Roman&quot;;"><a name="wie"></a><br style="page-break-before: always;" clear="all"></span></b>
<p style="font-family: verdana;"><small><b style=""><span style="font-size: 12pt;">Wie
erstellt und nutzt man
eine ViewListe?</span></b><span style="font-size: 12pt;"></span></small></p>
<p style="font-family: verdana;"><small>Dazu
gibt es
mehrere Möglichkeiten, die mit fertigen Parametern und FLEXen
unterstützt
werden. Weitere Methoden und Varianten lassen sich entwickeln, wenn man
die
Bausteine erst einmal beherrscht (siehe oben).</small></p>
<p><small><span style="font-family: verdana;">Zuerst
braucht man
eine </span><b style="font-family: verdana;">Ergebnismenge</b><span style="font-family: verdana;">. Wie man eine macht,
wissen Sie. Was darin ist und wie groß sie ist, spielt keine
Rolle. Der
Name
steht dann unten auf der langen Schaltfläche, wie immer. Was macht
man,
um eine
"Neue Sicht" dieser Daten zu erhalten? Man ruft das View-Menü auf.
Am schnellsten mit Eingabe von&nbsp; </span><a style="font-family: verdana;" href="flex:h%20view">h
view</a><span style="font-family: verdana;">&nbsp;
im Schreibfeld
oder auch Punkt "Views" im Menü "Ansicht". Es kommt dann das
folgende Auswahlmenü:</span></small><br>
</p><p><br>
<table style="text-align: left; margin-left: auto; margin-right: auto; width: 957px; height: 336px;" cellpadding="0" cellspacing="0"> <tbody> <tr>
<td style="vertical-align: top; text-align: left;"><span style=""><img alt="a99/alcarta : Views" src="vwmenu.gif" height="310" width="521"></span></td>
<td style="vertical-align: top;">&nbsp;&nbsp;&nbsp;
<br> <p style="text-align: center; font-family: verdana;"><small>Für
schnelle ad-hoc-Listen
ist der
Punkt</small></p> <p style="text-align: center; font-family: verdana;"><small><span style="">&nbsp;<b style="">Neue
ViP anlegen</b></span></small></p> <p style="text-align: center; font-family: verdana;"><small><span style=""></span><b style=""><u><span style="color: black;">Mit
Formular</span><span style="color: black;"></span></u></b></small></p>
<p style="text-align: center; font-family: verdana;"><small>am
wichtigsten. Weiter unten
ist das Formular abgebildet.</small></p> <p style="text-align: center; font-family: verdana;"><small>Mit
Doppelklick auf </small></p> <p style="text-align: center; font-family: verdana;"><small>HILFE..HILFE..HILFE&nbsp;&nbsp;&nbsp;
(rechts oben, hier nicht
zu sehen)</small></p> <p style="text-align: center; font-family: verdana;"><small>kann
man eine ausführliche
Version
dieses Menüs anfordern. <br>
Darin sind die einzelnen Funktionen
genauer
erklärt.</small></p> <br> </td> </tr> </tbody>
</table><br style="" clear="all">
<small><span style="font-family: verdana;">Geben Sie
im Schreibfeld ein:&nbsp;
</span><b style="font-family: verdana;">h view </b><span style="font-family: verdana;">, dann
erscheint in
der Anzeige dieses Menü:</span></small></p>
<small><span style="font-family: verdana;">Eine <b style="">ViP</b>
ist eine <b style="">Vi</b>ew-<b style="">P</b>arameterdatei,
also
eine Vorschrift zum Erstellen der ViewListe.</span></small>
<p style="font-family: verdana;"><small><i style=""><span style="">Tip:</span></i><span style=""> Geben Sie<span style="">&nbsp;&nbsp;
</span></span><b style="">h
view.rtf</b><span style=""><span style="">&nbsp;
</span>ein,
dann sieht man auch die zu den
Menüpunkten gehörenden FLEXe.</span></small></p>
<p style="font-family: verdana;"><small><span style="">Das Menü
hat links die
Funktionen zum <b style="">Erstellen</b> neuer
ViewListen, rechts die
zur <b style="">Benutzung</b> vorhandener
ViewListen.</span></small></p>
<p style="font-family: verdana;"><small><span style="">Der Reihe nach:</span></small></p>
<p><span style="">&nbsp;</span></p>
<p style="font-family: verdana;"><small><b style=""><span style="font-size: 13pt;">ViewListen
erstellen</span></b></small></p>
<p style="font-family: verdana;"><small><b style=""><span style="font-size: 12pt;"></span><u>Mit
Standard-ViPs</u></b><span style="">&nbsp;
</span>(Ein Doppelklick
genügt und alles läuft
automatisch ab)</small></p>
<p style="font-family: verdana;"><small>Hier wird
der FLEX<span style="">&nbsp;
</span><b style="">view1<span style="text-transform: uppercase;">.</span>flx
</b><span style="">&nbsp;</span>gestartet
bzw. <b style="">view2<span style="text-transform: uppercase;">.</span>flx</b>.
Die ViPs<span style="">&nbsp; </span><b style="">v-stand1.apr</b>
bzw. <b style="">v&#8209;stand2.apr</b>
werden
dabei benutzt (Normaler View bzw. mit Gruppierung und Summierung).<span style="">&nbsp; </span></small></p>
<p style="font-family: verdana;"><small>Für Views,
die immer
wieder
gebraucht werden, kann man ein- für alle mal einige durchdachte
Parameterdateien anlegen und dann Kopien des FLEX<span style="">&nbsp;
</span>view1.flx<span style="">&nbsp;
</span>oder view2.flx
nutzen, um jeweils die
aktuelle Ergebnismenge damit zu betrachten. Nur den Namen der eigenen
Parameterdatei muß man darin einsetzen. </small></p>
<p style="font-family: verdana;"><small>Die
Parameterdateien<span style="">&nbsp; </span>v-stand1.apr
und v-stand2.apr
kann man als Vorlage oder Strickmuster für eigene ViPs verwenden.<span style="">&nbsp; </span>Die Stellen sind markiert
und kommentiert,
wo man modifizieren kann. </small></p>
<p style="font-family: verdana;"><small>Den
einschlägigen
Parameterdateien sollte man Namen der Form<span style="">&nbsp;
</span>V-*.cPR<span style="">&nbsp; </span>geben.</small></p>
<p style="font-family: verdana;"><small>Wer die
Exportsprache
beherrscht,
hat hier alle gewohnten Gestaltungsmöglichkeiten.</small></p>
<p>&nbsp;</p>
<p><b style=""><u>Mit eigener
ViP</u></b><span style="">&nbsp; </span>(dahinter
steckt der
Aufruf:<span style="">&nbsp; </span><span style="font-family: &quot;Courier New&quot;;">X view0.flx )</span></p>
<p><span style="font-family: &quot;Courier New&quot;;">view0.flx</span>
ermöglicht die
Auswahl
einer vorhandenen ViP (wenn man schon mehrere geeignete
Parameterdateien des Typs<span style="">&nbsp; </span><span style="font-family: &quot;Courier New&quot;;">V&#8209;*.cPR
</span>hat) und führt
dann damit die Produktion durch. Wer sich mit der Exportsprache
auskennt, kann
auch jede ViP modifizieren, ausbauen und verfeinern.</p>
<p>&nbsp;</p>
<p><b style=""><u>Neue ViP
anlegen:<span style="">&nbsp; </span>Mit
Formular</u> </b><span style="">&nbsp;</span>(Für
Einsteiger das Einfachste, um eigene
Wünsche zu verwirklichen)</p>
<p>Über ein
Eingabeformular kann man
vorgeben, aus welchen Bestandteilen die ViewListe zusammengesetzt
werden soll.
Hier braucht man keine Parametrierkenntnisse, dafür sind die
Möglichkeiten
nicht ganz so weitreichend. Immerhin: es <i style="">entsteht</i>
jedes Mal automatisch eine Parameterdatei, die man hernach auch
aufbewahren,
verfeinern oder erweitern (mehr als 6 Datenfelder ausgeben lassen!) und
dann über "<span style="text-decoration: underline;">Mit
eigener
ViP</span>" wieder nutzen kann. </p>
<p>(dahinter steckt der
Aufruf:<span style="">&nbsp; </span><span style="font-family: &quot;Courier New&quot;;">X viewform.flx )</span></p>
<p>Das Formular sieht so
aus: (F1
erklärt, was zu beachten ist)</p>
<table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2"> <tbody> <tr>
<td style="vertical-align: top;"><img src="vwform.jpg" height="356" width="512">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br> </td> <td style="vertical-align: top;">
<p style="font-family: verdana;"><span style="font-size: 9pt;">Hier
wurde eingegeben, daß #75 (Verlag) das erste Feld sein soll,
begrenzt
auf 15 Zeichen. Nach diesem Feld wird also sortiert und auch gruppiert
(unter "Gruppierung" ist j eingetragen). Zusätzlich werden #20
(Titel)
und #76 (Jahr) ausgegeben. Das Feld #95 enthält einen Geldbetrag
und
soll mit 5 Stellen und 2 Nachkommastellen ausgegeben werden. Es wird
dann summiert, sowohl nach Gruppen als auch insgesamt.<br> </span></p>
<h1 style="margin: 0cm 0cm 0.0001pt;"><br> <span style="font-family: &quot;CG Omega&quot;;"></span></h1> <h1 style="margin: 0cm 0cm 0.0001pt;"><br> </h1> <h1 style="margin: 0cm 0cm 0.0001pt; text-align: right;"><span style="font-family: &quot;CG Omega&quot;;">&nbsp;&nbsp;&nbsp;
F1 bringt Hilfe!</span></h1> <p><span style="font-size: 9pt;"></span></p> </td>
</tr> </tbody>
</table><p><br>
</p><p style="font-family: verdana;"><small>Dieses
Formular ist
in der
Datei<span style="">&nbsp;&nbsp; </span>view2.frm
<span style="">&nbsp;</span>definiert.
Die Eingaben kommen in Variablen
#uvA - #uvZ und werden vom FLEX<span style="">&nbsp; </span>viewform.flx<span style="">&nbsp;
</span>dann zu einer Parameterdatei verarbeitet.
Diese wird benutzt, um die Ergebnismenge in eine ViewListe zu
verwandeln. Wer
jedoch Parametrierkenntnisse hat, kann in den Eingabezeilen "Feld 1"
bis "Feld mit Zahl" auch Manipulationsbefehle mit unterbringen, z.B.<span style="">&nbsp; </span>#20
e" : ", damit vom
Feld #20 (Sachtitel) der Zusatz abgeschnitten wird.</small></p>
<p>&nbsp;<br>
<small><b style="font-family: verdana;"><u>Neue
ViP anlegen:
Mit Parametern</u> </b><span style="font-family: verdana;">(für </span><i style="font-family: verdana;">Allegrologen </i><span style="font-family: verdana;">,
man braucht hierfür Parametrierkenntnisse)</span></small></p>
<p>(Start:<span style="">&nbsp;
</span><span style="font-family: &quot;Courier New&quot;;">x
var
"Start"\ins #uYa\var "X viewpara.flx"\ins #uZa\h viewpara</span><span style=""><span style="">&nbsp; </span>)</span></p>
<p style="font-family: verdana;"><small>Der dann
erscheinende
Hilfetext
(Datei VIEWPARA.RTF)
sieht so aus:</small></p>
<p>&nbsp;</p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;">Wählen
Sie
die
Kategorien, die in Ihrer ViewListe
erscheinen sollen<br>
(Alt+y :
dann
sehen Sie links die Liste aller Kategorien.)<br>
Wenn
fertig; auf
&nbsp;<b style=""><u><span style="color: blue;">Start</span></u></b>&nbsp;
doppelklicken
oder <b style="">Strg+s</b>.<br>
Schreiben
Sie für
jede gewünschte Kategorie eine Zeile, dahinter geeignete
Manipulationsbefehle,<br>
z.B. so:</span></p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;"><span style="">&nbsp;
</span>***<span style="">&nbsp;&nbsp;
</span>Zeilen für die <b style="">ViewListe</b>
(alles in Variable #uvv kopieren!)</span></p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;">#40
e20
=vv<br>
#20 U e40
p": " Avv<span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Gruppierung
gewuenscht<br>
#76
e5
p" (" P")" Avv<br>
#77
x"*1" e"." p"_" Avv<span style="">&nbsp;&nbsp;&nbsp;&nbsp;
</span>Summierung
gewuenscht<br>
<span style="">&nbsp;
</span>***<span style="">&nbsp;
</span>Ende ViewZeilen</span></p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;">#+D<br>
<span style="">&nbsp;&nbsp;
</span>Zeilen für die <b style="">Tabellen-Ausgabe</b>:
(#uxV ist
die
ViewZeile)</span></p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;">#-Q<br>
#uxV +-
c'0t|'
B'|' f' |' e0<br>
#uxV
c'0a|' B'|'
f' |' F' '</span></p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;"><span style="">&nbsp;
</span>*** Tabellenkategorien<br>
#20<br>
#t9<br>
#40<br>
#t9<br>
#76<br>
#t9<br>
#77</span></p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;"><span style="">&nbsp;
</span>*** Ende Tab.Kateg.</span></p>
<p><span style="font-size: 9pt; font-family: &quot;Courier New&quot;;">#uxV
c's|'
B'|' f'
|' F' '</span></p>
<p style="font-family: verdana;"><span style="font-size: 9pt;">Aber
nehmen Sie die
Beispielzeilen zwischen *** ... *** weg, denn jede Zeile wird
verarbeitet, die
mit '#' beginnt. Günstig ist, wenn die Gesamtlänge nicht
größer als 80
Zeichen
ist.</span></p>
<p><span style="font-size: 9pt;"><!--[if !supportEmptyParas]-->
</span><small><br style="font-family: verdana;"><i style="font-family: verdana;"><span style="font-size: 9pt;">Tips:</span></i></small></p>
<p style="font-family: verdana;"><small><span style="font-size: 9pt;">1.
Ist Gruppierung
gewünscht; dann<span style="">&nbsp; </span>":"<span style="">&nbsp;
</span>zwischen
dem ersten und zweiten Feld (s.o. #20)</span></small></p>
<p style="font-family: verdana;"><small><span style="font-size: 9pt;">2.
Ist Summierung
gewünscht: "_" vor dem
letzten Element, das dann als Zahl interpretiert wird (s.o. #77).</span><span style="font-size: 9pt;"></span></small></p>
<p style="font-family: verdana;"><small><span style="font-size: 9pt;">&nbsp;</span></small></p>
<p style="font-family: verdana;"><small><span style="font-size: 9pt;">Die
Kategoriezeilen, die man
hier eingibt (mit '#' beginnend), werden anschließend als
Mittelteil
der
ViP<span style="">&nbsp; </span>verwendet.</span></small></p>
<p style="font-family: verdana;"><small>Wenn man auf<span style="">&nbsp;
</span><b style=""><u>Start</u></b><span style="">&nbsp; </span>doppelklickt,
wird VIEWPARA.FLX gestartet und der Text im
Anzeigefeld verarbeitet.</small></p>
<p style="font-family: verdana;"><small><span style="">&nbsp;</span>(Den
Befehl X viewpara kann
man auch mit der Hand im Schreibfeld
eingeben, um dies auszulösen.)</small></p>
<p style="font-family: verdana;"><small><i style="">Tip: </i>will man
die
in der aktuellen Sitzung zuletzt betrachtete ViewListe erneut sehen: im
Schreibfeld eingeben<span style="">&nbsp; </span></small></p>
<p style="font-family: verdana;"><small>x view
again</small></p>
<p style="font-family: verdana;"><small>Die neu
entstehenden ViewListen
haben bei diesen
Prozeduren
immer den Namen VVV.VW.
Anschließend hat man die Möglichkeit, ihr
einen anderen Namen zu geben und damit für eine längere
Aufbewahrung zu
sorgen.</small></p>
<p>&nbsp;<br>
<small><span style="font-family: verdana;">Und jetzt
zu den Funktionen
auf der rechten Seite
des Menüs:</span></small></p>
<p style="font-family: verdana;"><small>&nbsp;<br>
<b style=""><span style="font-size: 11pt; color: purple;">ViewListen
benutzen</span></b>
</small></p><p style="font-family: verdana;"><small><b style=""><span style="font-size: 9pt; color: black;">Aktuelle
ViewListe =</span></b><span style="font-size: 9pt;">
<b style=""><span style="color: red;">liste</span></b></span></small></p>
<p style="font-family: verdana;"><small>&nbsp;<b style=""><u>neu
anzeigen</u><br>
</b>Dieser Punkt löst den FLEX-Befehl<span style="">&nbsp;
</span>View
again<span style="">&nbsp; </span>aus, worauf
die ViewListe
wieder erscheint. Dasselbe kann man mit Strg+o erreichen, weil der
Befehl
automatisch auf diese Kombination gelegt wird. (Das passiert in der
Datei view.rtf)</small></p>
<p style="font-family: verdana;"><small><b style=""><u>exportieren</u><span style="">&nbsp;
</span></b>(dahinter
steckt der Aufruf:<span style="">&nbsp; </span>X
viewexp.flx )<b style=""><br>
</b>Die Datensätze der ViewListe werden in der Reihenfolge der
Liste
exportiert. Man wird gefragt, mit welchen Parametern das geschehen soll
und in
welche Datei. Es kommen hierfür, wenn die Liste anschließend
gedruckt
werden
soll, die Para­meter­dateien der Struktur P-*.APR in Betracht,
grundsätzlich
kann aber jede Export-Parameterdatei gewählt werden. Zusammen mit
der
Möglichkeit, die Sortierung der ViewListe einzustellen, hat man
somit
einen
vollen Ersatz für die alte <b style=""><i style="">CockPit</i></b>-Methodik
der <b style="">Listenproduktion</b> (Kap. 6 des
Handbuchs). Mehr dazu siehe unten.</small></p>
<p style="font-family: verdana;"><small><b style=""><u>als
Tabelle ausgeben</u><span style="">&nbsp;
</span></b>(dahinter steckt der Aufruf:<span style="">&nbsp;
</span>X
viewtab.flx )</small></p>
<p style="font-family: verdana;"><small>Der zweite
Teil der ViP tritt in Kraft: Es werden die
gewählten Datenfelder in voller Länge exportiert, jeweils mit
einem
bestimmten
Trennzeichen dazwischen. Meistens wird man das TAB-Zeichen dafür
wählen,
deshalb ist es voreingestellt (Code 9). Die entstehende Ausgabedatei
hat
denselben Namen wie die ViewListe, nur mit dem Typ<span style="">&nbsp;
</span><b style="">.vt</b>
.</small></p>
<p style="font-family: verdana;"><small><b style=""><u>Vorhandene
ViewListen</u> </b>sichten, löschen, umbenennen<span style="">&nbsp;
</span>(Aufruf:<span style="">&nbsp; </span>X
viewold.flx )</small></p>
<p style="font-family: verdana;"><small>Die auf dem
TEMP-Verzeichnis noch
vorhandenen ViewListen (Typ .VW) werden zur Auswahl gezeigt. Jede davon
kann
man sich sofort anzeigen lassen, löschen oder umbenennen.</small></p>
<p style="font-family: verdana;"><small><i style="">Hinweis</i>:
Es versteht sich von selbst, daß eine ViewListe, einmal
erstellt, eine statische, von der Datenbank losgelöste Textdatei
ist
und daher
nach kurzer Frist veraltet sein kann (sie hat keinerlei funktionale
Verbindung
mit der Datenbank). Ist die ViP noch vorhanden, kann man eine ViewListe
aber
jederzeit schnell erneuern. </small></p>
<p style="font-family: verdana;"><small><b style="">&nbsp;</b></small></p>
<p style="font-family: verdana;"><small><b style="">Einen View
exportieren = Eine sortierte Liste produzieren</b></small></p>
<p style="font-family: verdana;"><small>Hat man
gerade einen
View
erstellt, kann man mit dem neuen FLEX-Befehl<span style="">&nbsp;
</span><b style="">download
view</b><span style="">&nbsp; </span>die
zum View
gehörigen
Datensätze in der
durch den View gegebenen Reihenfolge exportieren. Benutzt dazu werden
die
aktuell eingestellten Exportparameter. Mit dem <a href="flex:h%20xxport"><b style="">xport</b></a>-Befehl
kann man natürlich vorher die Ausgabedatei und/oder die
Exportparameter
auch
anders einstellen.</small></p>
<p style="font-family: verdana;"><small>Die mit 'X'
markierten Zeilen
werden nicht exportiert. Ansonsten wird jede Zeile der ViewListe
verarbeitet,
auch diejenigen, die keine Satznummer haben: In den Exportparametern
hat man
immer die aktuelle View-Zeile in der Variablen <b style="">#uxV</b>
und kann diese darauf prüfen, ob sie mit einer Zahl beginnt, z.B.
mit
den
Zeilen<span style="">&nbsp; </span>(siehe auch
Kommentar in
v-stand2.apr)</small></p>
<p style="font-family: verdana;"><small>&nbsp;<br>
<big><span style="font-family: monospace;">#uxV
+A x"&gt;0" e0</span></big></small></p>
<p style="font-family: verdana;"><small>... hier
die Befehle für den Fall, daß kein
Datensatz vorliegt, sondern z.B. eine Überschrifts- oder
Summenzeile<br>
#+#</small></p>
<p style="font-family: verdana;"><small><big><span style="font-family: monospace;">#-A</span></big><span style="">&nbsp;&nbsp;
</span>hier
geht's weiter, wenn ein Datensatz vorliegt</small></p>
<p style="font-family: verdana;"><small>&nbsp;</small></p>
<p style="font-family: verdana;"><small>Ist eine
ViewListe xyz.vw
vorhanden, egal wie
und
wann sie erzeugt wurde, kann man jederzeit in einem FLEX schreiben:</small></p>
<p style="font-family: monospace;"><b>view xyz.vw</b><br>
<b>down view</b>
</p><p style="font-family: verdana;"><small>um
den Export auszulösen. </small></p>
<p style="font-family: verdana;"><small>Mit&nbsp;
<b style=""><big><big><span style="font-family: monospace;">View xyz.vw&nbsp;</span></big></big>&nbsp;
</b><span style=""></span>kann
man die
ViewListe wieder betrachten.</small></p>
<p style="font-family: verdana;"><small><b style="">View-Erstellung in
eigene FLEXe einbauen</b></small></p>
<p><small><span style="font-family: verdana;">In
den FLEXen&nbsp;
view1.flx&nbsp;
und view2.flx
sieht man, wie es
gemacht wird. Diese Dateien sind ausführlich kommentiert, damit
man
sieht, wo
eingegriffen werden kann. FLEXologen können diese Grundmodelle
beliebig
ausbauen.</span><br style="font-family: verdana;">
</small><br></p>
</body></html>