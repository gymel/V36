<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>



  
  
  <meta content="text/html; charset=ISO-8859-1" http-equiv="content-type">




  
  
  
  
  <title>Schnell mal eben - allegro-Tricks</title>
  <meta content="Eversberg" name="author">
</head>


<body>



<h1 style="text-align: center; color: rgb(204, 0, 0);"><span style="font-style: italic; font-family: Verdana;">allegro-C</span><br>



</h1>



<h1 style="text-align: center; color: rgb(51, 102, 255);"><span style="color: rgb(51, 0, 153); font-family: Verdana;">Schnell mal eben ...</span><br>



</h1>



<h1 style="text-align: center; color: rgb(51, 102, 255);"><small><font face="Verdana">Trick 17 - 77</font></small></h1>



<div align="right">(aus der E-Mail-Liste ab 31.10.2006)</div>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">17
-&nbsp; <a style="text-decoration: underline;" href="#17">Suche
in einer Textdatei</a>&nbsp;</span></font><font face="Verdana">
(schnell eine Angabe in einer TXT-Datei
finden)</font><font face="Verdana"><span style="font-weight: bold; color: rgb(0, 102, 0);"><br>



18 -&nbsp; <a style="text-decoration: underline;" href="#18">Datum
ausrechnen</a></span> (verschiedene M&ouml;glichkeiten)</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"><br>



19 -&nbsp; <a style="text-decoration: underline;" href="#19">Das Ende
der Such-Verzweiflung</a></span>
(Doku- und E-Mail-Texte finden)</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"><br>



20 -&nbsp; <a style="text-decoration: underline;" href="#20">Eieruhr</a></span>
(Signal nach einer bestimmten Zeit)<br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">21
-&nbsp; <a style="text-decoration: underline;" href="#21">Schau'mer
mal</a></span> (Dateiverzeichnisse besichtigen)<br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">22
-&nbsp; <a style="text-decoration: underline;" href="#22">Zwischenablage</a></span>
(bequeme Kopie aus dem Anzeigefeld)</font><font face="Verdana"><span style="font-weight: bold; color: rgb(0, 102, 0);"><br>



23 -&nbsp; <a style="text-decoration: underline;" href="#23">Nostalgietrip</a></span>
(schnell mal eben ein DOS-Fenster)<br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">24
-&nbsp; <a style="text-decoration: underline;" href="#24">Per
FLEX neue Erg.Menge aus Satznummern anlegen</a></span> </font><font face="Verdana"><span style="font-weight: bold; color: rgb(0, 102, 0);"><br>



25 -&nbsp; <a style="text-decoration: underline;" href="#25">Kalenderdatum
ausw&auml;hlen lassen</a></span>
(f&uuml;r beliebige Zwecke)<br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">26
-&nbsp; <a style="text-decoration: underline;" href="#26">Kann
man in alcarta F5 abschalten?</a></span> (d.h. Internanzeige verhindern)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana"><span style="font-weight: bold; color: rgb(0, 102, 0);">
27 -&nbsp; <a style="text-decoration: underline;" href="#27">IMPORT.EXE
soll mehrere Dateien auf einmal
verarbeiten</a></span> <br style="font-weight: bold; color: rgb(0, 102, 0);">



</font><font face="Verdana"><span style="font-weight: bold; color: rgb(0, 102, 0);">28
-&nbsp; <a style="text-decoration: underline;" href="#28">Aktuellen
Satz als Ergebnismenge nehmen</a></span> (also nur 1 Satz)<br style="font-weight: bold; color: rgb(0, 102, 0);">



</font><font face="Verdana"><span style="font-weight: bold; color: rgb(0, 102, 0);">29
-&nbsp; <a style="text-decoration: underline;" href="#29">Kalender
als Startbild</a></span> <br style="font-weight: bold; color: rgb(0, 102, 0);">



</font><font face="Verdana"><span style="font-weight: bold; color: rgb(0, 102, 0);">30
-&nbsp; <a style="text-decoration: underline;" href="#30">Private
LOG-Datei</a></span> (automatisch eigene Aufzeichnungen machen)<br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">31
-&nbsp; <a style="text-decoration: underline;" href="#31">FLEX-Verschachtelung</a></span>
(FLEX aus FLEX aufrufen und r&uuml;ckspringen)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana"><span style="font-weight: bold; color: rgb(0, 102, 0);">32
-&nbsp; <a style="text-decoration: underline;" href="#32">LOG-Datei
besichtigen</a></span> (was steht momentan drin?)<br>



</font><font face="Verdana"><span style="font-weight: bold; color: rgb(0, 102, 0);">33
-&nbsp; <a style="text-decoration: underline;" href="#33">Volltextsuche
in eigenen FLEX einbauen</a></span> (Erg.Menge per RegEx bilden)<br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
34 -&nbsp; <a style="text-decoration: underline;" href="#34">Grunddatei
mit RegEx durchsuchen</a></span>
(ALG-Datei verarbeiten)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
35 -&nbsp; <a style="text-decoration: underline;" href="#35">Gleichlautende
Flips</a></span>
(... und es geht doch!)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">36 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#36">Umcodierung testen</a></span>
(Index-, Anzeige-, Exportparameter, p/q-Befehle)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
37 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#37">Das
Feld ohne Eigenschaften</a></span>
(Anzeigefeld, onprop.flx)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">38 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#38">Opulente Hierarchien</a></span>
(Mehrere Formulare f&uuml;r hierarch. Unters&auml;tze)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
39 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#39">Dopplung
mit Doppeltrick</a></span>
(Erg.Menge bzw. Gesamtbank verdoppeln)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
40 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#40">Alles
entladen</a></span>
(Gesamte Datenbank exportieren)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">41 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#41">Auf die Schnelle ne
Tabelle</a></span>
(mit FLEX spaltenrichtige Listen)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">42 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#42">Persistente
Ergebnismenge</a></span>
(Erg.Menge dauerhaft aufbewahren)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">43 -&nbsp; <a style="text-decoration: underline;" href="#43">Zwischendurch und
nebenbei: Objekt 2</a></span>
(Zweiten Datensatz laden/benutzen)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
44 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#44">Textdateien
umcodieren</a></span>
(z.B. ASCII -&gt; ANSI oder umgekehrt)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">45 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#45">Versionskontrolle</a></span>
(Hat der Anwender eine zu alte/neue Version?)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">46 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#46">Alle Felder #nn
durcharbeiten</a></span></font><font face="Verdana"> (Ohne zu wissen,
wieviele und welche es gibt)</font><br style="color: rgb(0, 102, 0); font-weight: bold;">



<font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">47 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#47">L&auml;ngsten/k&uuml;rzesten
Satz finden</a></span>
(in der gesamten Datenbank)<br style="color: rgb(0, 102, 0); font-weight: bold;">



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
48 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#48">Pr&auml;zisions-Ersetzungen</a></span>
</font><font face="Verdana">(In Zeichenfolgen an bestimmten Positionen
etwas austauschen)</font><br style="color: rgb(0, 102, 0); font-weight: bold;">



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
49 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#49">Mehr
Mobilit&auml;t</a></span>
</font><font face="Verdana">(Fliegender Wechsel des
Arbeitsverzeichnisses)</font><br style="color: rgb(0, 102, 0); font-weight: bold;">



<font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">50 -&nbsp; <a style="text-decoration: underline;" href="#50">Datensatz umtopfen</a></span>
</font><font face="Verdana">(in eine andere .ALD-Datei derselben
Datenbank)</font><br style="color: rgb(0, 102, 0); font-weight: bold;">



<font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">51 -&nbsp; <a style="text-decoration: underline;" href="#51">Gesetzt den Fall...</a></span>
</font><font face="Verdana">(Werte vorbesetzen, insbes. Flags, zur
Verwendung in FLEXen)</font><br style="color: rgb(0, 102, 0); font-weight: bold;">



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
52 -&nbsp; <a style="text-decoration: underline;" href="#52">Dateien
abklappern</a></span>
</font><font face="Verdana">(Liste von Dateien nacheinander durchsehen
und etwas damit tun)</font><br style="color: rgb(0, 102, 0); font-weight: bold;">



<font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">53 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#53">Qual der Verzeichniswahl</a></span>
</font><font face="Verdana">(Ordner ausw&auml;hlen. ExtraTrick: 2 oder
mehr Dateitypen gleichzeitig zur Wahl)</font><br style="color: rgb(0, 102, 0); font-weight: bold;">



<font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">54 -&nbsp; <a style="text-decoration: underline;" href="#54">Von Rechts wegen...</a></span>
</font><font face="Verdana">(Beim Start pr&uuml;fen, ob Nutzer
Schreibrecht hat)</font><br style="color: rgb(0, 102, 0); font-weight: bold;">



<font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">55 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#55">Schnelle Rechenhilfe</a></span>
</font><font face="Verdana">(Lange Listen von Zahlen abarbeiten mit
minimaler manueller Eingabe)</font><br style="color: rgb(0, 102, 0); font-weight: bold;">



<font face="Verdana">
</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">56
-&nbsp; <a style="text-decoration: underline;" href="#56">Ordnung im
Feld</a></span>
</font><font face="Verdana">(Mehrfacheintr&auml;ge innerhalb eines
Feldes alphabetisch ordnen)</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
<br>



57 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#57">Sauberes
Filtern</a></span>
</font><font face="Verdana">(Dateien verarbeiten ohne unfreiwillige
Umcodierung)</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
<br>



58 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#58">Strategie
der kleinsten Schritte</a></span>
</font><font face="Verdana">(Datei Byte f&uuml;r Byte lesen und
verarbeiten)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
59 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#59">Superschnelles
Einspeisen</a></span>
</font><font face="Verdana">(gro&szlig;er Mengen neuer Datens&auml;tze)</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"><br>



60 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#60">Wiederholungstaten</a></span>
</font><font face="Verdana">(Alles &uuml;ber Schleifen in FLEX)<br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
61 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#61">Druckregler</a></span>
</font><font face="Verdana">(Wechsel der Druckparameter w&auml;hrend
der Sitzung)</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
<br>



</span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">
63 -&nbsp; <a style="text-decoration: underline;" href="#63">Das
Wichtigste zuerst</a></span>
</font><font face="Verdana">(Beim Start sofort den Index erscheinen
lassen)</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"><br>



64 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#64">FLEXiermaschine</a></span>
</font><font face="Verdana">(1. FLEX ohne Datenbank? / 2. Jedem User
seinen _start.flx)<br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">65 -&nbsp; <a style="text-decoration: underline;" href="#65">Umrechenwerk</a></span>
</font><font face="Verdana">(Hex, Dez, Oct, Bin, Vig... Zahlensysteme
umrechnen)<br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">66 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#67">Daten aus dem Off</a></span>
</font><font face="Verdana">(Offline-Speicher genauer inspizieren)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">67 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#67">Schnellz&auml;hlung</a></span>
</font><font face="Verdana">(Wieviele Eintr&auml;ge sind im Index unter
xyz?)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">68
-&nbsp; <a style="text-decoration: underline;" href="#68">Gibt's ein
Verzeichnis f&uuml;r das Ereignis?</a></span>
</font><font face="Verdana">(Pr&uuml;fen, ob Pfad c:\abc\xyz existiert)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">69 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#69">Schiebereien mit Maus</a></span>
</font><font face="Verdana">(Feldinhalt manuell ordnen per Verschiebung
mit Maus)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">70 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#70">FLEXoFlip oder
FlippoFLEX</a></span>
</font><font face="Verdana">(Flips per FLEX erzeugen)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">71
-&nbsp;&nbsp;<a style="text-decoration: underline;" href="#71">Cambio</a></span>
</font><font face="Verdana">(Fremdw&auml;hrungen in Euro umrechnen)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">72 -&nbsp; <a style="text-decoration: underline;" href="#72">Bedenke wohl die letzte
Zeile ...</a></span>
</font><font face="Verdana">(Was steht am Ende einer Textdatei?)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">73 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#73">Datumsverdru&szlig;</a></span>
</font><font face="Verdana">(Unbrauchbare Datumsangaben standardisieren)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">74 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#74">Globale Dollarkrise</a></span>
</font><font face="Verdana">(Den $ &uuml;berall ersetzen)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">75 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#75">Index &auml;ndern on-the-fly</a></span>
</font><font face="Verdana">(Bestimmte Eintr&auml;ge &auml;ndern ohne "Index erneuern")</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">76 -&nbsp;&nbsp;<a style="text-decoration: underline;" href="#76">Erweiterter Aktionsradius</a></span>
</font><font face="Verdana">(Erg.Menge samt verkn&uuml;pften S&auml;tzen durcharbeiten)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">77 -&nbsp; <a style="text-decoration: underline;" href="tricks.htm#77">RAK = Register-Abschnitts-Kopie</a></span>
</font><font face="Verdana">(Reg.Abschnitt in eine andere Indexdatei kopieren)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">78 - &nbsp;</span></font><font face="Verdana"><a href="#78"><span style="font-weight: bold;">Variable Variablen</span></a> (mit vorher unbekannten Namen, die sich aus Datens&auml;tzen ergeben)</font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">79 -&nbsp;&nbsp;</span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><a style="font-weight: bold;" href="#79">Gezielter Rauswurf</a> von Mehrfachfeldern (L&uuml;ckenbeseitigung bei HFM-Feldern)</font><font face="Verdana"></font><br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br style="color: rgb(0, 102, 0); font-weight: bold;">



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font>
<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font>
<hr style="width: 100%; height: 2px;"><font face="Verdana"><br>



<br>



<span style="color: rgb(0, 102, 0); font-weight: bold;">
<a name="17"></a>Trick 17: Suche in einer Textdatei</span><br>



<br>



Aufgabe: Schnell mal eben aus irgendeiner Textdatei (Parameter,<br>



CFG oder was immer) eine bestimmte Angabe rausfischen, per FLEX.<br>



<br>



Jemand warf z.B. die Frage auf, ob man irgendeine Einstellung, die in<br>



der INI-Datei steht, im Programm abfragen k&ouml;nne.<br>



Manche der Werte sind ja als Sondervariablen zug&auml;nglich, andere<br>



aber nicht, so z.B. die Angabe NewMode oder PageSize.<br>



Was tun?<br>



Dazu gen&uuml;gt ein FLEX-Einzeiler, und der sieht so aus:<br>



<br>



</font><big><span style="font-family: monospace;">
x var Fa99.ini\var (b"~newmode=" e"^M" e" ")</span><font style="font-family: monospace;"><br>



</font></big><br>



<font face="Verdana">???<br>



<br>



Mit&nbsp; Var Fa99.ini&nbsp; holt man die gesamte Datei a99.ini
in die iV.<br>



Mit&nbsp; var (b"~newmode="&nbsp; wird die iV auf das
beschr&auml;nkt, was hinter<br>



der Zeichenkette NewMode= steht, das ~ bewirkt, da&szlig;
Gro&szlig;/klein dabei<br>



nicht relevant ist.<br>



Und e"^M" schneidet am Zeilenende und am n&auml;chsten Leerzeichen
ab, denn<br>



man will ja nur die Angabe hinter dem = haben, nicht den ganzen Rest<br>



der Datei. (die Zeichen ^ und M gibt man einzeln ein, nicht Strg+M)<br>



<br>



Wer noch wei&szlig;, da&szlig; FLEX von "flexibel" kommt, den
wundert sowas<br>



nicht... Und auf INI begrenzt ist es klarerweise auch nicht,<br>



denn hinter dem F darf irgendein Dateiname stehen. Nur nicht<br>



gr&ouml;&szlig;er als 256 K darf sie sein.<br>



ZusatzTip: Mit sho IV kann man das Ergebnis im Anzeigefeld sehen.<br>



<br>



----------------------------------------------------------------------<br>



<br>



<a name="18"></a>
<span style="font-weight: bold; color: rgb(0, 102, 0);">Trick
18: Datum ausrechnen</span><br>



<br>



Wie rechnet man schnell mal eben ein Datum aus?<br>



Z.B. bei folgenden Fragen:<br>



<br>



1. Welches Datum haben wir heute in 100 Tagen? (Die Frage kommt immer<br>



&nbsp;&nbsp;&nbsp; bei einem Regierungsantritt hoch!)<br>



<br>



2. Welches Datum ist 53 Tage vor Weihnachten?<br>



<br>



3. Auf welches Datum fiel Ostern 1900?<br>



<br>



4. Wieviele Tage sind verstrichen seit dem 11.9.2001?<br>



<br>



<br>



Das geht so:<br>



<br>



1. </font><big><span style="font-family: monospace;">X Day +100\mes</span></big><font face="Verdana"><br>



<br>



2. </font><big style="font-family: monospace;">x Day 20061225-53\mes</big><font face="Verdana"><br>



<br>



3. </font><big><span style="font-family: monospace;">X
gauss&nbsp;&nbsp; oder&nbsp;&nbsp; X kalender</span></big><font face="Verdana"><br>



<br>



4. </font><big style="font-family: monospace;">x day
20061102-20010911\mes</big><font face="Verdana"><br>



<br>



<br>



----------------------------------------------------------------------<br>



<br>



<a name="19"></a>
<span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
19 : Das Ende der Such-Verzweiflung</span><br>



<br>



1. Aufgabe: Man will schnell mal eben was finden, was mal irgendwann<br>



&nbsp;&nbsp; irgendwo in irgendeinem allegro-Papier gestanden
hat oder in<br>



&nbsp;&nbsp; einer E-Mail aus der Liste - aber wo?<br>



<br>



L&ouml;sung:&nbsp; In das Schreibfeld eingeben:<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://www.allegro-c.de/az.htm">www.allegro-c.de/az.htm</a><br>



<br>



Oben links ist ein neues Eingabefeld, mit dem dann nichts anderes als<br>



eine Google-Suche in der allegro-Dom&auml;ne incl. E-Mail-Liste
ausgel&ouml;st<br>



wird. Klar, man konnte ja schon l&auml;ngst in Google nach
allegro-Listen-<br>



Inhalten suchen! Die gingen dann aber mitunter unter.<br>



<br>



<br>



2. Aufgabe: Eben mal schnell bei der Library of Congress was<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
nachschauen<br>



<br>



L&ouml;sung:&nbsp;
<span style="font-family: Courier New,Courier,monospace;">http://catalog.loc.gov&nbsp;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp; Katalogdaten<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp; &nbsp; <span style="font-family: Courier New,Courier,monospace;">http://authorities.loc.gov</span>&nbsp;&nbsp;&nbsp;&nbsp;
Normdaten<br>



<br>



<br>



Pfiffige LeserInnen schlie&szlig;en messerscharf, und es stimmt
sogar:<br>



Ins Schreibfeld kann man auch jede andere g&uuml;ltige URL<br>



eingeben. Ung&uuml;ltige kann man auch eingeben, aber auf<br>



eigene Gefahr ...<br>



Wenn die URL mit www. anf&auml;ngt, kann man auf http:// verzichten.<br>



<br>



Was da in Wahrheit passiert, ist dies: a99 merkt, da&szlig; die
Eingabe<br>



kein g&uuml;ltiges Datenfeld ist. Dann reicht es die Eingabe weiter<br>



an den FLEX&nbsp; onerror.flx. Der stellt fest: Oho, eine URL! Und
reicht<br>



sie weiter an JanaS.<br>



Nun gibt's da aber diejenigen, die an der Stelle nicht JanaS wollen,<br>



sondern ihren StandardBrowser. Dann ist&nbsp; onerror.flx&nbsp;
so zu &auml;ndern:<br>



<br>



</font><big><span style="font-family: monospace;">
:www</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
var "start http://" #uxE</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
Dos</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
var ""</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
end</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">
:http</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
var "start " #uxE</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
Dos</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
var ""</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
end</span></big>
<font face="Verdana"><br>



--------------------------------------------------------<br>



<br>



<a name="20"></a>
<span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
20 : Eieruhr</span><br>



<br>



<span style="font-style: italic;">
Aufgabe:</span> Man will in 5 Minuten ein dezentes Signal, weil dann<br>



irgendwas wichtiges nicht verpa&szlig;t werden darf. Wie kann man<br>



sowas schnell mal eben arrangieren, wenn keine Eieruhr zur Hand ist?<br>



<br>



<span style="font-style: italic;">
L&ouml;sung: </span>Im Schreibfeld folgendes eingeben<br>



<br>



x slice 300000=1x mes ACHTUNG!<br>



<br>



???<br>



5 Minuten sind 300000 Tausendstelsekunden (5 * 60 * 1000).<br>



Die 1 bedeutet, da&szlig; das Signal nur 1mal kommen soll und<br>



nicht etwa alle 5 Minuten - was passieren w&uuml;rde, wenn<br>



man i (f&uuml;r "immer") hinschreibt statt 1.<br>



Da Signal besteht in einer MessageBox mit dem Inhalt ACHTUNG, die<br>



dann p&uuml;nktlich aufgeht. Mit "Mes" statt "mes" kommt eine
weniger<br>



aufdringliche Box in der linken oberen Ecke, die dann nach 10 Sek.<br>



von selber wieder verschwindet.<br>



Hinter dem x kann aber auch irgendein anderer FLEX stehen.<br>



W&auml;hrend der 5 Minuten kann man ansonsten unbek&uuml;mmert
weiterarbeiten.<br>



<br>



Mehr dazu:&nbsp; h xsleep<br>



<br>



Kompliziertere Anwendung:&nbsp; h memo<br>



(mit V26 verbessert und auch in die N-Datenbank eingebaut)<br>



<br>



Empfehlung: Die memo-Anwendung an der DemoBank ausprobieren und<br>



bei Bedarf auch mit dieser zusammen einsetzen, um die eigene DB<br>



damit nicht zu befrachten)<br>



<br>



--------------------------------------------------------<br>



<br>



<a name="21"></a>
<span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
21 : Schau'mer mal</span><br>



<br>



<span style="font-style: italic;">
Aufgabe:</span> schnell mal eben schauen, was auf dem Arbeitsverzeichnis<br>



so alles herumliegt. Oder auf einem anderen. Ohne Explorer.<br>



<br>



<span style="font-style: italic;">
L&ouml;sung:</span><br>



</font><span style="font-family: monospace;">&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; d a &nbsp;&nbsp; &nbsp;eingeben - die Liste
der Dateien erscheint</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;
aber es gibt noch mehr:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
d d&nbsp; &nbsp; &nbsp;Datenverzeichnis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
d p&nbsp; &nbsp; &nbsp;Programmverzeichnis<br>



&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;d f &nbsp; &nbsp; FLEX-Verzeichnis<br>



&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;d html &nbsp;HTML-Verzeichnis</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
d t&nbsp;&nbsp; &nbsp; Tempor&auml;res Verzeichnis&nbsp;
&nbsp;</span><font face="Verdana"><br>



<br>



Leichter zu merken ist: nur&nbsp; d eingeben und dann w&auml;hlen.<br>



<br>



Aber Sie wollen NOCH mehr, z.B.<br>



Welche CFG-Dateien auf dem Arb.Verz. rumliegen?<br>



<br>



dir *.cfg&nbsp;&nbsp; eingeben - wie im DOS-Fenster<br>



<br>



Aber man bekommt dann nicht nur diejenigen auf dem Arb.Verz., sondern<br>



auch auf dessen Unterverzeichnissen vorgelegt, sauber geordnet.<br>



W&auml;hlt man eine aus, kann man sie gleich anzeigen lassen,
editieren,<br>



l&ouml;schen, umbenennen, kopieren. F&uuml;r solche Zwecke
mu&szlig; man also <br>



nicht mehr zwingend in den Explorer oder in das DOS-Fenster gehen...<br>



<br>



Aber wenn es nicht das Arb.Verz. sein soll, sondern c:\daten?<br>



<br>



Dann:&nbsp; dir c:\daten&nbsp;&nbsp; oder z.B.&nbsp;
dir c:\daten\*.cfg<br>



<br>



und man sieht alle Dateien auf c:\daten bzw. alle dort liegenden<br>



CFG-Dateien, plus diejenigen auf allen Unterverzeichnissen, die<br>



an c:\daten dranh&auml;ngen. Tja.<br>



(Beachte: hier keine Verdopplung des \ !)<br>



<br>



F&uuml;r Neugierige:<br>



Dahinter steckt dirs.flx, aufgerufen von onerror.flx.<br>



<br>



--------------------------------------------------------<br>



<br>



<a name="22"></a>
<span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
22 : Zwischenablage</span><br>



<br>



<span style="font-style: italic;">
Aufgabe: </span>Schnell mal eben alles, was im Anzeigefeld steht, in die<br>



Zwischenablage kopieren, damit man es gleich danach in ein Word-<br>



Dokument einkopieren kann.<br>



<br>



L&ouml;sung 1:&nbsp; Ins Anzeigefeld klicken und Strg+a Strg+c<br>



<br>



L&ouml;sung 2:&nbsp; Wenn man das sehr oft machen will, dann
dies eingeben:<br>



<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
#uX9 x ccopy d<br>



<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Dann braucht man nur jeweils&nbsp; Alt+9&nbsp; zu
dr&uuml;cken, um dasselbe<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
zu erreichen. Und dazu braucht man nicht erst in das<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Anzeigefeld zu klicken.<br>



<br>



Dann wie gewohnt in Word o.a. den Cursor an die richtige Stelle und <br>



Strg+v - voil&agrave;!<br>



<br>



<br>



--------------------------------------------------------<br>



<br>



<a name="23"></a>
<br>



<span style="font-weight: bold; color: rgb(0, 102, 0);">Trick
23 : Nostalgietrip</span><br>



<br>



<span style="font-style: italic;">
Aufgabe:</span> Schnell mal eben ein DOS-Fenster aufmachen<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(korrekter: eine "Eingabeaufforderung" &ouml;ffnen)<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Denn der Weg &uuml;ber "Start / Programme / Zubeh&ouml;r" ist
zu lang.<br>



<br>



<span style="font-style: italic;">
L&ouml;sung:</span>&nbsp; Dos cmd&nbsp;&nbsp; eingeben (im
Schreibfeld von a99)<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Man ist dann schon automatisch in seinem Arbeitsverzeichnis<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
und kann dort tun und lassen, was man will...<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Im DOS-Fenster&nbsp; exit&nbsp; eingeben, dann geht's wieder zu.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(Bleiben Sie locker, dabei geht nichts kaputt!)<br>



<br>



Wenn man im DOS-Fenster nicht (mehr) recht wei&szlig;, was
f&uuml;r Befehle man<br>



da geben kann: Im F&uuml;llhorn gibt es den Punkt "Befehlsliste"
neben<br>



"MS-DOS". Da steht alles drin.<br>



<br>



Wer im Dos-Fenster nur ein bestimmtes Programm starten will, kann<br>



auch dessen Namen, mit "Dos " davor, ins Schreibfeld eingeben!<br>



Versuchen Sie mal den vollkommen ungef&auml;hrlichen Befehl "Dos
cp". <br>



(Tip: mit Alt+x kommen Sie da wieder raus, falls Sie das Ding noch<br>



&nbsp;nie gesehen haben...)<br>



<br>



--------------------------------------------------------<br>



<br>



<a name="24"></a>
<br>



<span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
24: Per FLEX neue Erg.Menge aus Satznummern anlegen</span><br style="color: rgb(0, 102, 0); font-weight: bold;">



<br>



<br>



<span style="font-style: italic;">
Aufgabe: </span>1. Mehrere einzelne Satznummern zu einer Erg.Menge vereinigen<br>



&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2. Einen ganzen
Bereich von Satznummern zusammenfassen<br>



<br>



<span style="font-weight: bold;">
1. Mehrere einzelne Nummern</span><br>



Der Befehl find #a,b,c geht nur bei avanti, um aus den Satznummern<br>



a,b,c eine Ergebnismenge zu machen. Das kommt, weil a99 das '#'<br>



als Aufforderung deutet, sich NUR um die dahinter stehenden Satznummer<br>



zu k&uuml;mmern und sonst gar nichts, wobei eine bestehende Erg.Menge<br>



unangetastet bleibt.<br>



<br>



Und so kann man a99 austricksen:<br>



<br>



find per xyz or #a,b,c<br>



<br>



xyz ist ein nicht existenter Name, d.h. der erste Teil<br>



des Befehls liefert die leere Menge. Das "or" wird dennoch<br>



ausgef&uuml;hrt, wie man ja auch erwartet, und an der Stelle<br>



klappt dann die Angabe #a,b,c!<br>



Es ist sogar m&ouml;glich, statt "per" irgendeinen nicht<br>



existenten Registernamen zu verwenden. Es funktioniert<br>



z.B. auch<br>



find ... ... or #a,b,c<br>



<br>



Was hinter "find" steht, kann auch vorher per var "..."<br>



aufbereitet werden, dann in der n&auml;chsten Zeile nur "find"<br>



<br>



<span style="font-weight: bold;">
2. Ganze Nummernbereiche</span><br>



Wenn man die S&auml;tze 1000 bis 2000 als Erg.Menge haben will, ist<br>



Methode 1 ungeeignet. Im DOS-Programm PRESTO war es ganz einfach:<br>



<br>



</font><span style="font-family: monospace;">&nbsp; Anzeigebildschirm
mit ganz beliebigem Satz</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; x #1000 eingeben: Satz
1000 erscheint</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; (&nbsp;&nbsp; tippen -
Nummer 100 wird gemerkt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; x #2000 eingeben: Satz
2000 erscheint</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; )&nbsp; tippen - fertig
ist die Ergebnismenge!</span><br style="font-family: monospace;">



<font face="Verdana"><br>



Anders, aber nicht schwieriger ist es mit a99 - man macht es jetzt so:<br>



(ab V28.4)<br>



<br>



</font><span style="font-family: monospace;">X ergnum</span><br style="font-family: monospace;">



<span style="font-family: monospace;">Eine Eingabezeile erscheint,
"Satznummern? (z.B. 1000-2000)"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">1000-2000&nbsp;&nbsp; eingeben</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fertig, die Erg.Menge erscheint.</span><br style="font-family: monospace;">



<font face="Verdana"><br>



Der Trick steckt also im neuen FLEX ergnum.flx. Der ist gar nicht mal<br>



so lang, hier haben wir den wichtigen Teil, samt Kommentar:<br>



<br>



&nbsp; -----------------------------------------------------<br>



&nbsp; ERGNUM.FLX : Ergebnismenge aus Nummernbereich bilden<br>



&nbsp; 2008-05-21<br>



&nbsp; ...<br>



</font><span style="font-family: monospace;">ask Satznummern? (z.B.
1000-2000)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if "" end</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #unE</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if not %-% mes BINDESTRICH
FEHLT;end</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Zaehler auf den
Anfangswert setzen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">Z=#unE</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Datei f. externe Erg.Menge
oeffnen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">open x x.set</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Ueberschrift</span><br style="font-family: monospace;">



<span style="font-family: monospace;">wri "Saetze " #unE n</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Schleife zur Abarbeitung
von #unE bis #unL</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Satznummer schreiben, neue
Zeile</span><br style="font-family: monospace;">



<span style="font-family: monospace;">wri Z n</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; erhoehen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">Z+1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if Z&lt;#unL jump loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; #unL ist erreicht, dann
Datei zumachen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">close x</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; und einlesen als ext.
Erg.Menge</span><br style="font-family: monospace;">



<span style="font-family: monospace;">read set x.set</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; zeigen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">show list</span><br style="font-family: monospace;">



<span style="font-family: monospace;">end</span><br style="font-family: monospace;">



<font face="Verdana">&nbsp;
--------------------------------------------------------<br>



<br>



Es wird also, und das ist der Trick, eine Datei x.set angelegt, in der<br>



dann nichts anderes steht als eine &Uuml;berschriftszeile und dann die<br>



Liste der Nummern von 1000 bis 2000. So eine Datei entsteht auch, wenn<br>



man &uuml;ber das Men&uuml; "Datei / DOS-Programm" PRESTO aufruft und
damit dann<br>



eine Ergebnismenge per F4 ausgibt. Mit&nbsp; read set x.set&nbsp; kann
man<br>



die sog. "externe Erg.Menge" einlesen - ob sie nun von PRESTO angelegt<br>



wurde oder sonstwie.<br>



<br>



--------------------------------------------------------<br>



<br>



<a name="25"></a>
<br>



<span style="font-weight: bold; color: rgb(0, 102, 0);">Trick
25: Kalenderdatum ausw&auml;hlen lassen</span><br>



<br>



<span style="font-style: italic;">
Aufgabe:</span> Der Nutzer soll ein Datum eingeben. Damit dabei kein<br>



&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Fehler passiert, soll die Kalenderfunktion zum Einsatz kommen.<br>



<br>



<span style="font-style: italic;">
L&ouml;sung:</span> Im Datenverzeichnis einen FLEX&nbsp;
term.flx&nbsp; bereitstellen, dann<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
mit&nbsp; exec kalender&nbsp; die Kalenderfunktion aufrufen. <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Wenn der Nutzer ein Datum anklickt, wird term.flx gestartet,<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
und zwar mit der Tageszahl in der iV und dem Monat in der Form <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</font><span style="font-family: monospace;">JJJJMM</span><font face="Verdana">&nbsp; in der Variablen </font><span style="font-family: monospace;">#uU1</span><font face="Verdana"><br>



<br>



Nat&uuml;rlich kann es sein, da&szlig; man im DbDir schon eine
andere term.flx<br>



zu liegen hat. Wie man dies dann l&ouml;st, kann man am Beispiel<br>



</font><span style="font-family: monospace;">
nel.flx</span><font face="Verdana"><br>



studieren. Alles ausf&uuml;hrlich kommentiert.<br>



Die DemoBank hat einen FLEX namens&nbsp; term.flx, wo man die
Nutzung<br>



exemplarisch sehen kann.<br>



<br>



<br>



--------------------------------------------------------<br>



<br>



<a name="26"></a>
<span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
26: Kann man in alcarta F5 abschalten?</span><br style="color: rgb(0, 102, 0); font-weight: bold;">



<br>



Das nicht, aber man kann in den Anzeigeparametern den Abschnitt<br>



<span style="font-family: Courier New,Courier,monospace;">
#-(</span><br>



so &auml;ndern, da&szlig; dann etwas erscheint, was der Nutzer
sehen darf<br>



oder soll.<br>



Im einfachsten Fall:<br>



<br>



</font><span style="font-family: monospace;">
#-(</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
#uzp +C c"alc" e0</span><br style="font-family: monospace;">



<font face="Verdana">
&nbsp; Rest unver&auml;ndert belassen<br>



...<br>



<br>



Dann braucht man keine eigenen Anzeigeparemeter f&uuml;r alcarta,<br>



denn #uzp ist nur in alcarta mit "alc" belegt, und dann passiert<br>



bei F5 eben scheinbar nichts, weil #-C der Startpunkt f&uuml;r die<br>



Normalanzeige ist.<br>



<br>



---------------------------------------------------------<br>



<br>



<a name="27"></a>
<span style="font-weight: bold; color: rgb(0, 102, 0);">Trick
27 : IMPORT.EXE soll mehrere Dateien auf einmal verarbeiten</span><br style="font-weight: bold; color: rgb(0, 102, 0);">



<br>



Beim Indexieren geht es mit Option&nbsp; <span style="font-family: Courier New,Courier,monospace;">-d*xyz</span><br>



und dann werden alle Dateien, deren Namen mit xyz beginnen,<br>



genommen und indexiert.<br>



<br>



Beim Importieren geht das nicht. Warum? Weil der * dabei auch<br>



als erstes Dateinamenzeichen eingesetzt werden kann, um alle<br>



Dateien zu zeigen, deren Namen mit irgendeinem Zeichen beginnen.<br>



(So etwas hat man beim Indexieren nie gebraucht.)<br>



<br>



Dennoch ist es m&ouml;glich. Das Problem wurde vor sehr langer Zeit<br>



bereits gel&ouml;st und die L&ouml;sung war daher in
Vergessenheit<br>



geraten. Einsichtnahme in die alten Quellen legte den<br>



altmodischen Trick wieder frei:<br>



<br>



Man nimmt + statt *&nbsp; -- Dann geht's.<br>



<br>



Also z.B.<br>



<br>



</font><span style="font-family: monospace;">
&nbsp; import -f5 -d+xyz*.?lg ...</span><br style="font-family: monospace;">



<font face="Verdana"><br>



Damit erwischt man alle Dateien, deren Namen mit xyz beginnen<br>



und deren Typ ?lg ist (.alg, .blg, ...)<br>



<br>



Korrektur der online-Doku wird erfolgen. <br>



<br>



-------------------------------------------------------------<br>



<br>



<a name="28"></a>
<span style="font-weight: bold; color: rgb(0, 102, 0);">Trick
28 : Aktuellen Satz als Ergebnismenge nehmen</span><br style="font-weight: bold; color: rgb(0, 102, 0);">



<br>



Aufgabe: Eine bequeme Funktion, um den aktuellen Satz zur Ergebnismenge<br>



&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
zu machen (die dann also nur aus diesem einen Satz besteht)<br>



<br>



L&ouml;sung:&nbsp; In&nbsp; onf8.flx&nbsp; gibt es
bereits die beiden Funktionen<br>



</font><span style="font-family: monospace;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
+ : Aktuellen Satz zur Erg.Menge hinzunehmen</span><span style="font-family: monospace;"><br>



&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;
- : Aktuellen Satz aus Erg.Menge herausnehmen</span><br style="font-family: monospace;">



<font face="Verdana">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Um diese noch zu erweitern, erg&auml;nzt man zun&auml;chst eine
neue<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Zeile VOR diesen beiden. In onf8.flx sieht das dann so aus:<br>



<br>



</font><span style="font-family: monospace;">
var + n "Aktuellen Satz als Erg.Menge nehmen (nur diesen einen!)"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
var + n "+ : Aktuellen Satz zur Erg.Menge hinzunehmen"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
var + n "- : Aktuellen Satz aus Erg.Menge herausnehmen"</span><br style="font-family: monospace;">



<font face="Verdana"><br>



Sodann, einige Zeilen tiefer, ist ein Sprungbefehl zu erg&auml;nzen:<br>



(die mittlere dieser drei Zeilen)<br>



<br>



</font><span style="font-family: monospace;">
if "h" Fam;end</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
if "Aktu" jump akterg</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
if "A" help alfa;end</span><br style="font-family: monospace;">



<font face="Verdana"><br>



Und ganz am Ende f&uuml;gt man diese Zeilen an:<br>



<br>



</font><span style="font-family: monospace;">
:akterg</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
var "or #" i</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
find</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
end</span><br style="font-family: monospace;">



<font face="Verdana"><br>



Fertig! Mit F8 a Enter bildet man nun nach Belieben eine Erg.Menge aus<br>



dem aktuellen Satze, mit F8 + Enter&nbsp; bzw.&nbsp; F8 -
Enter&nbsp; erg&auml;nzt man einen<br>



weiteren Satz zur Erg.Menge bzw. nimmt ihn wieder heraus - das war ja<br>



bisher schon drin und bleibt unver&auml;ndert.<br>



<br>



SuperTip: Um diese &Auml;nderungen vorzunehmen, k&ouml;nnen Sie
onf8.flx im<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Anzeigefeld bearbeiten:<br>



--&nbsp; h onf8.flx&nbsp;&nbsp; eingeben<br>



--&nbsp; &Auml;nderungen vornehmen (copy&amp;paste aus
dieser Mail heraus)<br>



--&nbsp; Alt+s&nbsp; (Speichern) und Button [Speichern]<br>



<br>



Nachtrag<br>



Die Geschichte mit der Bildung einer Ergebnismenge aus nur einem<br>



einzigen Satz und dem Hinzuf&uuml;gen weiterer S&auml;tze ist
nicht<br>



vollst&auml;ndig ohne folgende Hinweise:<br>



<br>



Manuell gibt es zwei Methoden, eine Erg.Menge aus nur einem<br>



Satz zu bilden:<br>



<br>



1. Im Register kann man jede Zeile mit nur einem Eintrag zu<br>



&nbsp;&nbsp;&nbsp; einer Erg.Menge mit nur diesem einen
Satz machen, wenn<br>



&nbsp;&nbsp;&nbsp; man den Button [Erg] dr&uuml;ckt,
oder Alt+e<br>



&nbsp;&nbsp;&nbsp; Weitere S&auml;tze oder auch die zu
einer Mehrfachzeile geh&ouml;rigen<br>



&nbsp;&nbsp;&nbsp; Eintr&auml;ge f&uuml;gt man mit
/ hinzu = Button [Oder]<br>



<br>



2. Wenn man die "Lesezeichen" ansonsten nicht braucht, kann man<br>



&nbsp;&nbsp;&nbsp; diese Funktion ersatzweise heranziehen,
sie ist dann bequemer<br>



&nbsp;&nbsp;&nbsp; als die (gestern geschilderte) mit F8:<br>



&nbsp;&nbsp;&nbsp; -- Zuerst mit Besen die Lesezeichen
wegfegen<br>



&nbsp;&nbsp;&nbsp; -- den gew&uuml;nschten Satz mit
Button [Lesezeichen] behandeln<br>



&nbsp;&nbsp;&nbsp; -- weitere S&auml;tze desgleichen.<br>



&nbsp;&nbsp;&nbsp; -- Mit dem Button rechts neben
Lesezeichen aktiviert man die<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Sonder-Erg.Menge namens "Lesezeichen", d.h. sie wird gezeigt<br>



&nbsp;&nbsp;&nbsp; per FLEX:&nbsp; find s1&nbsp;
macht die Lesezeichen zur aktuellen Erg.Menge<br>



&nbsp;&nbsp;&nbsp; Mit [Oder] im Index kann man die
Lesezeichen, wenn sie gerade<br>



&nbsp;&nbsp;&nbsp; die aktuelle Erg.Menge sind, erweitern -
dann entsteht aber eine<br>



&nbsp;&nbsp;&nbsp; normale Erg.Menge, und die eigentlichen
Lesezeichen bleiben<br>



&nbsp;&nbsp;&nbsp; unver&auml;ndert.<br>



<br>



Zur Erinnnerung:<br>



Jede Erg.Menge, auch die Lesezeichen, kann mit der [Entf.]-Taste<br>



(gleichwertig: [Entf]-Button) um ausgew&auml;hlte S&auml;tze
verkleinert<br>



werden. Erst bei Schlie&szlig;en des Kurzlistenfensters werden
diese dann,<br>



nicht ohne Nachfrage, tats&auml;chlich herausgenommen. Vorher
erscheint<br>



vor den betr. Zeilen nur "DEL".<br>



<br>



<br>



<br>



-------------------------------------------------------------<br>



<br>



<a name="29"></a>
<span style="font-weight: bold; color: rgb(0, 102, 0);">Trick
29 : Kalender als Startbild</span><br style="font-weight: bold; color: rgb(0, 102, 0);">



<br>



Aufgabe: Beim Start der Datenbank soll als erstes der Kalender<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
erscheinen.<br>



<br>



L&ouml;sung: in der Datei&nbsp; _start.flx&nbsp; als
letzten Befehl diese Zeile&nbsp;einbauen:<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style="font-family: Courier New,Courier,monospace;">exec kalender</span><br>



<br>



Wer die DemoBank gerne nebenbei als Werkzeug oder Testfahrzeug nutzt,<br>



kann dies in vier schnellen Schritten ausf&uuml;hren, auch wenn man
noch<br>



nie eine Zeile in eine Datei eingebaut hat:<br>



<br>



1.&nbsp; h _start.flx&nbsp; eingeben, die Datei erscheint in
der Anzeige<br>



2.&nbsp; Strg+f&nbsp; h cat&nbsp;&nbsp; : Die
Zeile&nbsp; h cat&nbsp; erscheint<br>



3.&nbsp; Diese Zeile &uuml;berschreiben durch&nbsp; exec
kalender<br>



4.&nbsp; Alt+s Enter Enter: Datei wieder speichern<br>



<br>



Zusatztip: Wer nur schnell mal eben den Kalender vom Mai 1995 sehen<br>



will, gibt ein:<br>



</font><span style="font-family: monospace; font-weight: bold;">
&nbsp;&nbsp;&nbsp;&nbsp; X kalender 199505</span><font face="Verdana"><br>



Wohlgemerkt: kein Zeichen zwischen Jahreszahl und Monat!<br>



<br>



-------------------------------------------------------------<br>



<br>



<a name="30"></a>
<br>



<span style="font-weight: bold; color: rgb(0, 102, 0);">Trick
30 : Private LOG-Datei</span><br style="font-weight: bold; color: rgb(0, 102, 0);">



<br>



Aufgabe: Jeden Satz, den man abgespeichert hat, gleich nach dem<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Speichern schnell noch eben in eine eigene Datei kopieren.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Das k&ouml;nnte sinnvoll sein, wenn man bestimmte Auswertungen<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
machen will.<br>



<br>



L&ouml;sung:&nbsp; Eingriff in den FLEX&nbsp; onput.flx<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Dieser wird beim manuellen Speichern (nicht beim Speichern<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
mit&nbsp; put&nbsp; in irgendeinem FLEX oder bei
"Global"-Aktionen!)<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ausgef&uuml;hrt.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Darin steht ein Befehl&nbsp; put<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Gleich daran anschlie&szlig;end kann man z.B. einbauen:<br>



<br>



</font><span style="font-family: monospace;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
open x +privat.log</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
wri ...</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
close x</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<font face="Verdana">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Und statt&nbsp; wri ...&nbsp; dann alles, was in der LOG-Datei
stehen<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
soll - es mu&szlig; nicht der komplette Satz sein, denn der wird<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ja eh in der normalen LOG-Datei gesichert.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Das + beim open-Befehl stellt sicher, da&szlig; die Datei
verl&auml;ngert<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
wird und nicht jedesmal &uuml;berschrieben.<br>



ZusatzTip:<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Mit&nbsp; h privat.log kann man sich jederzeit die private Datei<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
anschauen.<br>



SonderTip:<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Im Anschlu&szlig; an den put-Befehl kann nat&uuml;rlich auch
irgendwas<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ganz anderes ausgef&uuml;hrt werden...<br>



<br>



Hinweis: Im Offline-Speicher (Alt+q) sammeln sich ALLE im Verlauf<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
der Sitzung bearbeiteten Datens&auml;tze, auch die bei globalen<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Befehlen behandelten, die in einem FLEX mit put gespeicherten<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
und die noch nicht gespeicherten, aber schon ver&auml;nderten.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Mit "download off" kann man jederzeit diese Datei selber<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
in ihrem momentanen Zustand in eine ExportDatei speichern<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
lassen.<br>



<br>



-------------------------------------------------------------<br>



<br>



<br>



<a name="31"></a>
<br>



<br>



<span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
31 : FLEX-Verschachtelung</span><br style="color: rgb(0, 102, 0); font-weight: bold;">



<br>



Immer mal wieder wird gew&uuml;nscht, aus einem FLEX heraus einen<br>



zweiten aufrufen zu k&ouml;nnen, aber so, da&szlig; es nach
dessen Ende<br>



im selben FLEX weitergeht.<br>



Mit dem Befehl<br>



<br>



exec zweit<br>



:weiter<br>



<br>



wird zwar&nbsp; zweit.flx&nbsp; gestartet, aber wenn der endet,
geht <br>



es nicht mit der Zeile&nbsp; :weiter&nbsp; weiter, sondern gar
nicht,<br>



weil zweit.flx eben nicht automatisch zur&uuml;ckkehrt. (Der FLEX-<br>



Aufruf ist, programmiertechnisch gesagt, nicht rekursiv.)<br>



<br>



Es gibt zwei Tricks, um diesem scheinbaren Mangel abzuhelfen:<br>



<br>



1. include<br>



Man bindet den aufzurufenden FLEX einfach mit ein, und zwar so:<br>



<br>



</font><span style="font-family: monospace;">
include zweit.flx</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
:weiter</span><br style="font-family: monospace;">



<font face="Verdana"><br>



Dann verh&auml;lt es sich so, als st&uuml;nde der gesamte Text
des<br>



FLEXes zweit.flx an der Stelle, wo "include..." steht.<br>



Wenn zweit.flx so gestaltet ist, da&szlig; er bis zu seinem Ende<br>



l&auml;uft und dort kein Befehl "end" steht, geht es dann zwanglos<br>



mit der Zeile&nbsp; :weiter&nbsp; weiter.<br>



Nachteile: <br>



1. Gefahr, da&szlig; in zweit.flx Sprungmarken vorkommen, die es
auch<br>



in erst.flx gibt - dann passieren Fehler.<br>



2. h&ouml;chstens bei sehr gro&szlig;en FLEXen eine
Einbu&szlig;e an<br>



Leistung. Der interne Speicher f&uuml;r die auszuf&uuml;hrende
FLEX-Datei<br>



ist 64K gro&szlig;, dabei z&auml;hlen Kommentare nicht mit. Das ist eine<br>



Menge. Der l&auml;ngste mitgelieferte FLEX ist files.flx mit 18K,<br>



aber inclusive Kommentare!<br>



<br>



<br>



2. R&uuml;ckaufruf des ersten FLEXes<br>



Nichts spricht dagegen, in einem aufgerufenen FLEX einen weiteren<br>



exec-Aufruf unterzubringen, um den ersten wieder fortzusetzen.<br>



Das k&ouml;nnte etwa so aussehen:<br>



Wenn der aufrufende FLEX etwa&nbsp; erst.flx&nbsp; hei&szlig;t,
schreiben wir<br>



oben an den Anfang <br>



<br>



&nbsp; zuerst die Variable #urC l&ouml;schen!<br>



</font><span style="font-family: monospace;">
#urC</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
ins #urC&nbsp;&nbsp;&nbsp;&nbsp; // iV-Inhalt in #urC
speichern</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
var #urC&nbsp;&nbsp;&nbsp;&nbsp; // pruefen, ob das mit
"jump" anfaengt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
if "jump" var #urC(b"jump ");jump </span><br style="font-family: monospace;">



<span style="font-family: monospace;">
...&nbsp;&nbsp; // beliebiger Inhalt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
exec zweit.flx first;weiter</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
:weiter</span><br style="font-family: monospace;">



<font face="Verdana"><br>



Und in den aufgerufenen&nbsp; zweit.flx&nbsp; schreiben wir
rein:<br>



<br>



</font><span style="font-family: monospace;">
#urC</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
ins #urC</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
if #urC jump start</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
:anfang</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
&nbsp; Normaler Anfang</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
...</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
:start</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
&nbsp; hier anfangen, wenn mit&nbsp; exec xyz&nbsp;
aufgerufen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
...</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
:rueck</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
var #urC(e";") " jump " #urC(b";")</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
exec</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<font face="Verdana"><br>



Wenn die Zeile&nbsp; :rueck&nbsp; erreicht wird, erfolgt der
R&uuml;cksprung zu<br>



erst.flx, wo die zur&uuml;ckgegebene Sprungmarke verwertet wird, um
dann<br>



dorthin zu springen. Der Aufruf lautet dann in Wirklichkeit<br>



&nbsp;&nbsp; exec jump weiter<br>



FLEXologen erkennen leicht, wie sie dies Schema weiter aufbohren<br>



k&ouml;nnen, um die Sache weiter zu FLEXibilisieren.<br>



Die Variable #urC sollte selbstredend nicht zugleich irgendwo
f&uuml;r<br>



andere Zwecke verwendet werden.<br>



<br>



Die &Uuml;bergabe von Werten ist nat&uuml;rlich immer auch mit
Variablen<br>



m&ouml;glich,&nbsp; die hier gezeigte Methode ist nur eine von
vielen<br>



denkbaren Varianten.<br>



Nachteile:<br>



1. Etwas umst&auml;ndlicher<br>



2. Die Variable #urC k&ouml;nnte zuf&auml;llig doch einmal
f&uuml;r<br>



andere Zwecke irgendwo benutzt werden, d.h. es k&ouml;nnte eine
Neben-<br>



wirkung geben. <br>



<br>



<br>



-----------------------------------------------------------<br>



<br>



<a name="32"></a>
<span style="font-weight: bold; color: rgb(0, 102, 0);">Trick
32: LOG-Datei besichtigen</span><br>



<br>



Aufgabe: Schnell mal eben schauen, was in der LOG-Datei steht.<br>



<br>



Warum sollte man das tun? Besonders dann, wenn man aus Versehen einen<br>



Satz gel&ouml;scht hat.<br>



<br>



L&ouml;sung:<br>



Auf der Quick-Liste findet man gleich zwei M&ouml;glichkeiten, aber
nur die<br>



zweite ist die echte:<br>



<br>



1. LOG-Datei: Zuletzt bearbeitete S&auml;tze zeigen<br>



----------------------------------------------<br>



Dann kommt zuerst die Supervisor-Seite (h super). Auf der gibt es<br>



als 4. Men&uuml;punkt&nbsp; "LOG-Datei besichtigen"<br>



mit zwei Unterpunkten:<br>



&nbsp;1a:&nbsp; Zuletzt bearbeitete S&auml;tze<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Damit werden die
letzten 20000 Byte der Logdatei genommen und NUR<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; die darin steckenden
bearbeiteten S&auml;tze aufbereitet und als <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Erg.Menge gezeigt.
Damit hat man die Daten NICHT so vor sich, wie<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sie wirklich in der
LOG stehen, sondern in der Datenbank. Das be-<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deutet: ein mehrfach
bearbeiteter Satz ist hier nur in seinem<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; letzten Zustand zu
sehen. Zudem: die neuen und die gel&ouml;schten<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S&auml;tze sind
dabei nicht ber&uuml;cksichtigt.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Der Punkt
m&uuml;&szlig;te hei&szlig;en: Zuletzt neu
erfa&szlig;te S&auml;tze.<br>



<br>



&nbsp;1b:&nbsp; Neue Daten von heute<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dabei wird nur die
Erg.Menge der am betr. Datum angefallenen <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NEU-S&auml;tze
gebildet! Bearbeitete und gel&ouml;schte fehlen.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (Klappt nur, wenn
das Erf.Datum im Reg, 9 unter D steht)<br>



<br>



Beides ist somit KEIN Einblick in die LOG-Datei.<br>



Diesen gew&auml;hrt NUR der zweite Punkt der Quick-Liste, und
genauso,<br>



wenn Sie im Supervisor-Men&uuml; direkt auf LOG klicken:<br>



<br>



2. LOG-Datei besichtigen (als externe Erg.Menge)<br>



------------------------------------------------<br>



&nbsp;&nbsp; Die echte LOG-Datei wird dann in eine
Offline-Datei umgewandelt<br>



&nbsp;&nbsp; und diese dann gezeigt (wie beim
Men&uuml;punkt "Weitere Offline-Datei<br>



&nbsp;&nbsp; laden".<br>



&nbsp;&nbsp; ACHTUNG: Kann l&auml;nger dauern,
abh&auml;ngig von der Gr&ouml;&szlig;e der Datei!<br>



<br>



&nbsp;&nbsp; Die S&auml;tze haben dann alle ganz vorn ein
Feld #u1, in dem ein<br>



&nbsp;&nbsp; Buchstabe steht:<br>



<br>



&nbsp;&nbsp; N : Neuer Satz<br>



&nbsp;&nbsp; K : Korrigierter Satz<br>



&nbsp;&nbsp; D : Gel&ouml;schter Satz (deleted)<br>



<br>



&nbsp;&nbsp; Und das alles genau in der Reihenfolge, wie die
Bearbeitung <br>



&nbsp;&nbsp; tats&auml;chlich gelaufen ist. Von einem
mehrfach bearbeiteten Satz <br>



&nbsp;&nbsp; findet man also alle Fassungen.<br>



&nbsp;&nbsp; Jeden dieser S&auml;tze k&ouml;nnen Sie
von der #u1 befreien, &auml;ndern und<br>



&nbsp;&nbsp; als Neusatz speichern. Das ist besonders
praktisch, wenn man einen <br>



&nbsp;&nbsp; Satz aus Versehen gel&ouml;scht hat und ihn
anders nicht mehr findet.<br>



<br>



Vorsicht:<br>



---------<br>



Wenn man die Funktion 2. benutzt, sollte man<br>



<br>



vorher den Offline-Speicher l&ouml;schen, d.h. bearbeitete
S&auml;tze zuerst<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alle
speichern und dann den Befehl&nbsp;&nbsp; x erase
off&nbsp;&nbsp; geben<br>



<br>



hinterher ebenfalls den Offline-Speicher mit&nbsp; x erase
off&nbsp; l&ouml;schen,<br>



weil sonst, wenn man nicht am Ende der Sitzung aufpa&szlig;t, der
Inhalt des<br>



Offline-Speichers insgesamt als Neus&auml;tze gespeichert
w&uuml;rde.<br>



<br>



-----------------------------------------------------------------------<br>



<br>



<a name="33"></a>
<span style="font-weight: bold; color: rgb(0, 102, 0);">Trick
33: Volltextsuche in eigenen FLEX einbauen</span><br>



<br>



Warum? FLEX ersetzt zunehmend die alten Batchdateien! Und eine der<br>



wichtigsten Komponenten in der allegro-Umgebung ist das Volltext-<br>



Suchprogramm SRCH. Mit einem ganz einfachen Aufruf:<br>



<br>



srch -f4 -s&lt;suchbegriff&gt;
-e&lt;expar&gt;/&lt;outfile&gt; ...<br>



<br>



konnte und kann man eine Datenbank volltextdurchsuchen und zugleich<br>



die Treffer in jedem gew&uuml;nschten Format exportieren lassen. <br>



Diese hochwirksame Methodik wird auch in FLEX gebraucht! Und es gibt<br>



sie jetzt:<br>



<br>



L&ouml;sung: Man baut diese Zeilen ein:<br>



<br>



</font><span style="font-family: monospace;">
#u!!&lt;suchbegriff&gt;</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
perf ftr</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
sho list</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
...</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
end</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">
include ftr.inc</span><br style="font-family: monospace;">



<font face="Verdana"><br>



<br>



Die neue Datei "ftr.inc" enth&auml;lt die komplette Prozedur
f&uuml;r die<br>



Volltextsuche in der gesamten Datenbank. Bei R&uuml;ckkehr stehen
die<br>



Ergebnisse in der aktuellen Ergebnismenge, die man sofort anzeigen<br>



lassen kann (show list) oder sonstwie verarbeiten, vor allem<br>



nat&uuml;rlich exportieren (dow set).<br>



Bei Mi&szlig;erfolg wirft&nbsp; ftr.inc&nbsp; die Meldung
"nichts gefunden" aus.<br>



Wer will, kann sie herausnehmen.<br>



Selber testen kann man den Mi&szlig;erfolg so<br>



<br>



</font><span style="font-family: monospace;">
var Z</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
if Z&lt;1 jump misserfolg</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
...</span><br style="font-family: monospace;">



<font face="Verdana"><br>



denn Z ist der Trefferz&auml;hler.<br>



<br>



Und wie steht's mit der Geschwindigkeit? Auf Systemen mit schnellen<br>



Platten ist ftr deutlich schneller als SRCH, generell aber nicht <br>



langsamer.<br>



<br>



In&nbsp; ftr.inc&nbsp; findet man die n&ouml;tigen
Kommentare. Die darin<br>



verwendeten Sprungmarken beginnen alle mit :ftr: und sind deshalb<br>



nicht in Gefahr, mit anderen im eigenen FLEX zu kollidieren!<br>



<br>



<br>



Aber was bedeutet "ftr"? Es kommt von Full Text RegEx.<br>



<br>



----------------------------------------------------<br>



<br>



<a name="34"></a>
<br>



<span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
34: Grunddatei mit RegEx durchsuchen</span><br style="color: rgb(0, 102, 0); font-weight: bold;">



<br>



Warum?<br>



Schon bisher konnte man eine Grunddatei zuerst einlesen (mit "Datei /<br>



Weitere Offlien-Datei laden") und dann mit einer Eingabe von<br>



+xyz&nbsp; im Suchbefehlsfeld durchsuchen lassen! Dies jedoch ohne<br>



die RegEx-Syntax, sondern nur automatisch mit Index-Umcodierung.<br>



<br>



F&uuml;r diese Standardaufgabe des alten SRCH gibt es jetzt auch
einen<br>



Ersatz mit der neuen RegEx-Methode.<br>



Mitgeliefert wurde daf&uuml;r eine Datei&nbsp; algsrch.inc, die das <br>



n&ouml;tige Unterprogramm enth&auml;lt.<br>



Dem Unterprogramm mu&szlig; man zwei Werte &uuml;bergeben: den
Namen der Datei<br>



und den Suchbegriff. Das geschieht mit den Variablen #u!f und #u!!.<br>



<br>



L&ouml;sung:<br>



Sagen wir, die Datei&nbsp; stuff.alg&nbsp; soll nach dem
Begriff&nbsp; xyz&nbsp; durchsucht<br>



werden. Dann braucht man im eigenen FLEX nur zu schreiben:<br>



<br>



</font><span style="font-family: monospace;">
#u!! xyz</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
#u!f stuff.alg</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
perform algsrch</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
if Z&gt;0 jump treffer</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
mes Leider nichts gefunden</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
end</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
:treffer</span><br style="font-family: monospace;">



<span style="font-family: monospace;">
...</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">
include algsrch.inc</span><br style="font-family: monospace;">



<font face="Verdana"><br>



<br>



Was man mit den Treffern macht, ist nat&uuml;rlich v&ouml;llig
frei.<br>



Mit Alt+q kann man sie durchsehen, denn sie stehen dann im<br>



Offline-Speicher. Einzelne oder alle kann man in die Datenbank<br>



speichern. Oder mit&nbsp; dow off&nbsp; alle exportieren. Damit
hat man den<br>



vollen Ersatz f&uuml;r das DOS-SRCH-Programm, das ja in vielen<br>



Batchdateien dazu genutzt wird, Grunddateien in anderem<br>



Format zu exportieren.<br>



<br>



SonderTip: Mit&nbsp; #u!! 0&nbsp; kriegt man den gesamten
Inhalt der<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Grunddatei.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(Genauso war es mit SRCH -f4 ... -s0 )<br>



</font><font face="Verdana"><br>



----------------------------------------------------------------------<br>



</font><br>



<font face="Verdana">
<a name="35"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
35: Gleichlautende Flips</span><br style="color: rgb(0, 102, 0); font-weight: bold;">



<br>



<br>



<span style="font-style: italic;">
Aufgabe: </span>Mehrere gleichlautende Flips pr&auml;sentieren, die aber <br>



unterschiedliche Dinge tun.<br>



<br>



<span style="font-style: italic;">
Was ist das Problem? </span>Flips funktionieren so, da&szlig; die sichtbare<br>



(meistens blau unterstrichene) Zeichenfolge beim Anklicken <br>



verglichen wird mit den in den Variablen #uY? hinterlegten<br>



Zeichenfolgen. Die erste &Uuml;bereinstimmung wird genommen,<br>



sagen wir #uYk. (Mit Alt+r kann man sie alle sehen und diese<br>



Dinge kontrollieren!) Dann wird #uZk hergenommen, als FLEX<br>



interpretiert und ausgef&uuml;hrt. Daher sind, einfach weil<br>



immer die ERSTE Ubereinstimmung genommen wird, gleichlautende<br>



Flips nicht m&ouml;glich - ausgef&uuml;hrt wird immer nur der erste.<br>



<br>



Der Trick besteht darin, da&szlig; der FLEX zuerst die TextZEILE<br>



auswertet, in der geklickt wurde. Und in der Textzeile mu&szlig;<br>



ein Kriterium stehen, das dann eindeutig ist und das eindeutige<br>



Funktionieren erm&ouml;glicht.<br>



Die Textzeile auswerten? Das geht mit<br>



<br>



</font><big><span style="font-family: monospace; font-weight: bold;">var zc</span></big><font face="Verdana"><br>



<br>



schon hat man sie in der iV und kann machen damit, was immer<br>



man will.<br>



<br>



Dieser Trick wird ausgenutzt in dem neuen FLEX&nbsp; </font><big style="font-weight: bold;"><span style="font-family: monospace;">xgrep.flx</span></big><font face="Verdana">,<br>



der mit V27.1 kommt. Er dient dazu ausgew&auml;hlte Textdateien<br>



zu durchsuchen mittels RegEx-Methodik, z.B. Importparameter,<br>



CFG-Dateien oder Verlautbarungen. Wenn man letztere w&auml;hlt<br>



und als Suchbegriff eingibt:&nbsp; isbn + 13<br>



dann kommt heraus:<br>



<br>



DATEI: c:\allegro\help\vb184<br>



&nbsp;&nbsp;show&nbsp; -- c:\allegro\help\vb184@309 - Ab 2007 wird eine
13stellige,...<br>



<br>



DATEI: c:\allegro\help\vb193<br>



&nbsp;&nbsp;show&nbsp; -- c:\allegro\help\vb193@84 - Man gibt die ISBN
so ein, wie sie...<br>



<br>



DATEI: c:\allegro\help\v258\vb184<br>



&nbsp;&nbsp;show&nbsp; -- c:\allegro\help\v258\vb184@309 - Ab 2007 wird
eine 13stellige, ...<br>



<br>



***** 3 Vorkommnisse von isbn + 13 gefunden <br>



<br>



<br>



Und in jeder Zeile ist "show" ein Flip - 3mal dasselbe! Es k&ouml;nnen
aber<br>



auch 100 sein oder mehr!<br>



Die Zeile enth&auml;lt aber jeweils den Dateinamen und die Zeilennummer<br>



(hinter @) innerhalb der Datei! Das ist eindeutig. Aus dem Inhalt <br>



von&nbsp; zc&nbsp; kann man also pr&auml;zise isolieren, welche Datei
es ist und<br>



welche Zeile, und der Klick auf "show" liefert genau diese Datei<br>



in der Anzeige, positioniert auf genau die Zeile.<br>



<br>



Pfiffige werfen jetzt ein: Aber zwei gleichlautende Flips d&uuml;rfen
dann<br>



nicht in derselben Zeile stehen! Doch, wenn diese gen&uuml;gend
geschickt<br>



gestaltet ist. Denn&nbsp; var zc&nbsp; liefert die Textzeile, aber an
der<br>



exakten Stelle, wo geklickt wurde, ist __ eingef&uuml;gt, daher kann<br>



der FLEX dann genau herausfinden, welcher von mehreren Flips angeklickt<br>



wurde. Wie gesagt, die Zeilengestaltung mu&szlig; daf&uuml;r gut
durchdacht<br>



sein, damit man mit Manipulationsbefehlen das Kriterium herausfischen<br>



kann, um das es geht.<br>



<br>



Wir denken, das neue&nbsp; xgrep&nbsp; wird sehr popul&auml;r werden,
auch bei<br>



jenen, die sich mit FLEX weiter nicht befassen.<br>



Die bisherige Verlautbarungssuche wird auch hinsichtlich<br>



Schnelligkeit &uuml;bertroffen.<br>



<br>



</font><font face="Verdana">----------------------------------------------------------------------<br>



</font><br>



<font face="Verdana">
<a name="36"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
36: Umcodierungen testen</span><br style="color: rgb(0, 102, 0); font-weight: bold;">



<br>



<br>



Aufgabe: Schnell mal eben pr&uuml;fen, ob eine Umcodierung korrekt<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; funktioniert.<br>



<br>



Warum?&nbsp; Im Index sieht man "mueller" statt "M&uuml;ller". Das
liegt daran,<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; da&szlig; die Sonderzeichen
&uuml;ber eine Tabelle umgewandelt werden. <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Auch in den Anzeige- und
Exportparametern gibt es solche<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Tabellen. Darin k&ouml;nnen
Fehler stecken oder unerw&uuml;nschte<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Umwandlungen, die man
&auml;ndern m&ouml;chte. Jede Parameterdatei<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kann aber zwei Tabellen
haben, die mit den p- bzw. q-<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Befehlen definiert werden.
(Handbuch 10.2.4.1)<br>



<br>



Methode 1 (schon lange existent): F7<br>



---------<br>



&nbsp;&nbsp; In irgendeinem Datensatz ein Feld eingeben, in dem die
fraglichen<br>



&nbsp;&nbsp; Sonderzeichen vorkommen. Dann F7. (Vorher speichern, wie
bei DOS,<br>



&nbsp;&nbsp; ist nicht n&ouml;tig!) Man sieht, was dabei rauskommt. <br>



&nbsp;&nbsp; In der Anzeige sieht man zudem, wie die Zeichen in den
Display-<br>



&nbsp;&nbsp; parametern umgewandelt werden.<br>



&nbsp;&nbsp; Nachteil: An dieser Stelle mu&szlig; man wissen, &uuml;ber
welche der beiden<br>



&nbsp;&nbsp; Tabellen (p oder q) das betr. Feld f&uuml;r Index bzw.
Anzeige<br>



&nbsp;&nbsp; umcodiert wird.<br>



&nbsp;&nbsp; <br>



<br>



Methode 2 (NEU in V27): Der FLEX-Befehl&nbsp; xcode<br>



----------------------<br>



&nbsp;&nbsp; Einen Befehl in dieser Form eingeben:<br>



<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x var "zeichenfolge"\xcode ab\mes<br>



<br>



&nbsp;&nbsp; Dabei gilt:<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; zeichenfolge: diejenigen Zeichen,
deren Umcodierung man<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
pr&uuml;fen will<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a: einer dieser Werte:<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d :
Display-Parameter<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x :
Export-Parameter<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i :
Index-Parameter<br>



<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b: einer dieser beiden Werte<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p : p-Tabelle
(incl. der P-Befehle)<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q : q-Tabelle
(incl. der Q-Befehle)<br>



<br>



&nbsp;&nbsp; Damit kann man nun jede Tabelle ganz gezielt und genau
testen.<br>



<br>



&nbsp;&nbsp; UND: In eigenen FLEXen kann man die Tabellenumwandlung mit
ihren<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vielen M&ouml;glichkeiten
einsetzen, um Zeichenfolgen in jeder<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; denkbaren Weise umzuwandeln.
Bisher mu&szlig;te man umst&auml;ndlich eine<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Parameterdatei mit einem
Abschnitt machen, in dem dann die<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Umcodierung ausgef&uuml;hrt
wurde. Dazu wurde der Befehl&nbsp; dow wX<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gebraucht. Jetzt ist sowas
viel leichter.<br>



<br>



&nbsp;&nbsp; Zum Ausprobieren geben Sie mal:<br>



<br>



&nbsp;&nbsp; x var "&auml;&ouml;&uuml;&szlig;&Auml;&Ouml;&Uuml;"\xcode
iq\mes<br>



&nbsp;&nbsp; und dann dasselbe mit ip .<br>



<br>



<br>



</font><font face="Verdana">----------------------------------------------------------------------<br>



</font><br>



<font face="Verdana">
<a name="37"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
37: Das Feld ohne Eigenschaften</span><br style="color: rgb(0, 102, 0); font-weight: bold;">



<br>



<br>



Frage: Wieso passiert eigentlich nichts, wenn man im Kontextmenue<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (rechte
Maustaste) des Anzeigefelds von a99 den Punkt<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Eigenschaften" w&auml;hlt?<br>



<br>



Antwort: Einerseits: Was sollte denn auch Gro&szlig;artiges passieren?<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; G&auml;be
es hier einen Bedarf, er w&auml;re doch l&auml;ngst artikuliert <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; worden!<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Andererseits: Sie
haben es selber in der Hand, an der<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stelle
genau das passieren zu lassen, was Ihnen da<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
vorschwebt: Sie schreiben erstens einen FLEX, der das<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
n&auml;mliche tut. Zweitens, und das ist nun der Trick,<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nennen Sie
diesen FLEX&nbsp; onprop.flx. <br>



<br>



Das ganze Geheimnis ist also, da&szlig; dieser Menuepunkt einer von <br>



jenen ist, die einen "On-FLEX" ausl&ouml;sen, und zwar in diesem Falle <br>



den des Namens onprop.flx.<br>



Da wir keinen solchen mitliefern - passiert bisher nichts.<br>



Wenn ein On-FLEX nicht existiert, werden FLEXperten jetzt einwerfen<br>



(denn so steht's in flex.rtf), dann gibt es eine Standard-Aktion.<br>



Richtig, bei den anderen ist das so, z.B. onprint.flx und<br>



onput.flx. Ist dieser eine Fall eine Ausnahme? Je nachdem - wenn<br>



man die leere Aktion (das Nichtstun) auch als Aktion gelten
l&auml;&szlig;t,<br>



dann nicht.<br>



Jetzt &uuml;berlegen Sie fieberhaft: Was k&ouml;nnte man da Sch&ouml;nes<br>



passieren lassen? Sehen Sie - uns ist auch noch nichts eingefallen,<br>



sonst h&auml;tten wir einen onprop.flx ja l&auml;ngst gemacht. Wir
setzen<br>



als Preis 10 Punkte f&uuml;r die Anwartschaft auf das Silberne Doppel-<br>



kreuz aus f&uuml;r denjenigen, der den originellsten onprop.flx<br>



erfindet!<br>



<br>



</font><font face="Verdana">----------------------------------------------------------------------<br>



</font><br>



<font face="Verdana">
<a name="38"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
38: Opulente Hierarchien</span></font><span style="font-family: monospace;"><br>



</span><br>



<pre style="font-family: Verdana;">Aufgabe: F&uuml;r den hierarchischen Untersatz mehr als ein Formular<br>          erm&ouml;glichen.<br><br>Warum?  Es gibt Anwendungen, wo hierarchische Unters&auml;tze einen<br>         enormen Reichtum an Datenelementen umfassen k&ouml;nnen.<br>         Ein lumpiges Formular mit 14 Feldern reicht nicht aus,<br>         man will zwei oder drei Formulare.<br><br>L&ouml;sung<br>Zuerst einmal die zus&auml;tzlichen Abschnitte in der FRM-Datei einrichten.<br>Dann: im  input.flx  gibt es f&uuml;r die hierarchischen Unters&auml;tze den<br>Abschnitt :H. Den bauen Sie wie folgt aus:<br><br><span style="font-family: monospace;">:</span><i style="font-family: monospace;">H<br></i><span style="font-family: monospace;">#01 ---</span><br style="font-family: monospace;"><span style="font-family: monospace;">sub #01 ---</span><br style="font-family: monospace;"><span style="font-family: monospace;">form Hier</span><br style="font-family: monospace;"><span style="font-family: monospace;">form teil2</span><br style="font-family: monospace;"><span style="font-family: monospace;">form teil3</span><br><br>Statt "teil2" und "teil3" aber die Namen der neuen, zus&auml;tzlichen<br>Formulare einsetzen.<br><br>W&auml;hrend der Eingabe dann das erste Formular nicht mit einem Formular-<br>wechsel zum zweiten beenden, sondern das Formularfenster mit [Ende]<br>verlassen! Die o.a. Erweiterung im input.flx sorgt dann daf&uuml;r, da&szlig;<br>das zweite und dritte Formular vorgelegt werden.<br><br>Das Problem ist, da&szlig; beim Formularwechsel innerhalb des Formularfensters<br>wieder zum Hauptsatz zur&uuml;ckgegangen wird, so da&szlig; nachfolgende Eingaben<br>dann in diesem landen statt im Untersatz. Beim Beenden des Formulars<br>dagegen wird nicht zum Hauptsatz positioniert, sondern der Auswahlbalken<br>steht dann im Untersatz, der n&auml;chste Formularaufruf &auml;ndert daran<br>nichts - die nachfolgenden Eingaben gehen also auch in den Untersatz.<br>Daraus ergibt sich auch das Folgende:<br>Achtung beim nachtr&auml;glichen Bearbeiten von Unters&auml;tzen!<br>Balken auf den Untersatz, Alt+#, erstes Untersatz-Formular w&auml;hlen.<br>Dieses mit [Ende] verlassen, wieder Alt+# und n&auml;chstes Formular w&auml;hlen.<br><br>----------------------------------------------------------------------<br></pre>



<font face="Verdana">
</font><br>



<font face="Verdana">
<a name="39"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
39: &nbsp;Dopplung mit Doppeltrick<br>



</span>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Erg.Menge bzw.
Gesamtbank verdoppeln<br>



<br>



Aufgabe: Die S&auml;tze der aktuellen Erg.Menge schnell mal eben
duplizieren<br>



Erweiterte Aufgabe: Alle S&auml;tze duplizieren.<br>



<br>



Warum? Vielleicht braucht man ja gelegentlich mal Kopien von<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bestimmten S&auml;tzen und will
sie nicht alle einzeln von<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Hand verdoppeln.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Auch wenn das nicht der Fall ist,
kann man doch aus diesem<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Problem was lernen, und wenn's nur
ist, da&szlig; nichts wirklich<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GANZ einfach ist... (OK, das
wu&szlig;ten Sie schon)<br>



<br>



L&ouml;sung:<br>



Das Kopieren eines Satzes wird nicht mit&nbsp; copy&nbsp; gemacht, denn<br>



dabei entsteht ein irritierendes Flackern, weil jeder kopierte<br>



Satz erst einmal angezeigt wird - das brauchen wir in diesem<br>



Fall ja nicht, und es kostet mehr Zeit. Es wird vielmehr Gebrauch<br>



gemacht von der neuen (ab V27.1) Spezialvariablen kn. Das ist der<br>



eigentliche Trick.<br>



Noch ein Trick: Den Befehl "put" weglassen, dann hat man die Duplikate<br>



erst mal nur im OfflineSpeicher. Mit "erase off" wird man sie<br>



dann wieder folgenlos los...<br>



Hier der komplette FLEX. Kopieren Sie ihn in eine Datei<br>



</font><span style="font-family: monospace;">
ergdopp.flx</span><font face="Verdana">, bei Bedarf zu starten
mit&nbsp; </font><span style="font-family: monospace;">X ergdopp</span><font face="Verdana"><br>



<br>



----------------------------------------------------------------------<br>



</font><span style="font-family: monospace;">&nbsp; ERGDOPP.FLX :
Verdopplung der Erg.Menge</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; 20070209</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">if empty mes Keine Erg.Menge;end</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">set e0&nbsp;&nbsp; //
EditorFehlermeldungen verhindern</span><br style="font-family: monospace;">



<span style="font-family: monospace;">first</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">:loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Satz als Ganzes in iV
kopieren</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var kn</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; leeren Neusatz anlegen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">new 0</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; iV einspeisen - d.h. Satz
kopieren</span><br style="font-family: monospace;">



<span style="font-family: monospace;">insert</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Falls hierarchischer Satz:
auf Hauptsatz schalten</span><br style="font-family: monospace;">



<span style="font-family: monospace;">first sub</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Feld #00 geeignet belegen
(klappt nicht ohne "first sub"!)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#00 dopp?5</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Datumsfelder beseitigen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#99e</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#99n</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Duplikat speichern (wenn
man das 'put' wegl&auml;&szlig;t, werden die</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp; S&auml;tze
erst mal nur im OfflineSpeicher gestapelt)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">put</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">next</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if yes jump loop</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">:exit</span><br style="font-family: monospace;">



<span style="font-family: monospace;">set e1</span><br style="font-family: monospace;">



<font face="Verdana">------------------------------------------------------------------------<br>



<br>



Und nun zur erweiterten Aufgabe. Im ersten Moment ist man versucht,<br>



den obigen FLEX herzunehmen und einfach "first #" bzw. "next #" zu<br>



schreiben. Damit h&auml;tte man ein anderes Problem gel&ouml;st: Die
Datenbank so<br>



aufbl&auml;hen, da&szlig; sie die gesamte Platte f&uuml;llt? Stimmt
nicht, denn mit<br>



next # kommt der n&auml;chste Satz, ausgehend von der momentanen Satznummer,<br>



und die ist nach dem "put" die Nummer des gerade gespeicherten Satzes. <br>



Aus demselben Grund geht es auch nicht mit last # / prev #! "Er"
w&uuml;rde<br>



pausenlos den letzten Satz kopieren.<br>



Der Trick ist deshalb eine Schleife mit einem Z&auml;hler, ausgehend vom<br>



letzten Satz bis runter zur Nummer 1. Dabei mu&szlig; man nur achten
auf die<br>



gel&ouml;schten S&auml;tze und die nicht besetzten Satznummern (wg.
Entl&uuml;ftung).<br>



ABER: Wenn es am Anfang unbesetzte Nummern gibt, werden sie besetzt, und<br>



beim R&uuml;ckw&auml;rtsz&auml;hlen kommt dann eine dieser Nummern dran
und ist<br>



pl&ouml;tzlich besetzt, mit einer Kopie! Die w&uuml;rde nochmals
kopiert, das mu&szlig;<br>



man verhindern. Der Trick ist, beim Speichern der Kopien eine IdNummer<br>



zu verpassen, an der man erkennen kann, da&szlig; es ein kopierter Satz
ist.<br>



<br>



Andererseits k&ouml;nnte man auch hier das "put" erstmal weglassen! Mit
<br>



diesem Trick w&uuml;rde man die beschriebenen Probleme vermeiden. Am
Ende <br>



dann: "Datei / Offline-Speicher -&gt; Datenbank".<br>



In diesem Fall f&uuml;hrt also mehr als ein Trick zum Ziel...<br>



<br>



Der ausget&uuml;ftelte FLEX s&auml;he insgesamt so aus:<br>



<br>



</font><span style="font-family: monospace;">&nbsp; DBDOPP:FLX :
Verdopplung der Datenbank</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; 20070209</span><br style="font-family: monospace;">



<span style="font-family: monospace;">yes Im Ernst?</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if not yes end</span><br style="font-family: monospace;">



<span style="font-family: monospace;">set e0</span><br style="font-family: monospace;">



<span style="font-family: monospace;">last #</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var i</span><br style="font-family: monospace;">



<span style="font-family: monospace;">z=</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var "#" z</span><br style="font-family: monospace;">



<span style="font-family: monospace;">f1nd</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; geloescht?</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if del jump nxt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; unbesetzte Nummer?</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if no jump nxt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #00</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ist es ein verdoppelter
Satz?</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if "dopp" jump nxt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var kn</span><br style="font-family: monospace;">



<span style="font-family: monospace;">new 0</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins</span><br style="font-family: monospace;">



<span style="font-family: monospace;">first sub</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; IdNr vorgeben setzen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#00 dopp?5</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#99e</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#99n</span><br style="font-family: monospace;">



<span style="font-family: monospace;">put</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:nxt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">z -1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Zaehler zeigen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var z</span><br style="font-family: monospace;">



<span style="font-family: monospace;">sho iv</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Abbruch ermoeglichen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">keychk</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if yes end</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if z&gt;0 jump loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:exit</span><br style="font-family: monospace;">



<span style="font-family: monospace;">set e1</span><br style="font-family: monospace;">



<font face="Verdana"><br>



</font><font face="Verdana">----------------------------------------------------------------------<br>



</font><br>



<font face="Verdana">
<a name="40"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 40: Alles
entladen</span> &nbsp; (zum Aschermittwoch 2007)<br>



</font><span style="font-family: Verdana;"></span><span style="font-family: Verdana;">Aufgabe: Schnell mal eben die gesamte
Datenbank entladen, d.h. alle</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Daten in brauchbarer Form rausschreiben in eine Datei.</span><br>



<br>



<span style="font-family: Verdana;">Warum? </span><br>



<span style="font-family: Verdana;">Entladen hei&szlig;t nicht,
da&szlig; anschlie&szlig;end nichts mehr drin ist! Das</span><br>



<span style="font-family: Verdana;">w&uuml;rde "L&ouml;schen"
hei&szlig;en, und das wird keiner wollen, sondern nur </span><br>



<span style="font-family: Verdana;">kopieren. Aber eben so, da&szlig;
jemand anders was anfangen kann damit. </span><br>



<span style="font-family: Verdana;">Denn mit allegro-Datenbankdateien
kann nicht jeder unmittelbar was</span><br>



<span style="font-family: Verdana;">anfangen. D.h. eine direkte Kopie
der Dateien n&uuml;tzt dann nichts. </span><br>



<span style="font-family: Verdana;">("Laden" und "Entladen" sind keine
allegro-Begriffe, bei anderen</span><br>



<span style="font-family: Verdana;">Systemen aber zumindest als
Metaphern nicht unbekannt. Mit dem</span><br>



<span style="font-family: Verdana;">Aschermittwoch und dem Entledigen
von allem Zweifelhaften oder</span><br>



<span style="font-family: Verdana;">Entsagen von allem potentiell
Unheilvollen, aber sogar mit dem <br>



Entlasten von obsoletem oder unn&uuml;tzen Kram hat es<br>



selbstverst&auml;ndlich </span><span style="font-family: Verdana;">weniger
als nichts zu tun! Nur, damit das klar ist.)</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung: </span><br>



<span style="font-family: Verdana;">Der M&ouml;glichkeiten gibt es
viele, und einige davon erfordern</span><br>



<span style="font-family: Verdana;">keine Kenntnisse. Man mu&szlig; nur
das Men&uuml; finden. Hier ist es:</span><br>



<br>



<big><span style="font-family: monospace;">&nbsp;&nbsp; h dbxport</span></big><br>



<br>



<span style="font-family: Verdana;">Zu erreichen auch &uuml;ber
Men&uuml; "Export / Komfort-Methoden / Gesamte</span><br>



<span style="font-family: Verdana;">Datenbank exportieren".</span><br>



<span style="font-family: Verdana;">Klicken Sie da auf "mehreren
M&ouml;glichkeiten", dann kommt eine Auswahl-</span><br>



<span style="font-family: Verdana;">Liste der ohne eigene
Parametrierung sofort ausf&uuml;hrbaren Exporte. </span><br>



<span style="font-family: Verdana;">Nur der Dateiname ist dann noch
anzugeben, wo die Daten hineinsollen.</span><br>



<span style="font-family: Verdana;">(Wenn die Datei schon existiert,
wird gefragt, ob sie &uuml;berschrieben</span><br>



<span style="font-family: Verdana;">werden soll. Also keine Gefahr,
da&szlig; man was kaputtmacht.)</span><br>



<br>



<span style="font-family: Verdana;">Sind die angebotenen
M&ouml;glichkeiten alle nicht ganz passend, hilft oft</span><br>



<span style="font-family: Verdana;">die Methode "Tabellen erstellen"
weiter. Dort gibt es einen seit</span><br>



<span style="font-family: Verdana;">V27.1 neuen Men&uuml;punkt
"Schnellmethode". Dabei braucht man nur noch die</span><br>



<span style="font-family: Verdana;">gew&uuml;nschten Feldnummern
einzugeben und bekommt eine Tabellendatei,</span><br>



<span style="font-family: Verdana;">in der jeder Datensatz als einzelne
Zeile dasteht, Felder mit TAB-</span><br>



<span style="font-family: Verdana;">Zeichen abgegrenzt. Damit kann nun
wirklich jeder Datenbanker</span><br>



<span style="font-family: Verdana;">etwas anfangen! Man wird sehen, ob
es das ist, was er sich gedacht</span><br>



<span style="font-family: Verdana;">hat. Oder ob er sich &uuml;berhaupt
was Sinnvolles gedacht hat... Garantiert</span><br>



<span style="font-family: Verdana;">wird er sagen, "also diese und
diese Datens&auml;tze brauche ich nat&uuml;rlich</span><br>



<span style="font-family: Verdana;">nicht!" Kein Problem, dann macht
man zuerst eine Ergebnismenge, evtl.</span><br>



<span style="font-family: Verdana;">mit Volltextsuche, und wendet den
Export auf diese an statt auf die</span><br>



<span style="font-family: Verdana;">Gesamtbank.</span><br>



<br>



<br>



<font face="Verdana">----------------------------------------------------------------------<br>



</font><br>



<font face="Verdana">
<a name="41"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 41: Auf die
Schnelle ne Tabelle</span><br>



</font><span style="font-family: Verdana;"></span><span style="font-family: Verdana;"></span><br>



<span style="font-family: Verdana;"><span style="font-style: italic;">Aufgabe:</span> Schnell mal eben ein paar
Angaben als kleine Tabelle</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
in Textform aufbereiten.</span><br>



<br>



<span style="font-family: Verdana; font-style: italic;">Warum kann das ein Problem sein?</span><br>



<span style="font-family: Verdana;">Zwar gibt es die Tabellenmethodik,
sogar ab V27.1 mit einem</span><br>



<span style="font-family: Verdana;">Schnellverfahren (siehe&nbsp; h
table), aber manchmal kommt man damit nicht</span><br>



<span style="font-family: Verdana;">klar, weil die Inhalte nicht fertig
und sch&ouml;n in vorhandenen Daten-</span><br>



<span style="font-family: Verdana;">feldern stehen, sondern erst
aufbereitet werden m&uuml;ssen mittels </span><br>



<span style="font-family: Verdana;">var-Befehlen, wobei dann evtl. auch
noch Zahlenwerte vorher </span><br>



<span style="font-family: Verdana;">ausgerechnet werden sollen.
Manchmal will man auch das Ergebnis nicht</span><br>



<span style="font-family: Verdana;">in Word verarbeiten, sondern nur
ganz schlicht als TXT-Datei, die</span><br>



<span style="font-family: Verdana;">aber wenigstens "ordentlich"
aussehen soll, also mit Text und Zahlen</span><br>



<span style="font-family: Verdana;">sch&ouml;n spaltenrichtig
untereinander.</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">Hierf&uuml;r sollte man zwei Kniffe
kennen:</span><br>



<br>



<span style="font-family: Verdana;">1. Textinhalt auf bestimmte
L&auml;nge rechts- oder linksb&uuml;ndig </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; zurechtr&uuml;cken.
(Falls zu lang, dann abschneiden)</span><br>



<br>



<span style="font-family: Verdana;">&nbsp; a) Rechtsb&uuml;ndig</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp; Sagen wir,
es steht etwas in #uxy und man will es auf eine</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp; L&auml;nge
von 20 Zeichen links mit Leerzeichen auff&uuml;llen (d.h.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp; in ein
20stelliges Feld rechtsb&uuml;ndig einstellen)</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-family: monospace;">var/wri ... #uxy(0,r20)</span><br>



<br>



<span style="font-family: Verdana;">&nbsp; b) Linksb&uuml;ndig</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-family: monospace;">var/wri ... #uxy(0,20)</span><br style="font-family: monospace;">



<br>



<span style="font-family: Verdana;">2. Zahl mit 2 Dezimalstellen
(gerundet) in ein Feld von 12 Stellen</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; rechtsb&uuml;ndig
einstellen. Die Zahl steht in #uij</span><br>



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp; var #uij</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp; Z=</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp; var Z2</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp; ins #uik</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp; ...</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp; var/wri
... #uik(0,r12)</span><br style="font-family: monospace;">



<br>



<span style="font-family: Verdana;">Zuerst wird man also daf&uuml;r
sorgen, da&szlig; man alle Textteile in </span><br>



<span style="font-family: Verdana;">Variablen oder Datenfeldern
vorliegen hat, dann wird man mit</span><br>



<span style="font-family: Verdana;">einem einzigen wri-Befehl diese
Elemente alle hintereinander mit</span><br>



<span style="font-family: Verdana;">den gew&uuml;nschten Zahlenwerten
(0,...) versehen ausgeben:</span><br>



<br>



<span style="font-family: monospace;">wri #uab(0,10) "/" #uac(0,20) ":"
#uad(0,r15) n</span><br>



<br>



<span style="font-family: Verdana;">Das n f&uuml;r "neue Zeile" am Ende
nicht vergessen, denn sonst kommt</span><br>



<span style="font-family: Verdana;">alles in eine riesenlange Zeile...</span><br>



<br>



<span style="font-family: Verdana;">Selbstverst&auml;ndlich kann so ein
Befehl dann in einer Schleife</span><br>



<span style="font-family: Verdana;">vorkommen, mit der man eine
Erg.Menge oder die Gesamtbank abarbeitet.</span><br>



<span style="font-family: Verdana;">Hat man auf diese Weise eine
Textdatei abc.txt fabriziert, kann man</span><br>



<span style="font-family: Verdana;">sie mit&nbsp; help abc.txt&nbsp;
ins Anzeigefeld holen oder sonstwas damit</span><br>



<span style="font-family: Verdana;">anstellen.</span><br>



<span style="font-family: Verdana;">[Erg.Menge abarbeiten: Schema z.B.
in Fb-Lektion&nbsp; 13.3 oder ganz</span><br>



<span style="font-family: Verdana;">&nbsp;kurz in&nbsp; xnext.rtf ]</span><br>



<br>



<br>



<span style="font-family: Verdana;">Word-Tabelle:</span><br>



<span style="font-family: Verdana;">Wenn man zwischen den Elementen
statt "/" und ":" jeweils den</span><br>



<span style="font-family: Verdana;">Code 9 einsetzt, hat man eine
TXT-Datei, die man in Word einf&uuml;gen</span><br>



<span style="font-family: Verdana;">und dort in eine Word-Tabelle
wandeln kann - das ist das das</span><br>



<span style="font-family: Verdana;">Wirkprinzip der Tabellenmethodik.</span><br>



<br>



<span style="font-family: Verdana;">Hinweis:</span><br>



<span style="font-family: Verdana;">Die oben gezeigten
Formatierungstricks sind enthalten in der</span><br>



<span style="font-family: Verdana;">Beschreibung&nbsp; xcstring.rtf</span><br>



<span style="font-family: Verdana;">Da stehen auch noch mehr Tricks,
wie man seine Feldinhalte zurecht-</span><br>



<span style="font-family: Verdana;">frisiseren kann!</span><br>



<br>



<font face="Verdana">----------------------------------------------------------------------<br>



</font><br>



<font face="Verdana">
<a name="42"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 42:
Persistente Ergebnismenge</span><br>



</font><span style="font-family: Verdana;"></span><span style="font-family: Verdana;"></span><br>



<span style="font-family: Verdana;"><br>



<span style="font-style: italic;">
Aufgabe: </span>Eine m&uuml;hsam erstellte Ergebnismenge schnell mal eben<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; permanent absichern<br>



<br>



<span style="font-style: italic;">
Warum: </span>Es kann passieren, da&szlig; man eine Erg.Menge ganz exakt
f&uuml;r<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nachfolgende Sitzungen aufbewahren
will. Denn durch die<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; laufenden Ver&auml;nderungen aller
Art kann es ja sein, da&szlig; man<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; genau diese Erg.Menge sp&auml;ter
u.U. nicht mehr bilden kann.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Auch die Option "Ergeb.
aufbewahren" garantiert keine<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sichere Aufbewahrung f&uuml;r
unbegrenzte Zeit!<br>



<br>



L&ouml;sung:<br>



&nbsp;&nbsp; 1. Das Abspeichern in einer Datei:<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-family: monospace;">x open x ABC\wri U n in\close x</span><span style="font-family: Verdana;"><br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mit beliebigem Dateinamen ABC .&nbsp;<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (Dateityp: Empfehlung .LST, jedoch nicht
verpflichtend)<br>



<br>



&nbsp;&nbsp; 2. Das Laden zu einem beliebigen sp&auml;teren Zeitpunkt:<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-family: monospace;">x read set ABC</span><span style="font-family: Verdana;"><br>



<br>



Der Trick ist die Sondervariable&nbsp;&nbsp;</span><span style="font-family: monospace; font-weight: bold;">in</span><span style="font-family: Verdana;">&nbsp; im write-Befehl.<br>



Sie liefert die internen Satznummern, jede auf eigener Zeile, und zwar<br>



sauschnell.<br>



Die interne Variable U ist der Titel der Ergebnismenge und wird als
erste Zeile in<br>



die externe Datei ABC geschrieben. <br>



<br>



Und wie h&auml;tte man das selber rauskriegen k&ouml;nnen?<br>



In FLEX.VW&nbsp; (v flex eingeben)&nbsp; findet man die n&ouml;tigen
Hinweise, <br>



wenn man nach "satznummer" sucht, und zwar in folgenden Zeilen:<br>



<br>



</span><span style="font-family: monospace;">&nbsp; Satznummern der
aktuellen E-Menge ausg.&nbsp;&nbsp;&nbsp; wri ixk-j</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Satznummernliste als
Erg.Menge einlesen&nbsp;&nbsp;&nbsp; read set &lt;name&gt;</span><span style="font-family: Verdana;"><br>



<br>



Den Rest mu&szlig; man sich dann zusammenreimen...<br>



<br>



</span><font face="Verdana">----------------------------------------------------------------------<br>



</font><br>



<font face="Verdana">
<a name="43"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 43: Zweiten
Datensatz laden oder anlegen und nutzen</span><br>



</font><span style="font-family: Verdana;"></span><span style="font-family: Verdana;"></span><br>



<br>



<span style="font-family: Verdana;"><span style="font-style: italic;">Aufgabe:</span> In einem FLEX wird
irgendein Satz bearbeitet, und man</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
will schnell mal nebenbei einen anderen Satz heranziehen, um</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
daraus irgendwas zu entnehmen oder irgendwas damit zu tun,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
dann aber zum ersteren zur&uuml;ck, mit dem man noch nicht fertig </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
gewesen war.</span><br>



<br>



<span style="font-family: Verdana;"><span style="font-style: italic;">Warum: </span>Sowas kommt halt immer
&ouml;fter mal vor! Z.B. ein Stammsatz, ein</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Lesersatz, ein Auftraggeber-, Kontingent-, Medientypsatz und</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
was dergleichen mehr so alles auftritt beim Erwerbungs- und</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Ausleihgesch&auml;ft.</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung: Zu Fu&szlig; macht man
es so, und dieses Rezept findet sich auch</span><br>



<span style="font-family: Verdana;">in so manchem mitgelieferten FLEX
immer noch:</span><br>



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp; REZEPT 1</span><br>



<span style="font-family: monospace;">var
i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Nummer des
aktuellen Satzes</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins
#uaI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp; in der
Variablen #uaI sichern</span><br style="font-family: monospace;">



<span style="font-family: monospace;">f1nd
...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // einen anderen Satz laden</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// damit irgendwas tun</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var "#" #uaI&nbsp;&nbsp; // den
vorherigen Satz zur&uuml;ckholen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">find</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// und damit weitermachen</span><br style="font-family: monospace;">



<br>



<span style="font-family: Verdana;">Problem: Wenn es sich um einen
neuen, noch nicht gespeicherten Satz</span><br>



<span style="font-family: Verdana;">handelt! Dann ist die Variable i
n&auml;mlich 0 ...</span><br>



<br>



<span style="font-family: Verdana;">Zum Gl&uuml;ck geht es aber auch
anders und sicherer: (siehe in&nbsp; h xset )</span><br>



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp; REZEPT 2</span><br>



<span style="font-family: monospace;">switch obj 2&nbsp;&nbsp; //
umschalten auf Satzobjekt 2</span><br style="font-family: monospace;">



<span style="font-family: monospace;">f1nd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// anderen Satz holen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// damit irgendwas tun</span><br style="font-family: monospace;">



<span style="font-family: monospace;">switch obj 1&nbsp;&nbsp; //
Satzobj. 1 wieder einschalten</span><br style="font-family: monospace;">



<br>



<span style="font-family: Verdana;">Auf diese Weise bleibt der erste
Satz ("Objekt 1") unber&uuml;hrt liegen, </span><br>



<span style="font-family: Verdana;">w&auml;hrend das, was zwischendurch
gemacht wird, an einem getrennten</span><br>



<span style="font-family: Verdana;">"Objekt 2" stattfindet.</span><br>



<span style="font-family: Verdana;">Bei avanti war das &uuml;brigens
schon lange so.</span><br>



<span style="font-family: Verdana;">M.a.W.: Wenn man "switch obj" nie
benutzt, arbeitet man automatisch</span><br>



<span style="font-family: Verdana;">immer mit "Objekt 1", und "Objekt
2" liegt ungenutzt herum.</span><br>



<br>



<span style="font-family: Verdana;">Im Abschnitt "damit irgendwas tun"
k&ouml;nnen durchaus mehrere find-</span><br>



<span style="font-family: Verdana;">oder f1nd-Befehle vorkommen, nicht
aber weitere "set obj ...", denn</span><br>



<span style="font-family: Verdana;">es gibt nur die Objekte 1 und 2,
und Nummer 1 ist die ganze Zeit </span><br>



<span style="font-family: Verdana;">derjenige Satz, zu dem man
letztlich dann zur&uuml;ckgehen will.</span><br>



<br>



<span style="font-family: Verdana;">Die &auml;ltere Methode dagegen
w&uuml;rde es gestatten, da&szlig; man einfach mehrere</span><br>



<span style="font-family: Verdana;">Variablen #u... mit mehreren
Satznummern belegt und diese S&auml;tze dann</span><br>



<span style="font-family: Verdana;">nach Bedarf wieder aktiviert. Falls
man nicht die &Uuml;bersicht verliert...</span><br>



<br>



<span style="font-family: Verdana;">Die Umschaltung gilt bis zum
n&auml;chsten switch, wenn keiner kommt also</span><br>



<span style="font-family: Verdana;">bis zum Sitzungsende, d.h.
&uuml;ber den konkreten FLEX hinaus. Man arbeitet</span><br>



<span style="font-family: Verdana;">also, wurde "switch obj 1"
vergessen, anschlie&szlig;end die ganze Zeit mit</span><br>



<span style="font-family: Verdana;">dem Objekt 2. Was jedoch keinen
Schaden stiftet.</span><br>



<br>



<span style="font-family: Verdana;">Gewiefte Programmierer bohren
sofort nach:</span><br>



<span style="font-family: Verdana;">Warum gibt dann nicht gleich ein
ganzes Array von S&auml;tzen, zwischen </span><br>



<span style="font-family: Verdana;">denen man nach Belieben umschalten
kann? Nun, das Array gibt es! Das</span><br>



<span style="font-family: Verdana;">ist der Reservespeicher. Was fehlt,
ist nur eine FLEX-Methodik,</span><br>



<span style="font-family: Verdana;">zwischen diesen nach Belieben
herumzuspringen, wie man es ja</span><br>



<span style="font-family: Verdana;">manuell schon kann! Es wird ins
Auge gefa&szlig;t, dies zu realisieren.</span><br>



<span style="font-family: Verdana;">(SEHR gro&szlig; kann der Bedarf
wohl nicht sein, er h&auml;tte sich dann</span><br>



<span style="font-family: Verdana;">l&auml;ngst artikuliert...)</span><br>



<br>



<span style="font-weight: bold; font-family: Verdana;">Anwendungsbeispiel</span><br>



<span style="font-family: Verdana;">Situation: Man hat eine
Ergebnismenge von Bestelldatens&auml;tzen und</span><br>



<span style="font-family: Verdana;">will dazu schnell mal eben eine
Titelliste, in der man die wichtigsten</span><br>



<span style="font-family: Verdana;">Titel- aber auch Bestellangaben
sieht. Das kann man nun machen,</span><br>



<span style="font-family: Verdana;">ohne irgendwelche Parameter zu
schreiben!</span><br>



<span style="font-family: Verdana;">Das k&ouml;nnte so aussehen (und
wird Bestandteil von ORDER werden):</span><br>



<span style="font-family: Verdana;">Mit **** ist markiert, wo man
variieren und erweitern k&ouml;nnte. Es ist </span><br>



<span style="font-family: Verdana;">auch mehrfaches Umschalten zwischen
Bestell- und Titelsatz m&ouml;glich,</span><br>



<span style="font-family: Verdana;">aber zu beenden ist der Vorgang
mit&nbsp; set obj 1!</span><br>



<br>



<span style="font-family: monospace;">&nbsp; O-TLISTE.FLX : Titelliste
der Bestellungen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;
20070529&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ausgehend v. einer
Bestellungs-Erg.Menge</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Erster Satz d. Bestellmenge</span><br style="font-family: monospace;">



<span style="font-family: monospace;">first</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if not #9DA jump sorry</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">open x liste.txt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Titel der Erg.Menge</span><br style="font-family: monospace;">



<span style="font-family: monospace;">wri n U n n</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">:loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; TitelID aus Bestellsatz
entnehmen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var "|9 " #9DA$T</span><br style="font-family: monospace;">



<span style="font-family: monospace;">set obj 2</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Titelsatz dazu laden</span><br style="font-family: monospace;">



<span style="font-family: monospace;">f1nd</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; V14-Verkn. aufloesen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if v14 export Ref</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; **** Titeldaten ausgeben</span><br style="font-family: monospace;">



<span style="font-family: monospace;">wri #20(e" : ") " / " #40 ". - "
#76 n</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; zurueck zum Bestellsatz</span><br style="font-family: monospace;">



<span style="font-family: monospace;">set obj 1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; **** Bestelldaten</span><br style="font-family: monospace;">



<span style="font-family: monospace;">wri "&nbsp;&nbsp; A:" #9DB$A "
L:" #9DB$j " D:" #9DB$d " : " #9DB$c " " #9DB$p n n</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; naechster Bestellsatz</span><br style="font-family: monospace;">



<span style="font-family: monospace;">next</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if yes jump loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">close x</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Datei schliessen und
anzeigen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">h liste.txt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">end</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">:sorry</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var "Sorry, die aktuelle
Ergebnismenge besteht nicht aus Bestelldaten"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">mes</span><br style="font-family: monospace;">



<span style="font-family: monospace;">end</span><br style="font-family: monospace;">



<br>



<br>



<font face="Verdana">----------------------------------------------------------------------<br>



</font><br>



<font face="Verdana">
<a name="44"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 44: Textdatei
umcodieren<br>



<br>



</span></font><span style="font-family: Verdana;"><span style="font-style: italic;">
Aufgabe: </span>Schnell mal eben eine Textdatei von ASCII nach ANSI umcodieren.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Oder allgemeiner: vom
Codesystem X ins Codesystem Y.<br>



<br>



<span style="font-style: italic;">
Warum: </span>Der alte DOS-Zeichencode ASCII ger&auml;t zunehmend auf den
abstei-<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; genden Ast. Aber auch ANSI ist
nicht von hohem Ewigkeitswert,<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; denn Unicode dringt immer weiter
vor.<br>



<br>



Fr&uuml;her schrieb man daf&uuml;r eine Exportparameterdatei mit den<br>



entsprechenden p-Befehlen, mu&szlig;te aber zuerst einen Import machen,
um<br>



die Textdatei zeilenweise in Datens&auml;tze zu verwandeln, die dann
z.B.<br>



nur die Kategorie #20 oder #u1 enthielten, um diese dann sofort mit<br>



den Exportparametern wieder ausgeben zu k&ouml;nnen. Wer hat denn schon<br>



heute noch solchen Durchblick? Oder man griff murrend zu einem<br>



Fremdwerkzeug oder einer Skriptsprache. Nicht jedem stehen aber solche<br>



Wege offen...<br>



<br>



<span style="font-style: italic;">Eine "Textdatei" - damit sind Dateien
gemeint, die in Zeilen angeordnet</span><br style="font-style: italic;">



<span style="font-style: italic;">sind, mit Codes 13 10 (oder nur einem
von beiden) als Trennung.</span><br style="font-style: italic;">



<br>



L&ouml;sung:<br>



Das Einzige, was man jetzt noch braucht, ist eine Liste von p-Befehlen.<br>



Davon sind mehrere schon als Tabellen vorhanden:<br>



(Wenn man hineinschaut, sieht man gleich, wie solche Tabellen aussehen<br>



m&uuml;ssen und wie man sie erstellen und modifizieren kann. Bearbeiten
kann<br>



man sie mit Notepad o.a.)<br>



<br>



</span><span style="font-family: monospace;">asciansi.apt&nbsp;&nbsp;
ASCII -&gt; ANSI</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ansiasci.apt&nbsp;&nbsp; ANSI
-&gt; ASCII</span><br style="font-family: monospace;">



<span style="font-family: monospace;">d.apt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ASCII -&gt; RTF</span><br style="font-family: monospace;">



<span style="font-family: monospace;">d.npt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ANSI -&gt; RTF</span><br style="font-family: monospace;">



<span style="font-family: monospace;">d-utf8.apt&nbsp;&nbsp;&nbsp;&nbsp;
ASCII -&gt; UTF-8</span><br style="font-family: monospace;">



<span style="font-family: monospace;">d-utf8.npt&nbsp;&nbsp;&nbsp;&nbsp;
ANSI -&gt; UTF-8&nbsp; [auch f. HTML]</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">p-htm.apt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ASCII -&gt; HTML</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">durtf.apt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
UTF-8 -&gt; ASCII</span><br style="font-family: monospace;">



<span style="font-family: monospace;">durtf.npt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
UTF-8 -&gt; ANSI</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: Verdana;">Wenn man nun mit B.CFG arbeitet,
intern ASCII hat und nach ANSI <br>



umcodieren will?&nbsp; Dann Kopie machen:&nbsp; asciansi.apt -&gt;
asciansi.bpt<br>



<br>



Wenn die richtige Tabelle erst feststeht, geht es ganz leicht,<br>



sofern man das "final release" von V27.2 hat:<br>



<br>



1. F&uuml;llhorn / Alles von A-Z / Umcodierung einer Textdatei<br>



&nbsp;&nbsp; (Aufgerufen wird dann&nbsp; filecode.flx)<br>



<br>



2. Man wird informiert:<br>



&nbsp; "Sie w&auml;hlen jetzt zuerst eine Datei aus. Diese wird
zeilenweise<br>



&nbsp;&nbsp; gelesen und geschrieben"<br>



&nbsp; &nbsp;Dateiauswahlbox erscheint, Datei w&auml;hlen (evtl. zuerst
Verzeichnis <br>



&nbsp; &nbsp;wechseln)<br>



<br>



3. Frage beantworten, die danach kommt:<br>



&nbsp; &nbsp;"Neuer Name f&uuml;r die Datei?" <br>



&nbsp; &nbsp;Dateiname und -pfad ist beliebig<br>



<br>



4. Und es kommt noch eine Dateiauswahlbox:<br>



&nbsp; &nbsp; "W&auml;hlen Sie eine Codetabelle" &nbsp;<br>



&nbsp; &nbsp; Aus der Liste die korrekte Tabelle (siehe oben)
w&auml;hlen<br>



<br>



Verarbeitung wird ausgef&uuml;hrt, Endemeldung:<br>



<br>



... verarbeitet, Neue Datei: ...<br>



... Zeilen, ... Bytes<br>



<br>



FERTIG!<br>



<br>



&nbsp;
------------------------------------------------------------------<br>



<br>



FLEXperten wollen mehr wissen: Was ist der Trick dabei?<br>



<br>



Der FLEX&nbsp; filecode.flx&nbsp; ist abgeleitet von der allgemeineren<br>



Vorlage&nbsp; file.flx&nbsp; (ASCII-Datei zeilenweise lesen+schreiben),<br>



die es schon seit 2004 gibt. Neu ist in V27.2 die M&ouml;glichkeit,<br>



Umcodierbefehle zu nutzen: Befehl&nbsp; xcode ...&nbsp; (h xxcode)<br>



Hier die entscheidenden Zeilen:<br>



<br>



</span><span style="font-family: monospace;">export p i-1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; i-1.apr laden. Diese wird
aber nicht als solche gebraucht,</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; das ist der Trick, sondern
nur, weil man eine Tabelle dazuladen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; will, in der die
Umcodierbefehle stehen:</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">var "W&auml;hlen Sie eine
Codetabelle|*." K1 "pt"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fnam</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Diese Tabelle zu den
Exp.Parametern laden</span><br style="font-family: monospace;">



<span style="font-family: monospace;">export t </span><br style="font-family: monospace;">



<span style="font-family: Verdana;"><br>



&nbsp; Danach kann man in der Schleife :loop, die jeweils eine Zeile
mit get<br>



&nbsp; aus der Datei liest, dies sagen:<br>



<br>



</span><span style="font-family: monospace;">xcode xp</span><br style="font-family: monospace;">



<span style="font-family: monospace;">wri</span><br style="font-family: monospace;">



<span style="font-family: monospace;">wri n</span><br style="font-family: monospace;">



<span style="font-family: Verdana;"><br>



und es werden die p-Befehle der Exportparameter zum Umcodieren benutzt,<br>



die umcodierte Zeile ausgegeben und ein Zeilenvorschub hinterdrein.<br>



<br>



</span><font face="Verdana">
<a name="45"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 45:
Versionskontrolle<br>



</span></font><br>



<span style="font-family: Verdana;"><span style="font-style: italic;">Aufgabe:</span> Schnell mal eben checken,
ob a99 oder alcarta in einer</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
geeigneten Version vorliegt.</span><br>



<br>



<span style="font-family: Verdana;"><span style="font-style: italic;">Warum?</span> Wenn man einen
fortschrittlichen FLEX schreibt, in dem z.B. der</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Befehl&nbsp; </span><big><span style="font-family: monospace; font-weight: bold;">xcode</span></big><span style="font-family: Verdana;">&nbsp; vorkommt, dann klappt dieser
nicht mit einer</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
V25.3, sondern erst ab V27.2</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Um sicherzugehen, da&szlig; der Nutzer des FLEXes damit auch was </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
anfangen kann, ist dann eine Pr&uuml;fung sinnvoll, ob er eine V27 </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
hat oder nicht.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Nat&uuml;rlich sollte ein m&uuml;ndiger Anwender immer die aktuelle </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Version im Einsatz haben, aber wer FLEXe f&uuml;r gr&ouml;&szlig;ere
Anwender-</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
kreise schreibt, kann davon nicht einfach so ausgehen...</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">Man macht sich die interne
Sondervariable m zunutze. Sie enth&auml;lt immer</span><br>



<span style="font-family: Verdana;">die Versionsnummer in der
Form&nbsp; "a99 v<span style="font-style: italic;">nn.n</span>"&nbsp;
oder&nbsp; "alc v<span style="font-style: italic;">nn.n</span>"</span><br>



<span style="font-family: Verdana;">(avanti:&nbsp; "av-x v<span style="font-style: italic;">nn.n</span>"), also z.B.&nbsp; a99 v26.5</span><br>



<span style="font-family: Verdana;">Damit kann man folgende kleine
Sequenz schreiben:</span><br>



<br>



<span style="font-family: monospace;">var m</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var (b"v")</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if &lt;27.2 jump gehtnich</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ... Befehle, die erst ab
V27.2 gehen ...</span><br style="font-family: monospace;">



<span style="font-family: monospace;">end</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:gehtnich</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var "Sie haben die Version " m ".
Die gew&uuml;nschte Funktion geht aber"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var +" erst ab V27.2 - sorry!"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">mes</span><br style="font-family: monospace;">



<span style="font-family: monospace;">end</span><br style="font-family: monospace;">



<br>



<span style="font-family: Verdana;">ABER: Der Befehl&nbsp; var
(b"v")&nbsp; geht erst ab V24.42 (Vb.179), also die</span><br>



<span style="font-family: Verdana;">Anwendung eines
Manipulationsbefehls direkt auf die interne Variable.</span><br>



<span style="font-family: Verdana;">Wenn es daher sein kann, da&szlig;
anwenderseitig etwas noch &auml;lteres in</span><br>



<span style="font-family: Verdana;">Betrieb ist, dann empfiehlt sich
das folgende Konstrukt:</span><br>



<br>



<span style="font-family: monospace;">var m</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #uvv</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #uvv(b" ")</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if &lt;"v27.2" jump gehtnich</span><br style="font-family: monospace;">



<br>



<span style="font-family: Verdana;">Das ging schon vor V20, aber "var
m" gibt es erst ab V22.0 (Vb.155).</span><br>



<span style="font-family: Verdana;">Ohne diesen Befehl kann man nichts
machen? Doch, und zwar noch diese</span><br>



<span style="font-family: Verdana;">Zeile erg&auml;nzen:</span><br>



<span style="font-family: Verdana;">if ="m" jump gehtnich</span><br>



<span style="font-family: Verdana;">denn vor V22.0 kam dabei nur der
Buchstabe m heraus.</span><br>



<span style="font-family: Verdana;">Fazit: Die Pr&uuml;fung gelingt
nur, wenn mindestens eine V20 vorhanden ist.</span><br>



<br>



<span style="font-family: Verdana;">&nbsp;
-----------------------------------------------------------------</span><br>



<br>



<span style="font-family: Verdana;">Schon l&auml;nger bekannt ist dies:</span><span style="font-family: Verdana;"> Wenn etwas nur unter a99 laufen soll,
dann</span><br>



<br>



<span style="font-family: monospace;">var m</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if "alc" mes "Sorry, nicht in
alcarta";end</span><br style="font-family: monospace;">



<span style="font-family: monospace;">...</span><br style="font-family: monospace;">



<br>



------------------------------------------------------------------------------------------------<br>



<br>



<font face="Verdana">
<a name="46"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 46: Alle
#nn-Felder durcharbeiten<br>



</span></font><small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Ohne zu wissen, wiviele und welche es gibt</span></span></small><br>



<small><span style="font-family: Verdana;"></span></small><br>



<span style="font-family: Verdana;"><span style="font-style: italic;">Aufgabe:</span> Alle Felder, deren Nummer
mit #nn anf&auml;ngt, durcharbeiten.</span><br>



<br>



<span style="font-family: Verdana;">Warum? Manchmal wei&szlig; man z.B.
nicht, in welchem von evtl. mehreren</span><br>



<span style="font-family: Verdana;">Mehrfachfeldern eine bestimmte
Angabe steht. Oder man will die Inhalte</span><br>



<span style="font-family: Verdana;">aller dieser Felder in eine Datei
schreiben.</span><br>



<br>



<big><span style="font-style: italic; font-family: monospace;">L&ouml;sung 1</span><br style="font-style: italic; font-family: monospace;">



<span style="font-style: italic; font-family: monospace;">========</span></big>
<br>



<span style="font-family: Verdana;">Man nimmt sich hintereinander alle
Felder vor und pr&uuml;ft dann nur</span><br>



<span style="font-family: Verdana;">diejenigen, deren Nummer mit nn
anf&auml;ngt.</span><br>



<span style="font-family: Verdana;">Dazu dienlich sind die internen
Sondervariablen k_1 und k_2:</span><br>



<span style="font-family: Verdana;">k_1 = Erstes Datenfeld des
aktuellen Satzes, incl. der Feldnummer</span><br>



<span style="font-family: Verdana;">k_2 = n&auml;chstes Feld, "" wenn
es keins mehr gibt</span><br>



<br>



<span style="font-family: Verdana;">Damit sieht die L&ouml;sung so aus:</span><br>



<span style="font-family: monospace;">&nbsp; Gew&uuml;nschte Nummer in
#uxx vorgeben</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#uxx 30</span><br style="font-family: monospace;">



<span style="font-family: monospace;">perf abarbeitung</span><br style="font-family: monospace;">



<span style="font-family: monospace;">jump rest</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Hierher wird aus dem UP

gesprungen:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:aktion</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Feldinhalt jetzt in iV,
incl. Feldnummer!</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ... irgendwelche Aktionen
mit dem Inhalt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; zur&uuml;ck in das UP!</span><br style="font-family: monospace;">



<span style="font-family: monospace;">jump weiter</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:rest</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ...</span><br style="font-family: monospace;">



<span style="font-family: monospace;">end</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Unterprog., um das man
sich nicht kuemmern muss.</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Es funktioniert mit jeder
Konfiguration.</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:abarbeitung</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var 34 #uxx 'zz' 34</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #uxy</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var 34 #uxx 34</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #uxx</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var k_1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if &gt;#uxx if &lt;#uxy jump
aktion</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:weiter</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var k_2</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if not "" jump loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">return</span><br style="font-family: monospace;">



<br>



<br>



<span style="font-family: Verdana;">Im Abschnitt :aktion&nbsp; hat man
den gesamten Feldinhalt incl. der</span><br>



<span style="font-family: Verdana;">Nummer in der iV. Daher kann man
z.B. schreiben</span><br>



<br>



<span style="font-family: monospace;">ins #uxz</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; .. irgendwelche
Aenderungen an #uxz</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var "#" #uxz</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins</span><br style="font-family: monospace;">



<span style="font-family: monospace;">jump weiter</span><br style="font-family: monospace;">



<br>



<span style="font-family: Verdana;">Dadurch kann man also gezielt die
einzelnen Feldinhalte auch</span><br>



<span style="font-family: Verdana;">modifizieren.</span><br>



<br>



<span style="font-family: Verdana;">Und noch ein Vorteil:</span><br>



<span style="font-family: Verdana;">Statt&nbsp; </span><span style="font-family: monospace; font-weight: bold;">#uxx 30</span><span style="font-family: Verdana;">&nbsp; kann man auch schreiben&nbsp; </span><span style="font-family: monospace; font-weight: bold;">#uxx 3</span><br>



<span style="font-family: Verdana;">Dann werden alle Felder bearbeitet,
die mit #3 beginnen!!!</span><br>



<br>



<span style="font-family: Verdana;">&nbsp;
===========================================================</span><br>



<br>



<span style="font-family: monospace; font-style: italic;">L&ouml;sung 2&nbsp; </span><span style="font-family: monospace;"></span>(H. Allers)<br style="font-family: monospace; font-style: italic;">



<span style="font-family: monospace; font-style: italic;">========</span><br>



<span style="font-family: Verdana;">Man bastelt alle in Frage kommenden
Feldnummern nacheinander</span><br>



<span style="font-family: Verdana;">in der iV zusammen und
l&auml;&szlig;t sich mit erneutem "var" den Inhalt</span><br>



<span style="font-family: Verdana;">geben (wenn es denn einen gibt).
Das ist besonders trick- und</span><br>



<span style="font-family: Verdana;">damit lehrreich, aber ansonsten hat
es keine Vorteile gegen&uuml;ber</span><br>



<span style="font-family: Verdana;">L&ouml;sung 1, auch schneller ist
es wohl kaum:</span><br>



<br>



<br>



<span style="font-family: monospace;">#uxx "#30" </span><br style="font-family: monospace;">



<span style="font-family: monospace;">Z=31</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:anfang</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Es beginnt mit 32 = Spatium</span><br style="font-family: monospace;">



<span style="font-family: monospace;">Z+1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var Z</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; problematische
Folgezeichen uebergehen: $ : ( .</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if =36 jump anfang</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if =58 jump anfang</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if =40 jump anfang</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if =46 jump anfang</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if &gt;122 end</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #uxx ' ' Z</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; in iV steht jetzt
z.B.&nbsp; #30 65</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; und jetzt: #30A</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #ux2</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var&nbsp;&nbsp; // #ux2 ist
Kategoriebezeichnung</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; und jetzt der Inhalt von
#30A - das ist der Haupttrick</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if not "" perf aktion</span><br style="font-family: monospace;">



<span style="font-family: monospace;">jump anfang</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Was will man machen mit
dem Inhalt?</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:aktion</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #ux1&nbsp;&nbsp; // #ux1 ist
aktueller Kategorieninhalt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var "Mit &gt;&gt;" #ux2 #ux1
"&lt;&lt; machen, was man will"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">mes</span><br style="font-family: monospace;">



<span style="font-family: monospace;">return</span><br>



<br>



---------------------------------------------------------------------------------------------------<br>



<br>



<span style="font-family: Verdana;"></span><font face="Verdana">
<a name="47"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 47:
L&auml;ngsten/k&uuml;rzesten Satz finden<br>



<br>



<span style="color: rgb(0, 0, 0);"><span style="font-weight: bold;"><br>



</span></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><span style="font-style: italic;">Aufgabe:</span> Schnell mal eben in einer
Datenbank den l&auml;ngsten Satz finden!<br>



<br>



<span style="font-style: italic;">
Warum:</span> allegro-Datenbanken haben keine festgelegte Satzl&auml;nge, jeder<br>



Satz nimmt nur soviel Platz ein, wie er eben braucht. Grenzenlos lang<br>



k&ouml;nnen S&auml;tze jedoch nicht sein und auch nicht grenzenlos
zahlreich die<br>



Indexeintr&auml;ge. Es ist nur nicht leicht zu sagen, wo denn die
Grenzen<br>



wirklich verlaufen.&nbsp; --&gt; Grenzen Schranken, Barrieren<br>



&nbsp;&nbsp; http://www.allegro-c.de/grenzen.htm<br>



<br>



F&uuml;r Testzwecke kann es also interessant sein, mal den
l&auml;ngsten <br>



Datensatz herauszufinden.<br>



<br>



Das leistet der folgende FLEX:<br>



<br>



<br>



</span></span></font><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><span style="font-family: monospace;">#ulg
0<br>



#uks 0</span><br style="font-family: monospace;">



<span style="font-family: monospace;">first #</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">keycheck</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Wurde [Esc] gedr&uuml;ckt?</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Wenn ja und Nachfrage mit
ja beantwortet, dann -&gt; :exit</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if yes jump exit</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var jb</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if &gt;#ulg ins #ulg;var i;ins
#uil</span><br style="font-family: monospace;">



<span style="font-family: monospace;"></span></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><span style="font-family: monospace;">if&nbsp;&lt;#uks ins #uks;var i;ins
#uik</span><br style="font-family: monospace;">



<span style="font-family: monospace;"></span></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><span style="font-family: monospace;">next #</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if yes jump loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:exit</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Ende, jetzt den Satz noch
zeigen </span><br style="font-family: monospace;">



<span style="font-family: monospace;">var "#" #uil</span><br style="font-family: monospace;">



<span style="font-family: monospace;">find</span><br style="font-family: monospace;">



<span style="font-family: monospace;">sho rec</span><br style="font-family: monospace;">



<span style="font-family: monospace;">disp</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; und Meldung:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var&nbsp; "Laengster Satz
&nbsp;:&nbsp; " #uil ", Laenge " #ulg </span><br style="font-family: monospace;">



<span style="font-family: monospace;">var +"Kuerzester Satz : &nbsp;"
#uik ", Laenge " #uks<br>



message</span></span></span><font face="Verdana"><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><br>



<br>



Er findet in der gesamten Datenbank den l&auml;ngsten u. k&uuml;rzesten
Satz und <br>



zeigt den l&auml;ngsten am Ende an.<br>



Wenn man&nbsp; first #&nbsp; und&nbsp; next #&nbsp; ersetzt durch&nbsp;
first&nbsp; bzw.&nbsp; next,<br>



wird nur die aktuelle Egebnismenge durchgeforstet.<br>



Der Ablauf kann mit Esc unterbrochen werden (Befehl keycheck), dann<br>



erh&auml;lt man den l&auml;ngsten bis dahin gefundenen Satz.<br>



<br>



Der Trick ist nur die interne Sondervariable jb, mit der man die
L&auml;nge<br>



des jeweils aktuellen Satzes erh&auml;lt. Die Zeile<br>



<br>



</span></span></font><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><span style="font-family: monospace;">if
&gt;#ulg ins #ulg;var i;ins #uil</span></span></span><font face="Verdana"><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><br>



<br>



vergleicht die so erhaltene L&auml;nge mit dem Wert in der Variablen<br>



#ulg. Ist #ulg kleiner, wird der iV-Wert, also der nun
gr&ouml;&szlig;ere,<br>



in #ulg kopiert und die interne Satznummer (denn die wird ja am<br>



Ende gebraucht) wird in #uil aufbewahrt. Am Ende hat man die<br>



gew&uuml;nschten Werte in diesen beiden Variablen.<br>



Mitgeliefert wird ab V27.4 ein FLEX namens lk.flx, der die drei
l&auml;ngsten<br>



und k&uuml;rzesten S&auml;tze als Erg.Menge liefert.<br>



<br>



Wo ist die Liste der internen Sondervariablen?<br>



Hier: <br>



<a href="http://www.allegro-c.de/flex/seite09_3.html#_Kap09_03">http://www.allegro-c.de/flex/seite09_3.html#_Kap09_03</a><br>



oder auch in&nbsp; xcstring.rtf<br>



<br>



</span></span><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font>
---------------------------------------------------------------------------------------------------<br>



<br>



<span style="font-family: Verdana;"></span><font face="Verdana">
<a name="48"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 48:
Pr&auml;zisions-Ersetzungen<br>



<br>



<span style="color: rgb(0, 0, 0);"><span style="font-weight: bold;"></span></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);">Aufgabe:
Schnell mal eben in eine Zeichenfolge an einer bestimmten <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Position 1 oder mehr
Zeichen einf&uuml;gen, und zwar&nbsp; <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mit oder ohne
Ersetzung von 1 oder mehr dort stehenden Zeichen<br>



<br>



Warum? Man hat zuweilen Zeichenfolgen, in denen an bestimmten (festen)<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Positionen bestimmte Angaben
stehen, die man durch etwas anderes<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ersetzen will.<br>



<br>



Hinweis: Zum Ersetzen von exakten Zeichenfolgen an beliebiger Stelle<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; durch andere gibt es
den Befehl&nbsp; insert %abc%xyz%<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zum Ersetzen einzelner
Zeichen oder Doppelzeichen durch andere<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; im gesamten Text (das
nennt man "Umcodierung") gibt es das<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Instrumentarium des
Befehls&nbsp; xcode<br>



<br>



L&ouml;sung:<br>



Man schreibt sich eine Datei&nbsp; stri.inc&nbsp; (siehe unten) und
bindet sie <br>



mit "include stri.inc" ein. <br>



So wird die Funktion dann benutzt:<br>



<br>



Wenn in das Feld&nbsp; #789&nbsp; an der Position 11 die Zeichen "abc"
eingesetzt<br>



werden sollen, dort genau 2 Zeichen ersetzend, die vorher da stehen,<br>



dann macht man folgendes:<br>



<br>



</span></span></font><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><span style="font-family: monospace;">var
#789</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Startstring</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #usT</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Befehlsstring (kann
beliebig konstruiert werden, auch aus Variablen!)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var "10,abc,2"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; (Statt , als Trenner ist
auch / m&ouml;glich)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Aufruf</span><br style="font-family: monospace;">



<span style="font-family: monospace;">perf stri</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Ergebnis in iV nach #789
sichern</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #789</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">var "Resultat: " #789</span><br style="font-family: monospace;">



<span style="font-family: monospace;">mes</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ... weitere Aktionen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Am Ende das UP einbinden:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">include stri.inc</span></span></span><font face="Verdana"><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><br>



<br>



<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Und
dies ist das Unterprogramm&nbsp; stri.inc<br>



&nbsp;***********************************************************<br>



</span></span></font><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><span style="font-family: monospace;">&nbsp;
STRI.INC : Zeichen an fester Position in eine Zeichenfolge einfuegen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; 2007-07-17&nbsp;&nbsp;
u.U. mit Ersetzung vorhandener Zeichen</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Aufruf :&nbsp; Man besetzt
zuerst folgende Variable:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
#usT&nbsp; : die Ausgangs-Zeichenfolge</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
iV&nbsp;&nbsp;&nbsp; : zahl1,zeichenfolge,zahl2&nbsp; oder&nbsp; /
statt ,</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
die beiden Zahlen muessen positive ganze sein oder 0</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
zahl2 mit dem vorangehenden Komma darf fehlen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Bedeutung:&nbsp; zahl1 Zeichen vom Anfang von #usT belassen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
dann die&nbsp; zeichenfolge&nbsp; anhaengen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
vom Rest von #usT&nbsp; zahl2&nbsp; Zeichen wegnehmen, </span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
und was noch von #usT uebrig ist, anhaengen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Beispiele:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Das vierte Zeichen durch x ersetzen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
var "3,x,1"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
In #upo steht Position, in #uez die einzufueg. Zeichen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
in #uaz ANz. der zu ersetzenden Zeichen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
var #upo "," #uez "," #uaz</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Hinter dem 10. Zeichen&nbsp; Inhalt von #uab&nbsp; zwischenf&uuml;gen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
var "10," #uab ",0"&nbsp;&nbsp; oder&nbsp;&nbsp; var "10," #uab</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Vorn 2 Zeichen durch abcdeg&nbsp; ersetzen, Rest belassen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
var "0,abcdeg,2"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(einfacher mit&nbsp; var "abc" #usT(2,0) )</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Hinter dem 2. Zeichen&nbsp; abcdeg&nbsp; einsetzen, Rest weg</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
var "2,abcdeg,1000"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(einfacher mit&nbsp; var #usT(0,2) "abcdeg" !)</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Dann der Aufruf:</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
perf stri</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Ergebnis steht danach in der iV</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; UPro beginnt hier</span><br style="font-family: monospace;">



<span style="font-family: monospace;">end</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Setze</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
#uS1 = zahl1 , #uS2=zahl2 , #uSB = Zeichenfolge bei Beginn</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:stri</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Kontrolle beim Testen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;mes</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #uSB</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #uSB(f"0123456789")</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if "/" jump stri:s</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if not "," return</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Komma ist Trennung:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #uSB(e",")</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #uS1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #uSB(b"," b",")</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #uS2</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Trennsymbol ,</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#uST,</span><br style="font-family: monospace;">



<span style="font-family: monospace;">jump stri:w</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; / ist Trennung:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:stri:s</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #uSB(e"/")</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #uS1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #uSB(b"/" b"/")</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #uS2</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Trennsymbol /</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#uST/</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">:stri:w</span><br style="font-family: monospace;">



<span style="font-family: monospace;">eval #uS1 + #uS2</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Position, wo der Rest
beginnt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #uS3</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Manipulations-Ausdruck in
die iV schreiben: </span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(beachte den Nebentrick mit dem Trennsymbol #uST)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #uS1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if not "0" var "#usT(0," #uS1 "
F' ') #uSB(b'#uST' e'#uST') #usT(" #uS3 ",0)"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if "0" var "#uSB(b'#uST' e'#uST')
#usT(" #uS3 ",0)"</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; zur Kontrolle beim Testen
den Ausdruck zeigen:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;mes</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Ausdruck
auswerten&nbsp;&nbsp; (das ist der eigentliche Trick!)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Nun steht das Erg. in der
iV</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Hilfsvar. loeschen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#uST</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#uSB</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#uS1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#uS2</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#uS3</span><br style="font-family: monospace;">



<span style="font-family: monospace;">return</span><br style="font-family: monospace;">



</span></span><font face="Verdana"><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><br>



&nbsp;&nbsp;**********************************************************<br>



&nbsp;<br>



</span></span></font>
---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<span style="font-family: Verdana;"></span><font face="Verdana">
<a name="49"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 49: Mehr
Mobilit&auml;t : Fliegender Wechsel des Arbeitsorts<br>



<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><br>



Aufgabe: Mal eben auf ein anderes Verzeichnis umschalten, um dort<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irgendwelche Aktionen
durchzuf&uuml;hren, dann zur&uuml;ck.<br>



<br>



Warum: Ambitionierte Anwender wollen von a99 aus alles m&ouml;gliche mit<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dateien anstellen, die irgendwo
liegen. Daf&uuml;r gibt es ja auch<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; so einige Befehle, bis hin zu
mkdir und dem m&auml;chtigen fnam.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Es kann n&uuml;tzlich sein, wenn
man f&uuml;r Dateiaktionen ein anderes<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Basis-Verzeichnis einstellen kann
als das vorgegebene.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>



Hintergrund:<br>



Wenn man eine Datei &ouml;ffnet oder sonstwie anspricht, und dabei
keinen<br>



Pfad angibt, sondern nur den Namen, wird die Datei auf dem Arbeits-<br>



verzeichnis gesucht, auch "Startverzeichnis" genannt. Es handelt sich<br>



dabei um denjenigen Ordner, aus dem heraus a99 bzw. alcarta gestartet<br>



wird. Sein Name steht in den "Eigenschaften" des Desktop-Icon in dem <br>



Feld "Ausf&uuml;hren in". Startet man das Programm von Hand im
DOS-Fenster,<br>



ist es das dort gerade (mit cd ...) eingestellte Verzeichnis.<br>



<br>



Erst ab V27 ist die M&ouml;glichkeit gegeben, das Arbeitsverzeichnis<br>



per FLEX zu wechseln, und zwar mit<br>



<br>



set W verzeichnisname<br>



<br>



Und so kann eine Sequenz aussehen, um auf ein anderes Verzeichnis zu<br>



wechseln, dort schnell mal etwas zu tun, und dann zur&uuml;ckzuschalten.<br>



<br>



</span></span></font><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><span style="font-family: monospace;">var
W</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins $temp</span><br style="font-family: monospace;">



<span style="font-family: monospace;">set W verzeichn</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;... sonstwas tun</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var $temp</span><br style="font-family: monospace;">



<span style="font-family: monospace;">set W</span><br style="font-family: monospace;">



</span></span><font face="Verdana"><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"><br>



Ganz nett au&szlig;erdem:<br>



&gt;&gt; Das Verzeichnis mu&szlig; nicht auf demselben Laufwerk liegen!<br>



&gt;&gt; In einem Pfadnamen kann man / statt \\ als Trenner verwenden.<br>



<br>



KEINE SORGE:<br>



Das Umschalten bewirkt NICHT, da&szlig; die tempor&auml;ren Dateien
verlagert<br>



w&uuml;rden oder pl&ouml;tzlich nicht mehr da w&auml;ren, die das
Programm braucht.<br>



Und zwar f&uuml;r die Erg.Mengen und die bearbeiteten S&auml;tze, d.h.
Dateien<br>



der Typen .$$$, .RSS, .TAB und ._nn<br>



Diese Dateien bleiben wo sie sind: auf dem beim Programmstart<br>



eingestellten Arbeitsverzeichnis. Man h&auml;tte sonst wom&ouml;glich <br>



merkw&uuml;rdige Probleme!<br>



<br>



<br>



Zusatzfrage: Wie stellt man fest, wo momentan das Arbeitsverzeichnis<br>



ist?<br>



&nbsp;&nbsp;&nbsp;&nbsp; 1. L&ouml;sung:&nbsp; Eingabe von&nbsp; x var
W\mes <br>



<br>



&nbsp;&nbsp;&nbsp;&nbsp; 2. L&ouml;sung:&nbsp; Eingabe von&nbsp; d
a&nbsp; (siehe Trick 21 "Schau'mer mal")<br>



<br>



<br>



</span></span></font>
---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<span style="font-family: Verdana;"></span><font face="Verdana">
<a name="50"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 50: Datensatz
umtopfen<br>



<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><br>



<span style="font-family: Verdana;">Aufgabe: Einen Datensatz in eine
andere Datei &uuml;berf&uuml;hren.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(Gemeint ist: in eine andere Datendatei innerhalb derselben</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Datenbank, nicht in eine andere Datenbank!)</span><br>



<br>



<span style="font-family: Verdana;">Warum: Im Prinzip (f&uuml;r das
Funktionieren der Software) hat es keine</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Bedeutung, in welcher Datei sich ein Satz befindet! Man mu&szlig;</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
sich also deswegen eigentlich keinen Kopf machen. Es gibt</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
aber Systemverwalter, die gerne h&uuml;bsch ordentlich ihre Daten-</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
s&auml;tze auf eine Anzahl von Dateien aufteilen. Dann m&uuml;ssen</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Vorkehrungen getroffen werden, damit ein Satz bei seiner</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Erfassung gleich in die richtige Datei gespeichert wird.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Versehentlich entwischt dann schon mal einer in die falsche</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Datei, und man &auml;rgert sich - obwohl's, wie gesagt, egal ist.</span><br>



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Es kann aber ein Vorteil sein, wenn S&auml;tze bestimmter Typen in</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
separaten Dateien sind, z.B. kann eine Volltextsuche dann</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
schneller sein, wenn sie auf nur eine, die richtige, Datei</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
begrenzt wird. Oder man kann besondere S&auml;tze, die nur</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
tempor&auml;r gebraucht werden, leicht wieder alle loswerden.</span><br>



<br>



<span style="font-family: Verdana;">Wo sieht man, in welcher Datei ein
Satz steckt? Im zweiten Statusfeld</span><br>



<span style="font-family: Verdana;">unten rechts stehen 3 Zahlen. Liest
man da z.B. </span><big><span style="font-family: monospace;">938/1
L225</span></big><span style="font-family: Verdana;">, so</span><br>



<span style="font-family: Verdana;">bedeutet das: Satz 938 ist gerade
zu sehen, er steckt in Datei 1 und</span><br>



<span style="font-family: Verdana;">ist 225 Byte lang.</span><br>



<span style="font-family: Verdana;">Tip: Im FLEX kann man dieselben
Angaben als Sondervariablen abrufen:</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp; </span><big><span style="font-family: monospace;">i&nbsp;&nbsp;&nbsp; </span></big><span style="font-family: Verdana;">interne Nummer des Satzes</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp; </span><big><span style="font-family: monospace;">j&nbsp;&nbsp;&nbsp; </span></big><span style="font-family: Verdana;">Dateinummer</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp; </span><big><span style="font-family: monospace;">jb&nbsp;&nbsp; </span></big><span style="font-family: Verdana;">L&auml;nge des Satzes in Byte</span><br>



<br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">-------</span><br>



<span style="font-family: Verdana;">Direkt (physisch) in eine ander
Datei verschieben kann man den Satz</span><br>



<span style="font-family: Verdana;">nicht. Er mu&szlig; kopiert und als
neuer Satz gespeichert werden, den alten</span><br>



<span style="font-family: Verdana;">dagegen mu&szlig; man l&ouml;schen.</span><br>



<span style="font-family: Verdana;">(Die Dateinummer kann eine Zahl von
1 bis 255 sein.)</span><br>



<span style="font-family: Verdana;">Sagen wir, ein Satz ist in der
Datei mit der Nummer 17 gespeichert,</span><br>



<span style="font-family: Verdana;">also in&nbsp; cat_17.ald&nbsp; beim
Standardmodell. Er soll aber in die Datei 50.</span><br>



<br>



<span style="font-family: Verdana;">Das geht so: (man staunt doch,
wieviele Schritte n&ouml;tig sind, wenn alles</span><br>



<span style="font-family: Verdana;">stimmen soll... Wenn man nicht mit
A.CFG arbeitet, sind einige Feld-</span><br>



<span style="font-family: Verdana;">nummern sinngem&auml;&szlig; zu
&auml;ndern.)</span><br>



<br style="font-family: monospace;">



<span style="font-family: monospace;"></span><span style="font-family: monospace;"><br>



&nbsp; Momentane Nummer f. NEUE S&auml;tze ist die Sondervar. N<br>



var N <br>



ins $unn<br>



&nbsp; Statt dessen Nummer 50 einstellen (mit ".."!)<br>



var "50"<br>



input<br>



var #00<br>



ins $u00<br>



var #99n<br>



ins $u99n<br>



&nbsp; den aktuellen Satz l&ouml;schen<br>



erase<br>



&nbsp; ihn kopieren<br>



copy<br>



&nbsp; und als neuen Satz speichern - kommt in Datei 50<br>



&nbsp; aber zuerst die alte #00 wieder einsetzen<br>



var $u00<br>



ins #00<br>



put<br>



&nbsp; Jetzt die alte #99n auch wieder einsetzen, nochmal speichern<br>



var $u99n<br>



ins #99n<br>



put<br>



&nbsp; Nummer f&uuml;r neue S&auml;tze wieder zur&uuml;ckstellen<br>



var $unn<br>



input<br>



&nbsp; kopierten Satz anzeigen<br>



sho rec<br>



disp<br>



<br>



<br>



</span><span style="font-family: Verdana;">Hinweise:</span><br>



<span style="font-family: Verdana;">Man braucht im FLEX nur die Nummer
der Zieldatei (die 50 also).</span><br>



<span style="font-family: Verdana;">Die Sache mit #99n (Datum der
Erfassung des Satzes) wird nur</span><br>



<span style="font-family: Verdana;">gemacht, weil sonst die #99n auf
das aktuelle Datum gesetzt wird, denn</span><br>



<span style="font-family: Verdana;">der Satz gilt f&uuml;r das System
als neuer Satz und kriegt automatisch</span><br>



<span style="font-family: Verdana;">in der #99n das aktuelle Datum.
Deshalb wird der Satz nach dem</span><br>



<span style="font-family: Verdana;">Speichern nochmal um die alte #99n
bereichert und erneut gespeichert,</span><br>



<span style="font-family: Verdana;">dann bleibt sie n&auml;mlich
erhalten, es gibt aber eine neue #99e. Das</span><br>



<span style="font-family: Verdana;">kann man NICHT verhindern, d.h. die
alte ist dann weg.</span><br>



<br>



<span style="font-family: Verdana;">Die #00 wird gleichfalls beim
Kopieren gel&ouml;scht und dann beim</span><br>



<span style="font-family: Verdana;">Speichern erneuert. Wenn man sie
aber vor dem Speichern neu belegt, </span><br>



<span style="font-family: Verdana;">wird keine neue Nummer vergeben.</span><br>



<br>



<span style="font-family: Verdana;">Seine INTERNE Nummer kann der Satz
nicht behalten, er bekommt eine</span><br>



<span style="font-family: Verdana;">neue - die alte bleibt beim
gel&ouml;schten Satz. Dies macht aber nichts</span><br>



<span style="font-family: Verdana;">aus, denn die interne Nummer hat
nur interne Bedeutung, der Anwender</span><br>



<span style="font-family: Verdana;">kann nichts damit anfangen. Die
interne Nummer steht nicht in einer</span><br>



<span style="font-family: Verdana;">Kategorie! Die #00 ist etwas
anderes, sie bleibt beim Kopieren</span><br>



<span style="font-family: Verdana;">zwar nicht automatisch erhalten,
wenn man sie aber wieder in die</span><br>



<span style="font-family: Verdana;">#00 einsetzt (wie oben zu sehen),
dann wird keine neue vergeben.</span><br>



<br>



<span style="font-family: Verdana;">Die ganze Prozedur kann man auch in
die normale Schleife zum</span><br>



<span style="font-family: Verdana;">Abarbeiten einer Ergebnismenge
einbauen, um gleich in einem Zuge</span><br>



<span style="font-family: Verdana;">eine gr&ouml;&szlig;ere Zahl von
S&auml;tzen umzutopfen.</span><br>



<br>



---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<span style="font-family: Verdana;"></span><font face="Verdana">
<a name="51"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 51: Gesetzt
den Fall ...<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><br>



<span style="font-family: Verdana;"></span><br>



<span style="font-family: Verdana;">Aufgabe: F&uuml;r eine Sitzung
bestimmte Werte voreinstellen, die jederzeit</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
in jedem FLEX bereitstehen, um Unterscheidungen aller Art</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
treffen zu k&ouml;nnen.</span><br>



<br>



<span style="font-family: Verdana;">Warum: Bei den immer
umfangreicheren Funktionssystemen, die man sich</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
mit FLEX basteln kann, ist es oft erw&uuml;nscht, je nach Situation</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
unterschiedlich reagieren zu k&ouml;nnen. </span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sungen:</span><br>



<span style="font-family: Verdana;">1. kann man schon im&nbsp;
_start.flx&nbsp; jede beliebige Variable besetzen und</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; diese dann jederzeit
heranziehen, </span><br>



<br>



<span style="font-family: Verdana;">2. Auch kann man in einem eigenen
Initialisierungs-FLEX beliebig</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; viele Einstellungen
f&uuml;r Spezialanwendungen vornehmen. </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Beispiele sind
o-init.flx und a-init.flx f&uuml;r Erwerbung / Ausleihe.</span><br>



<br>



<br>



<span style="font-family: Verdana;">Welche Variablen eignen sich dazu? </span><br>



<span style="font-family: Verdana;">Grunds&auml;tzlich zwar auch die
#u-Variablen mit kleinen Buchstaben, </span><br>



<span style="font-family: Verdana;">aber besser sind die relativ neuen
$-Variablen (mit gro&szlig;em Anfangs-</span><br>



<span style="font-family: Verdana;">buchstaben!), denn diese
k&ouml;nnen l&auml;ngere Namen haben, bei denen dann </span><br>



<span style="font-family: Verdana;">weniger leicht eine Kollision mit
einer schon vorhandenen Variablen</span><br>



<span style="font-family: Verdana;">passieren kann. Warum gro&szlig;e
Anfangsbuchstaben? Weil nur diese</span><br>



<span style="font-family: Verdana;">Variablen w&auml;hrend der ganzen
Sitzung erhalten bleiben, die kleinen</span><br>



<span style="font-family: Verdana;">aber nur w&auml;hrend der Laufzeit
des FLEXes.</span><br>



<br>



<span style="font-family: Verdana;">$-Variablen k&ouml;nnen, genau wie
die #u-Variablen, leicht belegt und </span><br>



<span style="font-family: Verdana;">f&uuml;r Pr&uuml;fungen genutzt
werden.</span><br>



<span style="font-family: Verdana;">Das Belegen geht so:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">$Abc 1</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">belegt die Variable $Abc mit dem
Wert 1.</span><br>



<br>



<br>



<span style="font-family: Verdana;">Das Pr&uuml;fen geht so:</span><br>



<span style="font-family: Verdana;">M&ouml;glich ist, bisher
undokumentiert, der Befehl</span><br>



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp;<span style="font-family: Courier New,Courier,monospace;"> if $xyz
&lt;befehl&gt;</span></span><br>



<br>



<span style="font-family: Verdana;">Der &lt;befehl&gt; wird nur
ausgef&uuml;hrt, wenn $xyz belegt ist. Also genauso</span><br>



<span style="font-family: Verdana;">wie es mit #u-Variablen geht und
mit Datenfeldern!</span><br>



<br>



<span style="font-family: Verdana;">Wenn dagegen nicht die Existenz,
sondern der Inhalt zu pr&uuml;fen ist,</span><br>



<span style="font-family: Verdana;">verf&auml;hrt man so:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">var $Xyz</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "1" jump
label1</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "pqr" jump
label2</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<br>



<span style="font-family: Verdana;">Hinweis</span><br>



<span style="font-family: Verdana;">Trick 17 zeigt, wie man Setzungen
aus der INI-Datei entnehmen kann. Das</span><br>



<span style="font-family: Verdana;">klappt zwar einwandfrei, ist aber
unn&ouml;tig betulich, wenn man die</span><br>



<span style="font-family: Verdana;">hier dargestellten
M&ouml;glichkeiten ausnutzt.</span><br>



<br>



<br>



<br>



---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<font face="Verdana">
<a name="52"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 52: Dateien
abklappern<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><br>



<br>



<span style="font-family: Verdana;"></span><span style="font-family: Verdana;">Aufgabe: Schnell mal eben eine Anzahl
Dateien durchsehen oder sonstwas</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
mit jeder einzelnen davon machen.</span><br>



<br>



<span style="font-family: Verdana;">Warum: Gelegentlich will man nicht
nur eine einzelne Datei,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
sondern gleich ein ganzes B&uuml;ndel irgendwie behandeln.&nbsp; </span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung</span><br>



<span style="font-family: Verdana;">Man braucht drei Funktionen:</span><br>



<br>



<span style="font-family: Verdana;">1. :dirlist</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Die Zusammenstellung
der Namensliste der Dateien</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Dabei kann es sein,
da&szlig; diese nicht alle auf nur einem Verzeichnis</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; liegen, sondern auch
welche auf einem oder mehreren Unterverzeich-</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; nissen. Die Funktion
soll ein bequemes Zusammenstellen einer solchen</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Liste erm&ouml;glichen.</span><br>



<br>



<span style="font-family: Verdana;">2. :firstname</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Aufruf der ersten
Datei (d.h. ihres Namens)</span><br>



<br>



<span style="font-family: Verdana;">3. :nextname</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Aufruf der
n&auml;chsten Datei. Mit Feststellung, ob es keine mehr gibt.</span><br>



<br>



<span style="font-family: Verdana;">Diese Funktionen wurden in eine
Datei&nbsp; dirlist.inc&nbsp; verpackt.</span><br>



<span style="font-family: Verdana;">Richtig einfach sind diese
Funktionen nicht, weil allerhand Rand-</span><br>



<span style="font-family: Verdana;">bedingungen zu ber&uuml;cksichtigen
sind. </span><br>



<span style="font-family: Verdana;">Die Nutzung ist jedoch ganz leicht.
Hier ganz knapp das Strickmuster,</span><br>



<span style="font-family: Verdana;">das man auch f&uuml;r eigene Zwecke
noch modifizieren kann:</span><br>



<span style="font-family: Verdana;">(Stellen mit ... sind darin frei
gestaltbar)</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
-----------------------------------------------------</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Flag
#udS setzen: Unterverzeichnisse mitverarbeiten</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; (wenn
nicht gew&uuml;nscht, dann die 1 weglassen)</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">#udS 1</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Flag
#udE setzen: Liste vor Verarbeitung noch editieren</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; (in
einem aresqa-Fenster) Sonst die 1 weglassen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">#udE 1 </span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Namensmuster in iV vorbereiten, z.B. c:/allegro/*.apr</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var ...</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Und
nun kommen die Funktionen:</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; 1.
Dateiliste dazu erstellen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">perf dirlist</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if not $DL
mes Keine Datei gefunden;end</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; 2.
Ersten Namen in iV kopieren</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">perf firstname</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" mes
Abbruch oder keine Datei gefunden;end</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Schleife. Dateiname steht in iV</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:lp</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Hier
einfuegen, was mit der Datei passieren soll</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">...</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; 3.
Naechsten Namen in iV kopieren</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">perf nextname</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" jump
ende</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">jump lp</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:ende</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Ende-Aktion nach Verarbeitung der letzten Datei</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">...</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Unterprogramm einbinden</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">include
dirlist.inc</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
------------------------------------------------------</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Verdana;">Tips:</span><br>



<span style="font-family: Verdana;">Die Liste der Dateien ist nach
Ablauf immer noch in der</span><br>



<span style="font-family: Verdana;">Variablen&nbsp; $DL, wo man sie
sich anschauen oder f&uuml;r andere</span><br>



<span style="font-family: Verdana;">Zwecke weiterverwenden kann. $DL
wird erstellt in der</span><br>



<span style="font-family: Verdana;">Unterfunktion :dirlist, d.h. man
braucht nur diese auszuf&uuml;hren,</span><br>



<span style="font-family: Verdana;">wenn man nichts anderes als diese
Variable braucht.</span><br>



<br>



<span style="font-family: Verdana;">Die Liste kann, weil $DL erhalten
bleibt, auch mehrfach mit</span><br>



<span style="font-family: Verdana;">"perf firstname / perf nextname
..." abgearbeitet werden.</span><br>



<br>



<span style="font-family: Verdana;">Anwendungsbeispiel:</span><br>



<span style="font-family: Verdana;">Ein FLEX namens&nbsp;
DIRLIST.FLX&nbsp; zeigt: Man kann sich Listen</span><br>



<span style="font-family: Verdana;">bestimmter Dateitypen
zusammenstellen und dazu dann eine</span><br>



<span style="font-family: Verdana;">alphab. Liste der Dateien mit
Datum, Gr&ouml;&szlig;e und den ersten</span><br>



<span style="font-family: Verdana;">drei Zeilen erstellen lassen.</span><br>



<br>



---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<font face="Verdana">
<a name="53"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 53: Qual der
Verzeichniswahl<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><br>



<span style="font-family: Verdana;"><span style="color: rgb(0, 153, 0);">ExtraTrick:</span>
Mehrere Dateitypen gleichzeitig zur Wahl</span><br>



<br>



<span style="font-family: Verdana;">Aufgabe: Der Nutzer soll ein
Verzeichnis ausw&auml;hlen d&uuml;rfen</span><br>



<br>



<span style="font-family: Verdana;">Warum: Es kann immer mal vorkommen,
da&szlig; bestimmte Dinge </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
wohlsortiert in bestimmten, parallelen Ordnern liegen. Wenn es</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
dann an die Nutzung der Dinge geht, ist mitunter erst einmal</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
der richtige Ordner auszuw&auml;hlen.</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Mit <span style="font-family: Courier New,Courier,monospace;">fnam ...</span>
geht das nicht direkt, aber indirekt!</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
In <span style="font-family: Courier New,Courier,monospace;">xfnam.rtf</span>
steht es auch, aber ...</span><br>



<br>



<span style="font-family: Verdana;">Sagen wir, es h&auml;ngen mehrere
Unterordner an&nbsp; c:\allegro, und der</span><br>



<span style="font-family: Verdana;">Nutzer soll einen davon
w&auml;hlen. Das geht so:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">fnam
|.c:/allegro/*</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uvz</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "Wahl="
#uvz</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; zur
Wahl anbieten</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">select</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if cancel end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
gewaehlten Namen in #uvZ</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uvZ</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "Ihre
Wahl: " #uvZ</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">mes</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">In #uvZ steht dann nur der Name des
Unterordners, den man also</span><br>



<span style="font-family: Verdana;">mit c:\allegro\ zusammensetzen
mu&szlig; zum vollst&auml;ndigen Pfadnamen,</span><br>



<span style="font-family: Verdana;">z.B. mit&nbsp;&nbsp; var
"c:\\allegro\\" #uvZ</span><br>



<br>



<span style="font-family: Verdana;">Der Trick steckt in der ersten
Zeile, also in dieser Syntax:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">fnam
|.&lt;verzeichnisname&gt;/*</span><br>



<br>



<span style="font-family: Verdana;">Hier kann man somit statt&nbsp;
c:/allegro&nbsp; jeden beliebigen Ordnernamen</span><br>



<span style="font-family: Verdana;">einsetzen, mit / oder \\ als
Trennzeichen zwischen den Stufen.</span><br>



<span style="font-family: Verdana;">Statt nur * k&ouml;nnte da z.B. a*
stehen, dann w&uuml;rden nur die mit<br>



a beginnenden Ordnernamen angeboten.<br>



<br>



Der Befehl&nbsp; fnam |.&nbsp; schreibt die Namen der Unterordner in
die iV,<br>



bietet sie also nicht selber zur Wahl an! Das tut erst der Befehl<br>



select, der sich mit der korrekten Syntax anschlie&szlig;t.<br>



<br>



</span><span style="font-family: Verdana;">Statt als select-Liste kann
man auch die Namen als ViewListe anbieten.</span><br>



<span style="font-family: Verdana;">Beide Rezepte sind als Beispiele 3
und 4 in der Dokumentation zum</span><br>



<span style="font-family: Verdana;">Befehl&nbsp; fnam&nbsp; genau
angegeben! Trick 53 ist also streng genommen</span><br>



<span style="font-family: Verdana;">&uuml;berfl&uuml;ssig - aber hatten
Sie's schon gewu&szlig;t?</span><br>



<br>



<span style="font-family: Verdana;">Damit sich's aber trotzdem lohnt,
hier noch ein </span><br>



<br>



<br>



<span style="font-family: Verdana;">ExtraTrick:</span><br>



<span style="font-family: Verdana;">Dem Nutzer sollen alle Dateien vom
Typ .flx und .inc gemeinsam</span><br>



<span style="font-family: Verdana;">zur Wahl angeboten werden! Das geht
so:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">fnam
FLEXdateien|*.flx;*.inc</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">Ergo: Hinter dem | kann nicht nur
einer, sondern mehrere Dateitypen</span><br>



<span style="font-family: Verdana;">stehen, getrennt durch ;. Das ist
nicht neu, das war schon lange so,</span><br>



<span style="font-family: Verdana;">es stand blo&szlig; noch nirgends.</span><br>



<span style="font-family: Verdana;">Wenn es ein bestimmtes Verzeichnis
sein soll, z.B. <span style="font-family: Courier New,Courier,monospace;">c:\allegro\flex</span>,</span><br>



<span style="font-family: Verdana;">dann mu&szlig; es so aussehen:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">fnam
FLEXdateien|c:\\allegro\\flex\\*.flx;*.inc</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">Hier allerdings geht / statt \\
nicht, sorry. Es liegt einfach daran,</span><br>



<span style="font-family: Verdana;">da&szlig; nicht alle internen
Windows-Funktionen in dem Punkt einheitlich</span><br>



<span style="font-family: Verdana;">arbeiten.</span><br>



<br>



<br>



---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<font face="Verdana">
<a name="54"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 54: Von Rechts
wegen ...<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><br>



<span style="font-family: Verdana; color: rgb(0, 0, 0);">Pr&uuml;fen,
ob Schreibrecht besteht</span><br>



<br>



<span style="font-family: Verdana;">Aufgabe: Beim Start automatisch
pr&uuml;fen, ob die Rechte ausreichen.</span><br>



<br>



<span style="font-family: Verdana;">Warum: Es kommt vor, da&szlig; z.B.
der Administrator einem Nutzer von a99</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
zu geringe Rechte zugeteilt hat. Der wundert sich dann, da&szlig; er</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
keine Daten korrigieren kann oder die TBL nicht freigeben etc,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Derlei Irritation sollte sich verh&uuml;ten lassen.</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung: Daf&uuml;r kann man
sich folgende Sequenz in den _start.flx</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
einbauen. An die ausgelieferte kann man dies einfach</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
unten anh&auml;ngen.</span><br>



<br>



<span style="font-family: Verdana;">&nbsp;
------------------------------------------------------------</span><br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp; 1./2.
Schreibrecht auf Temp- und Start-Verz. pr&uuml;fen</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var M
"testdatei"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">open x</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if no perform
nom</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">close x</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var W
"\\testdatei"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">open x</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if no jump now</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">close x</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; 3.
Pr&uuml;fen, ob access-Zahl und tats&auml;chliche Berechtigung gleich
sind</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Tats&auml;chl. Berechtigung:</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var A</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uzB</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Trick
17, um die INI-Einstellung&nbsp; access=...&nbsp; zu ermitteln:</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "F" V</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var
(b"~access=" e"^M" e" " f"&nbsp;")</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Beides
vergleichen:</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if not =#uzB
mes Berechtigung auf Datenverz. reicht nicht zum Schreiben!</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">end</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:nom</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "Kein
Schreibrecht auf dem temp. Verzeichnis " M</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">mes</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">return</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:now</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "Kein
Schreibrecht auf dem Arbeitsverzeichnis " W</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">mes</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Verdana;">&nbsp;
------------------------------------------------------------</span><br>



<br>



<span style="font-family: Verdana;">Der Trick ist nur, da&szlig; die
tats&auml;chliche Berechtigung A beim Start </span><br>



<span style="font-family: Verdana;">automatisch auf 0 geht, wenn auf
dem Datenverzeichnis kein Schreibrecht</span><br>



<span style="font-family: Verdana;">besteht. Die INI-Einstellung
"access=..." wird mit Trick 17 ermittelt.</span><br>



<span style="font-family: Verdana;">Sie gilt dann aber wom&ouml;glich
nicht, weil der Admin das Schreibrecht auf</span><br>



<span style="font-family: Verdana;">dem DbDir nicht einger&auml;umt hat.</span><br>



<br>



---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<font face="Verdana">
<a name="55"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 55: Schnelle
Rechenhilfe<br>



<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><span style="font-family: Verdana;"></span><span style="font-family: Verdana;"><br>



<br>



Aufgabe: Schnell mal eben eine FLEX-Prozedur machen, die immer dieselbe<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Rechnung
ausf&uuml;hrt, nur mit einem jeweils anderen Eingabewert<br>



<br>



Warum: Zuweilen mu&szlig; man routinem&auml;&szlig;ig eine Reihe von
Zahlen abarbeiten,<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; z.B. jede Zahl mit einem
bestimmten Faktor multiplizieren.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Man w&uuml;nscht sich dann,
da&szlig; man nur die Zahlen eingeben mu&szlig; und<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sonst nichts, damit es
schnellstm&ouml;glich geht.<br>



<br>



L&ouml;sung: Mit den Rechenfunktionen gibt es eine Vielzahl von
L&ouml;sungen.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Hier wird nur ein
Grundkonzept gezeigt, das sich bei Bedarf<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; leicht ganz beliebig
ausbauen l&auml;&szlig;t.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Es folgt das
kleinstm&ouml;gliche Skript, um vom eingebebenen Betrag<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jeweils die Mehrwertsteuer
zu errechnen, also 19%.<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">:begin</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">Z=0,19</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ask Betrag</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">Z*</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var Z</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">show iv</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">jump begin</span><br>



<br>



Der Trick ist der Befehl&nbsp; show iv, der das Ergebnis (in dem Moment<br>



in der iV befindlich) im Schreibfeld anzeigt. Dadurch kann der<br>



Nutzer, ohne erst noch ein OK zu best&auml;tigen oder dergl., sofort die<br>



n&auml;chste Eingabe t&auml;tigen. Leereingabe beendet die Schleife.<br>



Etwas genauer:<br>



Der Befehl&nbsp; Z*&nbsp; nimmt den gerade eingegebenen Betrag, der
sich in<br>



dem Moment in der iV befindet, und multipliziert ihn mit dem Wert<br>



von Z, der vorher auf 0,19 gesetzt wurde. Das Ergebnis landet wieder<br>



in der iV und kann mit&nbsp; show iV angezeigt werden.<br>



<br>



1. Verbesserung<br>



---------------<br>



Wenn man es ausprobiert, kommt ganz sicher die Situation: Autsch,<br>



hatte ich den Betrag richtig eingegeben? Oder: Hatte ich diesen<br>



Betrag nicht vorhin schon berechnet? Dann w&auml;r's gut, man
k&ouml;nnte <br>



nochmal sehen, was gerade oder vorher eingegeben und schon berechnet<br>



worden war.<br>



Das Basis-Skript f&uuml;r diesen Zweck sieht so aus:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">var ""</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">sho IV</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:begin</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">Z=0,19</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ask Betrag</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #ubt</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">Z*</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var
#ubt(0,10) Z n</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">sho iv</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">sho +IV</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">jump begin</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



Hier ist der Trick das Anh&auml;ngen (mit <span style="font-family: Courier New,Courier,monospace;">show +IV</span>)
der jeweiligen Zeile mit<br>



Eingabe und Ergebnis an den Text im Anzeigefeld, der zu Anfang <br>



leergemacht wird. <br>



NebenbeiTrick: Die Angabe &nbsp;<span style="font-family: Courier New,Courier,monospace;">#ubt(0,10)</span>
&nbsp;bewirkt ein Auff&uuml;llen des<br>



eingegebenen Betrags mit Leerzeichen auf 10 Stellen, wodurch das<br>



Ergebnis immer sch&ouml;n auf derselben Spalte anf&auml;ngt.<br>



<br>



<br>



2. Verbesserung f&uuml;r Fortgeschrittene<br>



------------------------------------<br>



Wenn es eine kompliziertere Berechnung statt einer simplen Grundrechen-<br>



aufgabe ist, nutzt man seit V27 komfortabel die Funktion "eval"<br>



(siehe&nbsp; h xeval)<br>



Man modifiziert dann so:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">ask Betrag</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #ubt</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;... <span style="font-weight: bold;">eval</span>-Funktion mit Verwendung von #ubt</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;...
Rest wie gehabt.</span><br style="font-family: Courier New,Courier,monospace;">



<br>



SonderTip<br>



Der FLEX&nbsp; evt.flx&nbsp; zeigt, wie man eval-Funktionen sogar so
einbinden<br>



kann, da&szlig; der Nutzer statt einer einzelnen Zahl eine richtige<br>



Rechenaufgabe mit Zahlen, Operatoren und Variablen eingeben kann.<br>



<br>



</span>
---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<font face="Verdana">
<a name="56"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 56: Odnung im
Feld schaffen<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><span style="font-family: Verdana;"></span><span style="font-family: Verdana;"><br>



<br>



Aufgabe: Schnell mal eben die in #31 stehenden Schlagw&ouml;rter <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
alphabetisch ordnen.<br>



<br>



Warum: Manche Felder werden mit mehreren gleichartigen Inhalten <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gef&uuml;llt, mitunter werden es
recht viele. Wenn sich z.B.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50 Schlagw&ouml;rter in #31
angesammelt haben, ist ein Sortieren<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sinnvoll, um etwa
Doppeleintr&auml;ge leichter zu entdecken. Bei<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; der Anzeige des Titelsatzes macht
es sich auch besser, wenn<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; die Schlagw&ouml;rter nicht total
ungeordnet erscheinen.<br>



<br>



L&ouml;sung: Bis V27.5 war das eine echt schwierige Aufgabe und wurde <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kaum jemals angepackt. Ab
V27.6 ist es leicht, weil es den<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; neuen FLEX-Befehl "sort"
gibt. Ganz ohne Trick kommt man aber<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; auch hier nicht aus...<br>



<br>



So sieht der Kern eines FLEXes aus, der die Aufgabe l&ouml;st:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">var #31 " ; ||"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins _; _^M^J_</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">sort</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins _^M^J_; _</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var (e"; ||")</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #31</span><br style="font-family: Courier New,Courier,monospace;">



<br>



Und der Kenner erkennt: Im lokalen Ersetzungsbefehl ins _.._.._<br>



k&ouml;nnen jetzt Steuerzeichen vorkommen! ^A f&uuml;r Code 1, ^M f&uuml;r 13,<br>



^J f&uuml;r 10 usw. usf. Der Befehl "sort" braucht die Steuerzeichen<br>



13 10 (= Zeilenvorschub) als Trenner zwischen den zu ordnenden<br>



Elementen, denn beim Ordnen von Textdateien sind das Zeilen.<br>



Deshalb wird der Trenner "; " zuerst durch 13 10 ersetzt, nach<br>



dem "sort" dann wieder retour.<br>



<br>



Aber wozu das&nbsp; "<span style="font-family: Courier New,Courier,monospace; font-weight: bold;">;
||</span>"?&nbsp; Das ist der wahre ExpertenTrick.<br>



Ohne es w&uuml;rde hinterher dem letzten Schlagwort, wenn es dann<br>



pl&ouml;tzlich in der Mitte auftaucht, die Trennung "; " zum
n&auml;chsten<br>



fehlen! Wenn am Ende "<span style="font-family: Courier New,Courier,monospace;">; ||</span>"
steht, dann wirkt&nbsp; </span><span style="font-family: Verdana; font-weight: bold;"><span style="font-family: Courier New,Courier,monospace;">||</span></span><span style="font-family: Verdana;"> &nbsp;wie ein <br>



weiteres Schlagwort, aber es bleibt beim Ordnen am Ende, weil<br>



|| auf jeden Fall hinter allem kommt, was mit z beginnt.<br>



<br>



Wie man's macht, wenn es nicht #31 ist und/oder wenn die<br>



Trennung nicht "; " ist, das wird jeder leicht erkennen.<br>



Auch der Einbau in die gew&ouml;hnliche Schleife zum Abarbeiten<br>



einer Erg.Menge oder gar der Gesamtbank ist Routine.<br>



Aber w&auml;re nicht ein Unterprogramm das Beste, das einem die<br>



Arbeit abnimmt, d.h. dem man nur die Kategorienummer &uuml;bergibt und<br>



dann macht es den Rest alleine? Gute Idee. So k&ouml;nnte das aussehen:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Das
ist der Aufruf: (statt #31s die gew&uuml;nschte Nummer)</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "#31s"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">perf fsort</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">...</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">end</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Und
das ist das Unterprogramm: </span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; (in
der iV steht die &uuml;bergebene Kategorienummer)</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:fsort</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $katnr</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var +"; ||"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins _; _^M^J_</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">sort</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins _^M^J_; _</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var (e"; ||")</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $inhalt</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $katnr "
" $inhalt </span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">return</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-style: italic;">Tip:</span> Wer das schrittweise
analysieren und verstehen will, setzt sich<br>



<span style="font-family: Courier New,Courier,monospace;">mes</span>-Befehle
dazwischen und sieht dann, was in dem Moment in der iV<br>



steht. Der entscheidende Trick ist das &nbsp;<span style="font-family: Courier New,Courier,monospace;">ins</span>&nbsp;
in der zweitletzten<br>



Zeile. In der iV steht in dem Moment die &uuml;bergebene Feldnummer
(hier<br>



die #31s) und in <span style="font-family: Courier New,Courier,monospace;">&nbsp;$inhalt&nbsp;</span>
steht der neue (geordnete) Feldinhalt, zusammen<br>



ergibt das also ein komplettes Datenfeld. Das &nbsp;<span style="font-family: Courier New,Courier,monospace;">ins</span>&nbsp;
ordnet es nur noch in den <br>



Datensatz ein.<br>



<br>



</span>
---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<font face="Verdana">
<a name="57"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 57: Sauberes
Filtern<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><span style="font-family: Verdana;"></span><span style="font-family: Verdana;"></span> &nbsp;<span style="font-family: Verdana;"> (Ohne unfreiwillige Umcodierung)</span><br>



<span style="font-family: Verdana;">
<br>



Aufgabe: Schnell mal eben eine Textdatei einlesen und wieder</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
rausschreiben, garantiert ohne da&szlig; ein Zeichen ver&auml;ndert</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
wird, au&szlig;er bestimmten Zeichen(folgen) oder Zeilen. </span><br>



<br>



<span style="font-family: Verdana;">Warum: Mitunter liegt eine
Textdatei vor (ASCII oder ANSI oder noch was</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
anderes) und man mu&szlig; einzelne Zeilen hinauswerfen, herausfischen</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
oder in ganz bestimmter Weise ver&auml;ndern, alles andere soll aber</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
exakt so bleiben, wie es ist. Solche Vorg&auml;nge werden gern als </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
"Filtern" bezeichnet.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Perlentaucher und Pythonb&auml;ndiger werden hier abwinken: Mach'</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ich mit einem Zweizeiler, wenn nicht gar mit "grep"! Sicher, </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
aber es geht darum, solche Vorg&auml;nge auch bei Bedarf innerhalb </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
eines FLEXes nebenbei miterledigen zu k&ouml;nnen, als Teil einer </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
gr&ouml;&szlig;eren Aufgabe. Zwar kann ein FLEX auch Python- oder Perl-</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
skripte ansto&szlig;en und deren Ergebnisse verwerten, aber das </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Vorhandensein der betr. Skriptsprache kann man leider nicht </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
generell voraussetzen.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
OK, es gibt schon den FLEX file.flx, der Textdateien zeilenweise</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
liest und wieder schreibt. Aber dabei verschwinden Leerzeichen</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
am Zeilenende. Und: Sonderzeichen au&szlig;erhalb des definierten</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Bereichs von OstWest-Zeichen, vor allem in der Gegend von</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
186-218, werden u.U. verf&auml;lscht. Das soll nicht sein!</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung: Die Zeilen werden
eingelesen wie sonst auch, sie werden aber</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
NICHT in einer #u-Variablen zwischengespeichert, sondern, und</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
das ist der Trick, ganz ohne solche Umschweife gleich wieder </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
rausgeschrieben. </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Der Hinweis soll nicht fehlen:</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
WENN Zwischenspeicherung, dann in einer $-Variablen! Diese </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
unterliegen beim Einlesen und Speichern keiner Umcodierung</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
oder Leerzeichenbeseitigung (siehe Fu&szlig;note ganz unten).</span><br>



<br>



<span style="font-family: Verdana;">Sagen wir, unsere Ausgangsdatei ist
"input.txt", die Ergebnisdatei soll</span><br>



<span style="font-family: Verdana;">"output.txt" hei&szlig;en.</span><br>



<br>



<span style="font-family: Verdana;">Wir zeigen hier einen
FLEX-Abschnitt, der das Problem l&ouml;st, auf die</span><br>



<span style="font-family: Verdana;">k&uuml;rzestm&ouml;gliche Weise.
Diesen Abschnitt kann man sich herauskopieren </span><br>



<span style="font-family: Verdana;">und in beliebige FLEXe modifiziert
einbauen, wo man derartige Aktionen</span><br>



<span style="font-family: Verdana;">braucht. Es sind mehr als zwei
Zeilen, zugegeben, es sind sieben (ohne</span><br>



<span style="font-family: Verdana;">&Ouml;ffnen und Schlie&szlig;en),
aber kurz und unkryptisch.</span><br>



<br>



<span style="font-family: monospace;">&nbsp; ------- BEGINN DES MUSTERS
--------------------------------------</span><br style="font-family: monospace;">



<span style="font-family: monospace;">...</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Die Dateien &ouml;ffnen
(zum Lesen bzw. Schreiben)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">open input.txt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">open x output.txt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ^^^^^^^^^^^^^^^^^ Beginn
der Schleife</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:GLOOP</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; naechste Zeile lesen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">get iV</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; war keine Zeile mehr da?
Dann Ende</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if cancel jump GLEND</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; eine gelesene Zeile steht
jetzt in der iV</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;
***************************************************</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Hier ist der Platz zum
Manipulieren der Zeile! </span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Ein paar Beispiele:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;
Hinauswerfen: wenn "xyz" drinsteht, die Zeile weglassen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; if %xyz% jump GLOOP</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;
Herausfischen: wenn "xyz" drinsteht, die Zeile &uuml;bernehmen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; if not %xyz% jump GLOOP</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;
Ver&auml;ndern: Z.B. Text-Ersetzung 'abc' durch 'xyz':</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ins _abc_xyz_</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;
***************************************************</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; In iV steht jetzt ein u.U.
ver&auml;nderter Inhalt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Raus damit in die Datei,
dann Zeilenvorschub dahinter:</span><br style="font-family: monospace;">



<span style="font-family: monospace;">write</span><br style="font-family: monospace;">



<span style="font-family: monospace;">write n</span><br style="font-family: monospace;">



<span style="font-family: monospace;">jump GLOOP</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">:GLEND</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ^^^^^^^^^^ Ende der
Schleife</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Dateien schliessen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">close</span><br style="font-family: monospace;">



<span style="font-family: monospace;">close x</span><br style="font-family: monospace;">



<span style="font-family: monospace;">...</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ------- ENDE DES MUSTERS
-------------------------------------</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; </span><br style="font-family: monospace;">



<span style="font-family: Verdana;">Hinweis:</span><br>



<span style="font-family: Verdana;">Man KANN auch auf Trick 44
zur&uuml;ckgreifen, der das Umcodieren einer</span><br>



<span style="font-family: Verdana;">Datei vorf&uuml;hrt! Man nimmt
schlicht die Zeilen heraus, die sich mit</span><br>



<span style="font-family: Verdana;">der Umcodierung befassen, bes. die
Zeile&nbsp; xcode xp. Fertig eingebaut</span><br>



<span style="font-family: Verdana;">ist das in den mitgelieferten
FLEX&nbsp; filecode.flx.</span><br>



<span style="font-family: Verdana;">Ferner kann man kombinieren mit
Trick 52 ("Dateien abklappern"), um</span><br>



<span style="font-family: Verdana;">mehrere Dateien in gleicher Weise
zu filtern.</span><br>



<br>



<span style="font-family: Verdana;">ABER ACHTUNG:</span><br>



<span style="font-family: Verdana;">Hier ist von TEXTdateien die Rede,
die aus ZEILEN bestehen! Die</span><br>



<span style="font-family: Verdana;">Zeilen sind durch die Codes 13 10
getrennt, der Befehl "get"</span><br>



<span style="font-family: Verdana;">liest genau die Zeichen zwischen
zwei solchen Kombinationen,</span><br>



<span style="font-family: Verdana;">die Steuerzeichen selbst
geh&ouml;ren nicht zur Zeile. Sie werden deshalb</span><br>



<span style="font-family: Verdana;">im write-Befehl mit dem&nbsp;
n&nbsp; (f&uuml;r 'newline') wieder angef&uuml;gt.</span><br>



<span style="font-family: Verdana;">Dateien ohne solche Struktur sind
ein anderes Thema (Trick 58).</span><br>



<br>



<span style="font-family: Verdana;">Fu&szlig;note zur Umcodierung</span><br>



<span style="font-family: Verdana;">=======================</span><br>



<span style="font-family: Verdana;">Wenn man im FLEX schreibt: </span><br>



<big><span style="font-family: monospace;">var "xyz"\ins #nnn</span></big><br>



<span style="font-family: Verdana;">was passiert dann?</span><br>



<span style="font-family: Verdana;">Dann wird der Text, der in der iV
steht, so behandelt, als h&auml;tte man</span><br>



<span style="font-family: Verdana;">ihn gerade im Schreibfeld
eingegeben. Und was ist das Problem?</span><br>



<span style="font-family: Verdana;">Was man im Schreibfeld eingibt, das
ist intern immer ANSI-Code.</span><br>



<span style="font-family: Verdana;">Im FLEX kann es aber sein, wenn er
z.B. mit X-Editor erstellt</span><br>



<span style="font-family: Verdana;">wurde oder wenn man ASCII-Daten
bearbeitet, da&szlig; der iV-Inhalt nicht</span><br>



<span style="font-family: Verdana;">ANSI ist, sondern ASCII. Was per
Schreibfeld eingegeben wurde,</span><br>



<span style="font-family: Verdana;">das wird per o-Tabelle der
Indexparameter in den internen Daten-</span><br>



<span style="font-family: Verdana;">bankcode gewandelt, normalerweise
also von ANSI nach ASCII.</span><br>



<span style="font-family: Verdana;">Deshalb wird im Normalfall unser
ASCII-"xyz" VOR der &Uuml;bergabe an</span><br>



<span style="font-family: Verdana;">die Verarbeitung noch per o-Tabelle
nach ANSI gewandelt - um dann</span><br>



<span style="font-family: Verdana;">sofort wieder zur&uuml;ckverwandelt
zu werden. Na sch&ouml;n, dann ist es</span><br>



<span style="font-family: Verdana;">wieder mit "xyz" identisch, alles
in Butter!? Normalerweise ja, aber</span><br>



<span style="font-family: Verdana;">beim Vararbeiten einer Textdatei
kann diese auch Zeichen enthalten,</span><br>



<span style="font-family: Verdana;">die es im OstWest-ASCII nicht gibt,
z.B. 202 oder 217. Diese werden</span><br>



<span style="font-family: Verdana;">per o.apt - aus lauter Verlegenheit
- alle auf 127 abgebildet. F&uuml;r </span><br>



<span style="font-family: Verdana;">die Abbildung ANSI-&gt;ASCII
bedeutet das aber, da&szlig; sie alle auf 217</span><br>



<span style="font-family: Verdana;">landen, welches zuf&auml;llig der
letzte Wert in o.apt ist, der die 127</span><br>



<span style="font-family: Verdana;">zugewiesen bekommt. [K&ouml;nnte
man das nicht wirklich nochmal &auml;ndern?</span><br>



<span style="font-family: Verdana;">Gute Frage, wird notiert.
K&ouml;nnte nicht mit "set c2" die gesamte</span><br>



<span style="font-family: Verdana;">Umschalterei abgeschaltet werden?
Guter Vorschlag, steht schon</span><br>



<span style="font-family: Verdana;">auf dem Zettel f&uuml;r V28.]</span><br>



<br>



<span style="font-family: Verdana;">Wenn der FLEX nun aber mit einem
ANSI-Editor (z.B. NotePad) erstellt</span><br>



<span style="font-family: Verdana;">wurde? Dann mu&szlig; man </span><br>



<big style="font-weight: bold;"><span style="font-family: monospace;">set
c1</span></big><br>



<span style="font-family: Verdana;">geben, bevor ein "insert" kommt.
Die erste der beiden Umwandlungen</span><br>



<span style="font-family: Verdana;">(die des FLEX-Textes in ANSI)
unterbleibt dann, aber die zweite mu&szlig;</span><br>



<span style="font-family: Verdana;">nat&uuml;rlich sein.</span><br>



<br>



<span style="font-family: Verdana;">Aber wenn man intern ANSI hat und
nicht ASCII? Dann braucht man eine</span><br>



<span style="font-family: Verdana;">andere o.xpt! Wie z.B. beim
N-Format: Die o.npt ist fast leer,</span><br>



<span style="font-family: Verdana;">nur wenige Werte m&uuml;ssen aus
internen Gr&uuml;nden umgewandelt werden.</span><br>



<br>



<span style="font-family: Verdana;">Klingt verzwickt? Klar,
m&uuml;&szlig;te alles nicht sein, wenn man nur ein</span><br>



<span style="font-family: Verdana;">einziges Codesystem h&auml;tte,
z.B. UTF-8. So bequem ist die reale Welt</span><br>



<span style="font-family: Verdana;">aber nun mal nicht beschaffen.</span><br>



<br>



---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<font face="Verdana">
<a name="58"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 58: Strategie
der kleinsten Schritte<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><span style="font-family: Verdana;"></span><span style="font-family: Verdana;"></span> &nbsp;<span style="font-family: Verdana;"> (Datei Byte f&uuml;r Byte lesen und
verarbeiten)</span><br>



<span style="font-family: Verdana;">
</span><br>



<span style="font-family: Verdana;">Aufgabe: Schnell mal eben eine
Bin&auml;rdatei durchsehen und schauen, ob</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
eine bestimmte Codefolge darin vorkommt und wie oft.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Sch&ouml;n w&auml;re, die Vorkommnisse auch angezeigt zu bekommen,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
aber mit 30 Zeichen oder so links und rechts davon. Und</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
auch die Position innerhalb der Datei (sog. "Offset")!</span><br>



<br>



<span style="font-family: Verdana;">Warum: Es gibt Dateien ohne
Zeilenstruktur, und zwar nicht wenige.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Oft steht kein lesbarer Text drin, sondern codierte Daten.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Man nennt sie oft "Bin&auml;rdateien", obwohl JEDE Datei aus Bytes</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
und jedes Byte aus Bits (= binary digits) besteht und somit </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ALLES bin&auml;r gespeichert ist.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Neben den Programmdateien (.EXE u.a.), von denen man besser</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
die Finger l&auml;&szlig;t, gibt es Bild- und Videodateien (.JPG. .AVI</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
u.a.), mit denen aus Sicht von allegro-Anwendungen wohl auch</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
nichts gemacht werden mu&szlig;, aber es ist z.B. auch m&ouml;glich,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
da&szlig; eine XML- oder HTML-Datei keine Zeilentrenner enth&auml;lt!</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Das trifft auch auf MARC-Originaldateien zu. Und schlie&szlig;lich </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
sind die allegro-Dateien der Typen .ALD/.ALG nicht zeilenweise</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
strukturiert und enthalten neben Text- auch Steuerzeichen. Das</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
bequeme Einlesen einer Zeile mit "get iV" geht jedenfalls dann</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
nicht, weil die Zeilen-Steuerzeichen 13 10 fehlen.</span><br>



<br>



<span style="font-family: Verdana;">Anm.:&nbsp; Das Durchsuchen und
Verarbeiten von .ALD und .ALG-Dateien geht</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
nat&uuml;rlich am allerbequemsten mit der Volltextsuche, wenn man</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Zeichenfolgen sucht, die in den Datenfeldern vorkommen.</span><br>



<br>



<span style="font-family: Verdana;">Will man sich nicht auf Dateien
unterhalb einer bestimmten L&auml;nge</span><br>



<span style="font-family: Verdana;">beschr&auml;nken, sondern
prinzipiell in der Lage sein, beliebig lange</span><br>



<span style="font-family: Verdana;">Dateien durchzusehen, dann hilft
nur die Verarbeitung Byte f&uuml;r</span><br>



<span style="font-family: Verdana;">Byte. Ist das nicht furchtbar
langsam? Es geht.</span><br>



<span style="font-family: Verdana;">Zwar ist auch das Einlesen von
Bl&ouml;cken fester L&auml;nge</span><br>



<span style="font-family: Verdana;">m&ouml;glich (z.B. fetch 1000),
aber wenn die zu suchende Zeichenfolge</span><br>



<span style="font-family: Verdana;">genau auf einer Blockgrenze liegt
(z.B. auf Position 999 beginnt), </span><br>



<span style="font-family: Verdana;">gibt es ein Problem...</span><br>



<br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Ein einzelnes Byte einlesen, das kann man auf zwei Arten machen:</span><br>



<br>



<big style="font-weight: bold;"><span style="font-family: monospace;">fetch
1</span></big><span style="font-family: Verdana;">&nbsp;&nbsp; <br>



&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; holt ein Byte in die iV, wobei
Steuercodes unterhalb</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
32 ersetzt werden durch ^ und einen nachfolgenden Buchstaben,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
und zwar A f&uuml;r 1 usw., @ f&uuml;r 0, ^Z f&uuml;r 26</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Mit&nbsp; if "1" ...&nbsp;&nbsp; pr&uuml;ft man, ob das Byte die Ziffer
1 ist</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Mit&nbsp; if "^A" ...&nbsp; dagegen, ob es der Bytecode 01 ist.</span><br>



<br>



<big style="font-family: monospace;"><span style="font-weight: bold;">fetch
b</span></big><span style="font-family: Verdana;">&nbsp;&nbsp; <br>



&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; holt das n&auml;chste Byte als
Dezimalzahl; statt A also 65</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
und statt a die Zahl 97, statt Ziffer 1 die 49.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Mit&nbsp; if 49 ...&nbsp; pr&uuml;ft man, ob das Byte die Ziffer 1 ist</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Mit&nbsp; if 1 ...&nbsp;&nbsp; dagegen, ob es der Bytecode 01 ist.</span><br>



<br>



<span style="font-family: Verdana;">Beide Befehle eignen sich f&uuml;r
den hier in Rede stehenden Zweck.</span><br>



<span style="font-family: Verdana;">(Umcodiert wird hierbei
&uuml;brigens nie!)</span><br>



<span style="font-family: Verdana;">Nur der erste eignet sich, wenn man
das gelesene Byte hernach mit</span><br>



<span style="font-family: Verdana;">"write ^" wieder korrekt in eine
andere Datei hinausschreiben will.</span><br>



<br>



<span style="font-family: Verdana;">Der erste Trick besteht nun darin,
Zeichen f&uuml;r Zeichen mit einem der</span><br>



<span style="font-family: Verdana;">beiden Befehle zu lesen und jeweils
mit dem ersten Zeichen der</span><br>



<span style="font-family: Verdana;">gesuchten Folge zu vergleichen. Nur
bei Gleichheit geht es dann</span><br>



<span style="font-family: Verdana;">weiter mit dem Lesen des
n&auml;chsten Zeichens und Vergleich mit dem</span><br>



<span style="font-family: Verdana;">zweiten Zeichen der Folge usw.,
sonst braucht das zweite Zeichen</span><br>



<span style="font-family: Verdana;">ja nicht mehr verglichen zu werden.</span><br>



<br>



<span style="font-family: Verdana;">Der zweite Trick ist, bei einer
&Uuml;bereinstimmung des ersten Zeichens</span><br>



<span style="font-family: Verdana;">dessen Position in der Datei
mit&nbsp; fetch p&nbsp; zu bestimmen und zu sichern.</span><br>



<span style="font-family: Verdana;">Bei Nicht&uuml;bereinstimmung des
zweiten, dritten ... Zeichens wird dann</span><br>



<span style="font-family: Verdana;">zu der gesicherten Position
zur&uuml;ckgekehrt (mit fetch m) und das</span><br>



<span style="font-family: Verdana;">n&auml;chste Zeichen geholt. Nur so
kann man, wenn z.B. nach der Folge</span><br>



<span style="font-family: Verdana;">'121' gesucht wird, zwei Treffer
ermitteln, wenn in der Datei die</span><br>



<span style="font-family: Verdana;">Folge&nbsp; '12121' auftritt, d.h.
die gesuchte Folge innerhalb ihrer</span><br>



<span style="font-family: Verdana;">selbst neu beginnt.</span><br>



<br>



<span style="font-family: Verdana;">Beispiel</span><br>



<span style="font-family: Verdana;">========</span><br>



<span style="font-family: Verdana;">Es soll festgestellt werden, ob und
wie oft in der Datei abc.xyz</span><br>



<span style="font-family: Verdana;">die Zeichenfolge '121' auftritt.
(Leider mu&szlig; man an mehreren Stellen</span><br>



<span style="font-family: Verdana;">eingreifen, wenn es eine andere
Folge sein soll, siehe ACHTUNG...</span><br>



<span style="font-family: Verdana;">Enorm elegant ist diese L&ouml;sung
also nicht, zugegeben.)</span><br>



<br>



<span style="font-family: monospace;">&nbsp; ------------------------
MUSTER ------------------------</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Die Datei &ouml;ffnen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">open abc.xyz</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Protokolldatei &ouml;ffnen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">open x ergebnis.txt</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Z&auml;hler f&uuml;r die
Vorkommnisse</span><br style="font-family: monospace;">



<span style="font-family: monospace;">z=0</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ^^^^^^^^^^^^^^^^^ Beginn
der Schleife</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:GLOOP</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; naechstes Zeichen lesen,
als dezimale Bytezahl</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fet b</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; war denn noch eins da?
Sonst Ende</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if can jump GLEND</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ein gelesenes Zeichen
steht in der iV als Zahl</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;
***************************************************</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Hier ist der Platz zum
Manipulieren! </span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Erstes Zeichen
vergleichen: (Ziffer 1 = Byte 49)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if =49 jump MATCH&nbsp;&nbsp; //
&lt;- ACHTUNG: anpassen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;
***************************************************</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Das erste Zeichen wurde
noch nicht gefunden</span><br style="font-family: monospace;">



<span style="font-family: monospace;">jump GLOOP</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; erstes Zeichen gefunden,
die weiteren einzeln vergleichen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:MATCH</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Offset-Position hinter dem
ersten Zeichen in $pos vermerken</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fet p</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins $pos</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; jetzt einzeln lesen und
vergleichen, bei Ungleichheit -&gt; :NEXTP</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fet b</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ACHTUNG: hier ebenfalls anpassen f&uuml;r die weiteren Bytes</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if not =50 jump NEXTP&nbsp;&nbsp;
// Ziffer 2</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fet b</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if not =49 jump NEXTP&nbsp;&nbsp;
// Ziffer 1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ... hier evtl. noch
weitere Bytes in dieser Weise behandeln</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Treffer! Z&auml;hler
erh&ouml;hen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">z+1</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Meldung in die
Ergebnisdatei</span><br style="font-family: monospace;">



<span style="font-family: monospace;">wri "Pos. " $pos ": "</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Umgebung 30 Zeichen links
und rechts abgreifen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">eval $pos -30</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if &lt;0 var "0"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Pos. 30 Byte nach links
setzen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fet m</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; 50 Zeichen holen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fet 60</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins $umg</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; und mit ausgeben</span><br style="font-family: monospace;">



<span style="font-family: monospace;">write "..." $umg "..." n</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">:NEXTP</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Zur gemerkten Position
zur&uuml;ck</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var $pos</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fet m</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; und dort weitermachen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">jump GLOOP</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">:GLEND</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ^^^^^^^^^^ Ende der
Schleife</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Datei schliessen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">close</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Z&auml;hler ausgeben
(ACHTUNG: Wert "121" anpassen)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">wri n "121&nbsp; wurde " z "mal
gefunden"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">close x</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Ergebnisdatei zeigen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">help ergebnis.txt</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; ---------------------
MUSTER ENDE ------------------------</span><br style="font-family: monospace;">



<br>



<span style="font-family: Verdana; font-weight: bold;">Teil 2:</span><br>



<span style="font-family: Verdana;"></span><span style="font-family: Verdana; font-weight: bold;">Bin&auml;re Dateien Byte f&uuml;r Byte verarbeiten, z.B. auch XML</span><br>



<br>



<span style="font-family: Verdana;">Brauchen kann man das immer dann, wenn eine Datei u.U. keine </span><br>



<span style="font-family: Verdana;">Zeilentrenner hat, wie z.B. bei XML. Dann ist vor allem "get" zum</span><br>



<span style="font-family: Verdana;">Einlesen der n&auml;chsten Zeile nicht anwendbar.</span><br>



<br>



<span style="font-family: Verdana;">Im Kern gibt es dabei zwei Tricks:</span><br>



<br>



<span style="font-family: Verdana;">1. Die Sequenz&nbsp; </span><br>



<br>



<span style="font-family: Verdana; font-weight: bold;">&nbsp;&nbsp; fetch 1</span><br style="font-family: Verdana; font-weight: bold;">



<span style="font-family: Verdana; font-weight: bold;">&nbsp;&nbsp; write ^</span><br style="font-family: Verdana; font-weight: bold;">



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp; (Sonderfall: Zeichen ^ wird intern zu ^~)</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; liest zuerst ein Byte als Zeichen, wobei Steuercodes wie z.B. 13 10</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; in der Form&nbsp; ^M^J&nbsp; in die iV gesetzt werden (^ und M getrennt!).</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Der zweite Befehl schreibt den Inhalt der iV in entsprechender </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Weise in die Ausgabedatei, d.h. aus&nbsp; ^M&nbsp; wird wieder der Code 13.</span><br>



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Zwischen diesen beiden Zeilen kann man mit dem eingelesenen Zeichen</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; nat&uuml;rlich anstellen, was immer man will. Statt des zweiten Befehls</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; kann man auch ganz andere Dinge machen, schlie&szlig;lich mu&szlig; nicht f&uuml;r</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; jedes Zeichen wieder genau ein Zeichen ausgegeben werden.</span><br>



<br>



<span style="font-family: Verdana;">2. Mit dem Befehl </span><br>



<br>



<span style="font-family: Verdana; font-weight: bold;">&nbsp;&nbsp; fetch c</span><br style="font-family: Verdana; font-weight: bold;">



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp; schaut man nach, was das n&auml;chste Zeichen ist, ohne da&szlig; schon der</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Dateizeiger weiterger&uuml;ckt w&uuml;rde. Das braucht man, um nach dem </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Einlesen eines '&lt;' schon mal zu spicken, ob als n&auml;chstes</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; ein '/' kommt.</span><br>



<br>



<span style="font-family: Verdana;">Als Beispiel nehmen wir die Aufgabe, schnell mal eben eine XML-Datei</span><br>



<span style="font-family: Verdana;">ein ganz klein wenig leichter lesbar darzustellen:</span><br>



<span style="font-family: Verdana;">1. Jedes Tag soll auf neuer Zeile beginnen, schlie&szlig;ende Tags aber nicht</span><br>



<span style="font-family: Verdana;">2. Die echten Daten, also was zwischen den Tags steht, sollen fett</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; angezeigt werden.</span><br>



<span style="font-family: Verdana;">[Man braucht das nicht wirklich, es gibt ja m&auml;chtige XML-Werkzeuge,</span><br>



<span style="font-family: Verdana;">angefangen bei notepad++. Es geht nur um das Schema der VerFLEXung</span><br>



<span style="font-family: Verdana;">dieser Aufgabe. Anwendbar auch auf HTML.]</span><br>



<br>



<span style="font-family: Verdana;">So sieht der fertige FLEX aus:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp; ----------------------------------------------------------------</span><br style="font-family: Courier New,Courier,monospace;">



<small><span style="font-family: Courier New,Courier,monospace;">&nbsp; XMLSHOW.FLX : XML-Datei anzeigen, Feldinhalte fett</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; 2008-12-09&nbsp; : Es wird zunaechst eine RTF-Datei draus gemacht</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Aufruf:&nbsp;&nbsp; X xmlshow dateiname</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Dateiname steht in iV, oeffnen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">open</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if no mes Die Datei gibt's nicht;end</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Datei zum Schreiben oeffnen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">open x xmlshow.rtf</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Dateikopf, damit rtf-Anzeige dann klappt</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">wri Flisthead.rtf</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Schleife verarbeitet die Datei zeichenweise</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:LOOP</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; naechstes Zeichen holen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">fetch 1</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Dateiende? -&gt; :dende</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if cancel jump dende</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Ist es &lt; oder &gt; ? Dann Sonderbehandlung</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "&lt;" perf k;jump LOOP</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "&gt;" perf g;jump LOOP</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; normal: Zeichen einfach wieder rausschreiben</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">wri ^<br>



</span></small><small><span style="font-family: Courier New,Courier,monospace;">jump LOOP</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:dende</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">close</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Abschluss der rtf-Datei</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">wri "}}}"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">close x</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; und anzeigen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">help xmlshow</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">end</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:k&nbsp;&nbsp; // UPro fuer Zeichen &lt;</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; welches Zeichen kommt hinter &lt; ?</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">fetch c</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Falls nicht &lt;/, dann auch neue Zeile</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if not ="47" wri "\\b0 \\par " n "&lt;";return</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; sonst nur Fett abschalten</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">wri "\\b0 &lt;"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">return</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:g&nbsp;&nbsp; // UPro fuer Zeichen &gt;</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Fett einschalten, es kommt (vielleicht) ein Inhalt</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">wri "&gt;\\b "</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">return</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;"></span><br>



</small>---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<font face="Verdana">
<a name="59"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 59:
Superschnelles Einspeisen<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><span style="font-family: Verdana;"></span><span style="font-family: Verdana;"></span> &nbsp;<span style="font-family: Verdana;"> (gro&szlig;er Mengen neuer Daten)</span><br>



<span style="font-family: Verdana;">
</span><br>



<small><span style="font-family: Verdana;">Aufgabe:
Schnellstm&ouml;glich 20.000 oder mehr Datens&auml;tze einbringen.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><br>



<span style="font-family: Verdana;">Warum: Es kommt vor, da&szlig; man
ohne sp&uuml;rbare Beeintr&auml;chtigung des </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
laufenden Betriebs ganz schnell eine gr&ouml;&szlig;ere Menge neuer
Daten</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
verf&uuml;gbar machen will. </span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">Falls es gen&uuml;gt, die neuen
Daten zun&auml;chst &uuml;ber einen oder zwei ganz </span><br>



<span style="font-family: Verdana;">wichtige Schl&uuml;ssel finden zu
k&ouml;nnen, dann l&auml;&szlig;t sich etwas machen.</span><br>



<span style="font-family: Verdana;">Eine Index-Erneuerung irgendwann
sp&auml;ter mu&szlig; dann aber den Index</span><br>



<span style="font-family: Verdana;">vervollst&auml;ndigen.</span><br>



<span style="font-family: Verdana;">Vorliegen m&uuml;ssen die Daten
zuerst einmal als Grunddatei (Typ .ALG)</span><br>



<span style="font-family: Verdana;">oder Externdatei (Typ .ADT). </span><br>



<span style="font-family: Verdana;">Dann kommen zwei Tricks zur
Anwendung:</span><br>



<br>



<span style="font-family: Verdana;">1. Es wird eine abgemagerte
Indexparameterdatei automatisch erstellt,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; die nur die ersten
zwei ak-Befehle enth&auml;lt. Diese wird dann statt</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; der normalen geladen,
so da&szlig; dann neu zu speichernde Daten viel</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; schneller indexiert
werden k&ouml;nnen - die Anzahl der Schl&uuml;ssel ist </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; n&auml;mlich der
Haupt-Zeitfaktor beim Abspeichern.</span><br>



<br>



<span style="font-family: Verdana;">2. Das Einlesen geschieht
zun&auml;chst ohne Speichern mit dem z-Wert 0</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; beim update-Befehl,
dann gelangen die S&auml;tze nur in den Offline-</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; speicher. Danach wird
mit "save off" gespeichert. Das geht schneller</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; als update mit z-Wert
1, denn dabei wartet das Programm jeweils</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; 0.5 Sekunden zwischen
zwei S&auml;tzen.</span><br>



<br>



<span style="font-family: Verdana;">Als Vorbereitung kann man in den
Indexparametern die ersten zwei</span><br>



<span style="font-family: Verdana;">ak-Befehle so pr&auml;parieren,
da&szlig; damit die entscheidenden Schl&uuml;ssel</span><br>



<span style="font-family: Verdana;">erzeugt werden. In cat.api
k&ouml;nnte man etwa direkt unter die Zeile</span><br>



<span style="font-family: Courier New,Courier,monospace;">ak=zz+@</span><br>



<span style="font-family: Verdana;">diese neue Zeile einsetzen:</span><br>



<span style="font-family: Courier New,Courier,monospace;">ak=20+G</span><br>



<span style="font-family: Verdana;">dann w&uuml;rde der Titelanfang als
zweiter der beiden Schl&uuml;ssel produziert,</span><br>



<span style="font-family: Verdana;">der erste w&auml;re der
Prim&auml;rschl&uuml;ssel (IdNummer in #00).</span><br>



<span style="font-family: Verdana;">An drei Stellen, mit *** markiert,
mu&szlig; man eingreifen, bevor man den</span><br>



<span style="font-family: Verdana;">FLEX einsetzt:</span><br>



<span style="font-family: Verdana;">***1 Sollen es drei oder mehr
Schl&uuml;ssel sein? Bei&nbsp; z&gt;2&nbsp; Zahl einsetzen!</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Vielleicht sogar nur 1, vielleicht auch 5.</span><br>



<span style="font-family: Verdana;">***2 Den korrekten Dateinamen statt
&lt;xyz&gt; einsetzen.</span><br>



<span style="font-family: Verdana;">***3 Die Nummer der Datei
einsetzen, in welche die neuen Daten sollen</span><br>



<br>



<span style="font-family: Verdana;">So sieht der FLEX aus, der beide
Tricks realisiert:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
----------------------------------------------------------------</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Vorbereitung: Pr&uuml;fen, ob neue oder bearb. Saetze im
Offline-Speicher</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">find new</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if g0 mes Es
gibt noch ungespeicherte neue Saetze, zuerst speichern!;end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">find edit</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if g0 mes Es
gibt noch ungespeicherte bearbeitete Daten, zuerst speichern!;end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Wenn
nicht, dann Offline-Speicher leeren</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">erase off</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; 1.
Indexparameter abspecken: nur die ersten 2 ak-Zeilen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;
alles andere bleibt drin.</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var D B "."
K1 "pi"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">open</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if no mes
Kann die Indexparameter nicht finden!;end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Abgespeckte Datei soll mager.api heissen und auf DbDir liegen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var D
"mager." K1 "pi"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">open x</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">z=0</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:loop</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">get</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if cancel
jump lend</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Kommentare und leere Zeilen weglassen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if " " jump
loop</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" jump
loop</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
ak-Zeile gefunden: zaehlen, bei 3 abbrechen&nbsp; ***1</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "ak="
z+1;if z&gt;2 jump loop</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">write</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">write n</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">jump loop</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:lend</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">close</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">close x</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Magere
Index-Param.datei ist fertig</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Diese
jetzt laden</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "mager"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">index p </span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; 2.
Update</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;
Einstellung: alle Saetze nehmen, aber nicht sofort speichern</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">set u010</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Dateinummer f&uuml;r die neuen Daten (Nummer von 1 bis 255)&nbsp; ***3</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">input 129</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Datei
&lt;xyz&gt; einspeisen. Statt &lt;xyz&gt; den echten Namen einsetzen!
***2</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">update
&lt;xyz&gt;</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Daten
jetzt im Offline-Speicher</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Fragen
ob Speichern gewuenscht</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">yesno
Speichern?</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if yes save
offline</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if no var
"Speicherung dann auf Wunsch mit 'x save off'" n "Oder Abbruch mit 'x
erase off'";mes</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">sho off</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Jetzt
sind die S&auml;tze gespeichert und "mager" indexiert</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Die
normalen, fetten Indexparameter wieder laden</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var B </span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">index p</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Dateinummer zur&uuml;cksetzen&nbsp; ***3</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">input 1</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Verdana;"></span></small><br>



---------------------------------------------------------------------------------------------------<br>



<font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;"></span></font><br>



<font face="Verdana">
<a name="60"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick
60:&nbsp;Wiederholungstaten<span style="color: rgb(0, 0, 0);"></span></span><span style="color: rgb(0, 102, 0);"><span style="color: rgb(0, 0, 0);"></span></span></font><span style="font-family: Verdana;"></span><span style="font-family: Verdana;"></span> &nbsp;<span style="font-family: Verdana;">&nbsp;</span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Alles Wichtige &uuml;ber
Schleifen in FLEX</span></span><br style="font-family: Verdana; font-weight: bold;">



<br>



<span style="font-family: Verdana;">Aufgabe: Einfachstm&ouml;glich eine
Befehlsfolge immer wieder abarbeiten,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
bis ein bestimmter Wert oder eine Bedingung auftritt.</span><br>



<br>



<span style="font-family: Verdana;">Warum: Das zyklische Durchlaufen
von Befehlsfolgen geh&ouml;rt zu den</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
h&auml;ufigsten &Uuml;bungen beim Programmieren. Daf&uuml;r mu&szlig;
es einfache</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Rezepte geben, die man routinem&auml;&szlig;ig anwenden kann.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
So etwas nennt man auch "Schleife", weil dabei wieder und</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
wieder zum Anfangspunkt einer Befehlsfolge zur&uuml;ckgekehrt wird.</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">Zuerst etwas Theorie</span><br>



<span style="font-family: Verdana;">Richtige Programmiersprachen (so
eine ist FLEX nicht) haben drei</span><br>



<span style="font-family: Verdana;">oder vier L&ouml;sungen.
Schematisch sehen sie folgenderma&szlig;en aus:</span><br>



<br>



<span style="font-family: Verdana;">1. Die
for-Schleife&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-family: Courier New,Courier,monospace;">for(anfangswert;
bedingung; schrittbefehl)</span></span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Verdana;">&nbsp;&nbsp;
----------------&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-family: Courier New,Courier,monospace;">&lt;befehle&gt;</span></span><br>



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Das ist wohl die
beliebteste Form.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Der "for"-Befehl setzt
einen Anfangswert, eine Bedingung</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; und einen
Schrittbefehl. Die dann folgenden &lt;befehle&gt; werden so oft</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; ausgef&uuml;hrt, und
jeweils danach der Schrittbefehl, wie die bedingung</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; noch gilt. </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Falls die bedingung
gleich schon zu Anfang nicht gilt, werden</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; die&nbsp;
&lt;befehle&gt;&nbsp; gar nicht ausgef&uuml;hrt.</span><br>



<br>



<span style="font-family: Verdana;">2. Die
while-Schleife&nbsp;&nbsp;&nbsp; <span style="font-family: Courier New,Courier,monospace;">while(bedingung)</span></span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Verdana;">&nbsp;&nbsp;
------------------&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-family: Courier New,Courier,monospace;">&lt;befehle&gt;</span></span><br>



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp; &lt;befehle&gt; werden
so lange immer wieder ausgef&uuml;hrt, wie bedingung</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; gilt. Gilt die
bedingung schon am Anfang nicht, passiert nichts.</span><br>



<br>



<span style="font-family: Verdana;">3. Die
do-Schleife&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-family: Courier New,Courier,monospace;">do</span></span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;
---------------&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-family: Courier New,Courier,monospace;">&lt;befehle&gt;</span></span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp; &nbsp; &nbsp;<span style="font-family: Courier New,Courier,monospace;">while(bedingung)</span></span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Verdana;">&nbsp;&nbsp; &lt;befehle&gt; werden
ausgef&uuml;hrt, dann bedingung gepr&uuml;ft, und wenn</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; erf&uuml;llt, abermals
&lt;befehle&gt;, bis bedingung nicht mehr gilt. </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Die Befehle werden
also mindestens einmal ausgef&uuml;hrt, im </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Gegensatz zu 2.&nbsp; </span><br>



<br>



<span style="font-family: Verdana;">4. Die
goto-Schleife&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-family: Courier New,Courier,monospace;">wenn nicht
bedingung dann goto weiter</span></span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;
-----------------&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-family: Courier New,Courier,monospace;">:marke</span></span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp; &nbsp; <span style="font-family: Courier New,Courier,monospace;">&lt;befehle&gt;</span></span><br>



<span style="font-family: Verdana;">&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style="font-family: Courier New,Courier,monospace;">wenn
bedingung dann goto marke</span></span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp; &nbsp; &nbsp; &nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style="font-family: Courier New,Courier,monospace;">:weiter</span></span><br>



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Die erste Zeile
l&auml;&szlig;t man weg, wenn die &lt;befehle&gt; mindestens einmal</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; ausgef&uuml;hrt werden
sollen.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Diese Form wird von
Informatikern gering gesch&auml;tzt, weil sie</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; wenig
&uuml;bersichtlich ist und deshalb auch fehlertr&auml;chtig, vor allem</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; ist sie kaum
pr&uuml;fbar, z.B. von einem Compiler oder Interpreter.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Es gab Bestrebungen,
sie in Acht und Bann zu tun, dazu ist es aber</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; nicht gekommen.</span><br>



<br>



<span style="font-family: Verdana;">Wichtig zu wissen: Alle 4 Formen
sind logisch gleichwertig. Was man</span><br>



<span style="font-family: Verdana;">mit einer davon machen kann, kann
man auch mit jeder der anderen drei</span><br>



<span style="font-family: Verdana;">Formen machen, allenfalls mit einer
zus&auml;tzlichen Bedingungspr&uuml;fung.</span><br>



<span style="font-family: Verdana;">Programmierer k&ouml;nnen sich
folglich entscheiden, auf eine oder</span><br>



<span style="font-family: Verdana;">mehr als eine davon ganz zu
verzichten. Ob eine Konstruktion </span><br>



<span style="font-family: Verdana;">&uuml;bersichtlich und
verst&auml;ndlich ist, h&auml;ngt aber nicht nur von </span><br>



<span style="font-family: Verdana;">ihrem Typ ab, sondern auch von der
Art, wie sie umgesetzt ist,</span><br>



<span style="font-family: Verdana;">wozu auch Kommentare geh&ouml;ren.
So *kann* selbst der Typ 4 durchaus</span><br>



<span style="font-family: Verdana;">&uuml;bersichtlich und
verst&auml;ndlich realisiert werden, der Typ 1 dagegen</span><br>



<span style="font-family: Verdana;">erzwingt geradezu ein hohes
Ma&szlig; an &Uuml;bersichtlich- und Durchschau-</span><br>



<span style="font-family: Verdana;">barkeit, aber die Formulierung der
Bedingung kann manchmal recht</span><br>



<span style="font-family: Verdana;">abstrakt und schwer durchschaubar
sein - Gewohnheitssache.</span><br>



<span style="font-family: Verdana;">Form 1 ist scheinbar suboptimal in
F&auml;llen, wo die Anzahl der </span><br>



<span style="font-family: Verdana;">Schleifendurchl&auml;ufe nicht von
einem Z&auml;hler abh&auml;ngt. Mit geschickter</span><br>



<span style="font-family: Verdana;">Wahl der Bedingung kann man das
aber leicht umgehen und dann den</span><br>



<span style="font-family: Verdana;">Schrittbefehl und sogar den
Anfangswert weglassen - damit hat man</span><br>



<span style="font-family: Verdana;">dasselbe wie Form 2.</span><br>



<span style="font-family: Verdana;">Alle vier Formen stehen in der
Gefahr, da&szlig; bei ungen&uuml;gend durch-</span><br>



<span style="font-family: Verdana;">dachten Bedingungen Endlosschleifen
entstehen k&ouml;nnen. Es ist sogar</span><br>



<span style="font-family: Verdana;">grunds&auml;tzlich unm&ouml;glich,
dies softwaretechnisch auszuschlie&szlig;en.</span><br>



<br>



<span style="font-family: Verdana;">FLEX kennt leider nur den Typ 4,
wobei es scheinheiligerweise nicht</span><br>



<span style="font-family: Verdana;">goto hei&szlig;t, sondern jump. Man
mu&szlig; also &uuml;berlegen, wie man damit</span><br>



<span style="font-family: Verdana;">geschickt und
sicherheitsbewu&szlig;t umgeht, aber schwer ist das nicht. </span><br>



<span style="font-family: Verdana;">Wir zeigen es an zwei Beispielen,
die man als Schemata leicht</span><br>



<span style="font-family: Verdana;">&uuml;bernehmen und verinnerlichen
kann.</span><br>



<br>



<span style="font-family: Verdana;">A. Schleife mit Z&auml;hler</span><br>



<span style="font-family: Verdana;">======================</span><br>



<span style="font-family: Verdana;">F&uuml;r die Zahlen von 1 bis 100
sollen bestimmte Dinge ausgef&uuml;hrt</span><br>



<span style="font-family: Verdana;">werden, die hier symbolisch durch
&lt;befehle&gt; dargestellt sind:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
z=1</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
:loop</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
&lt;befehle&gt;</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
z+1</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
if z&lt;101 jump loop</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">Innerhalb der &lt;befehle&gt; kann
z auch noch vorkommen, mu&szlig; aber nicht. </span><br>



<span style="font-family: Verdana;">Aufzupassen ist, z nicht innerhalb
der &lt;befehle&gt; zu *ver&auml;ndern*, es</span><br>



<span style="font-family: Verdana;">sei denn, aus genau &uuml;berlegten
Gr&uuml;nden. Beim if-Befehl wird der </span><br>



<span style="font-family: Verdana;">momentane Wert von z genommen, egal
wie er zustandekam.</span><br>



<br>



<span style="font-family: Verdana;">Hinweis: Als Name f&uuml;r eine
Schleifenvariable nehmen Programmierer</span><br>



<span style="font-family: Verdana;">gewohnheitsm&auml;&szlig;ig oft das
i. In FLEX gibt es das nicht, da ist z </span><br>



<span style="font-family: Verdana;">die einzige ganzzahlige Variable
und Z die einzige Gleitkommavariable. </span><br>



<span style="font-family: Verdana;">Mit den sonstigen Variablen kann
man jedoch auch gut rechnen, nur</span><br>



<span style="font-family: Verdana;">nicht ganz so direkt wie mit z und
Z.</span><br>



<span style="font-family: Verdana;">Ersatzweise kann man z.B. so
arbeiten - mit $i statt i:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
$i=1</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
:loop</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
&lt;befehle&gt;</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
eval $i+1</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
ins $i</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
if &lt;101 jump loop</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;
--- Ende :loop ---</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">Hier steht vor dem &lt;101 kein $i!
Es wird vielmehr der Inhalt der </span><br>



<span style="font-family: Verdana;">internen Variablen genommen, und
das ist in dem Moment eben noch</span><br>



<span style="font-family: Verdana;">der Wert von $i. Verbal kann man
die letzten drei Zeilen so ausdr&uuml;cken:</span><br>



<span style="font-family: Verdana;">Addiere 1 auf den Wert von $i,
setze das Ergebnis in die Variable $i,</span><br>



<span style="font-family: Verdana;">vergleiche diesen Wert mit der Zahl
101, und wenn er kleiner ist,</span><br>



<span style="font-family: Verdana;">springe zur Marke :loop.</span><br>



<span style="font-family: Verdana;">Variante: Die Endzahl kann auch in
einer #u-Variablen stehen oder in</span><br>



<span style="font-family: Verdana;">einem Datenfeld. Dann sieht die
Endpr&uuml;fung so aus:</span><br>



<br>



<span style="font-family: Verdana;"><span style="font-family: Courier New,Courier,monospace;">if &lt;#nnn ...</span><br>



&nbsp; &nbsp;also z.B.&nbsp; <span style="font-family: Courier New,Courier,monospace;">if &lt;#uxy jump
loop</span>&nbsp;&nbsp; oder&nbsp;&nbsp; <span style="font-family: Courier New,Courier,monospace;">if &lt;#123 jump
loop</span></span><br>



<br>



<span style="font-family: Verdana;"><span style="font-style: italic;">Empfehlung:
</span>Eine Sprungmarke, die als Schleifenbeginn dient, benennt</span><br>



<span style="font-family: Verdana;">man entweder :loop&nbsp; oder mit
einem Namen, in dem :loop vorkommt.</span><br>



<span style="font-family: Verdana;">So wird visuell immer sofort klar,
was da vorliegt. Einen Anfangswert,</span><br>



<span style="font-family: Verdana;">wenn einer gebraucht wird, immer in
der direkt vorangehenden Zeile</span><br>



<span style="font-family: Verdana;">setzen. Zur visuellen
Verdeutlichung *kann* man einen Kommentar, wie</span><br>



<span style="font-family: Verdana;">hier&nbsp; --- Ende :loop ---&nbsp;
unter das Schleifenende setzen.</span><br>



<span style="font-family: Verdana;">Hinweis: Wenn zwei gleiche
Sprungmarken in einem FLEX vorkommen, dann</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
gilt nur die erste.</span><br>



<br>



<span style="font-family: Verdana;">B. Schleife mit beliebiger
logischer Bedingung</span><br>



<span style="font-family: Verdana;">==============================================</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; In FLEX sehr viel
h&auml;ufiger als Z&auml;hlschleifen! Aber genaugenommen</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; ist A. sowieso nur ein
Spezialfall von B.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Beispiel:
Ergebnismenge abarbeiten</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Die S&auml;tze einer
Ergebnismenge sollen abgearbeitet werden, d.h. f&uuml;r</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; jeden Satz sind
bestimmte Befehle auszuf&uuml;hren. Dabei wird kein</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Z&auml;hler gebraucht.
Hier das Muster:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">first</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:eloop</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&lt;befehle&gt;
</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">next</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if yes jump
eloop</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Im Hilfetext zu "next"
(h xnext&nbsp; eingeben) findet man auch das</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; Muster, mit dem man
die gesamte Datenbank abarbeiten kann.</span><br>



<br>



<span style="font-family: Verdana;">Und wo ist jetzt der Trick? Ob man
wirklich hier von Tricks sprechen</span><br>



<span style="font-family: Verdana;">will, sei dahingestellt. Es sind
zwei Dinge zu nennen, die dem </span><br>



<span style="font-family: Verdana;">Einsteiger wie auch dem in anderen
Sprachen bewanderten Programmierer</span><br>



<span style="font-family: Verdana;">als Aha-Erlebnis erscheinen
k&ouml;nnen:</span><br>



<span style="font-family: Verdana;">1. </span><br>



<span style="font-family: Verdana;">Eine FLEX-Schleife kann mehr als
einen R&uuml;cksprung zum Schleifenanfang</span><br>



<span style="font-family: Verdana;">haben. Das ist nicht nur praktisch,
es ist hinsichtlich der Durchschau-</span><br>



<span style="font-family: Verdana;">barkeit und Fehlertr&auml;chtigkeit
auch mit Vorsicht zu genie&szlig;en!</span><br>



<span style="font-family: Verdana;">2.</span><br>



<span style="font-family: Verdana;">Der R&uuml;cksprung zum
Schleifenanfang kann nicht nur durch einen Zahlen-</span><br>



<span style="font-family: Verdana;">vergleich ausgel&ouml;st werden,
sondern durch jeden der zahlreichen if-</span><br>



<span style="font-family: Verdana;">Befehle, die FLEX bereith&auml;lt.</span><br>



<br>



<span style="font-family: Verdana;">Zusatz-Trick: Ausbruch aus
Endlosschleifen</span><br>



<span style="font-family: Verdana;">Mit dem Einbau dieser zwei Zeilen
in das Innere einer Schleife:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">keycheck</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if yes jump
weiter</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">kann man erreichen, da&szlig; man
sie mit Druck auf Esc abbrechen kann.</span><br>



<span style="font-family: Verdana;">Wenn dann mal stundenlang einfach
nichts zu geschehen scheint, entnervt</span><br>



<span style="font-family: Verdana;">Esc dr&uuml;cken - und dann die
Schleifenlogik nochmal durchdenken!</span><br>



<br>



</small>
---------------------------------------------------------------------------------------------------<br>



<font face="Verdana">
<a name="61"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 61: Druckregler</span></font>
&nbsp;<span style="font-family: Verdana;">&nbsp;</span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Druckparameter
w&auml;hrend der Sitzung wechseln</span></span><br style="font-family: Verdana; font-weight: bold;">



</small><br>



<small style="font-family: Verdana;">
Aufgabe: Schnell mal eben die Druckparameter wechseln, ohne<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a99 mit anderer INI
neu starten zu m&uuml;ssen.<br>



<br>



Warum: Die Druckparameter werden in der INI-Datei mit dem Befehl <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PrintParameter=...<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eingestellt und gelten dann fuer
die ganze Sitzung.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; So scheint es. Aber bei den
Anzeigeparametern ist es anders,<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; und auch die Exportparameter
lassen sich per Men&uuml; &auml;ndern!<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Auch f&uuml;r das Drucken sollte
es eine Schraube geben, an der<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; man drehen kann!<br>



<br>



L&ouml;sung:<br>



Man braucht nicht auf die Entwicklungsabteilung zu warten! Geben Sie<br>



mal ein:&nbsp;&nbsp;&nbsp; h xprint<br>



Da sehen Sie, da&szlig; es einen FLEX-Befehl daf&uuml;r gibt.<br>



Wer den kennt und wei&szlig;, da&szlig; er nun zur Abwechslung die
Parameter<br>



namens xyz.apr nutzen will, der gibt einfach ein<br>



<br>



&nbsp;&nbsp; <span style="font-family: Courier New,Courier,monospace;">x
print p xyz</span><br>



<br>



Wer das nicht wei&szlig; und auch nicht einsieht, es wissen zu sollen,<br>



oder wer eine zu geringe Berechtigung hat (dann geht das mit dem x<br>



n&auml;mlich nicht), dem kann auch geholfen werden.<br>



Zum Beispiel so (siehe <a href="#37">Trick 37</a>):<br>



<br>



Man macht sich eine Datei namens&nbsp; onprop.flx, in der steht:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">yesno
Druckparameter wechseln?</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if no end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var
"Druckparameter|" D "*." K1 "pr"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">fnam</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">print p</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">mes Parameter
sind gewechselt</span><br style="font-family: Courier New,Courier,monospace;">



<br>



Danach geht das Wechseln so: Rechter Mausklick ins Anzeigefeld,<br>



"Eigenschaften" w&auml;hlen, und schon kann man sich die Parameter<br>



aus der erscheinenden Dateiauswahlbox aussuchen.<br>



Statt des fnam-Befehls k&ouml;nnte auch eine select-Liste oder eine<br>



View- oder Aresqa-Liste zum Einsatz kommen, die nur bestimmte,<br>



ausgew&auml;hlte Dateien anbietet! Ganz nach Geschmack.<br>



<br>



</small>
---------------------------------------------------------------------------------------------------<br>



<font face="Verdana">
<a name="62"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 62: Neues
Erlebnis mit dem Ergebnis</span></font> &nbsp;<span style="font-family: Verdana;">&nbsp;</span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Aus der aktuellen
Erg.Menge eine andere machen</span></span><br style="font-family: Verdana; font-weight: bold;">



</small><br>



<small style="font-family: Verdana;">Aufgabe: Schnell mal eben aus
einer Ergebnismenge eine andere machen,<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aus S&auml;tzen, die
mit denen der Erg.Menge zusammenh&auml;ngen<br>



<br>



Warum: Z.B. hat man eine Ergebnismenge, die aus lauter Bestell- <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; datens&auml;tzen besteht, oder aus
Exemplars&auml;tzen. Was man aber<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gerne h&auml;tte in der Situation,
das w&auml;ren die dazugeh&ouml;rigen<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Titeldatens&auml;tze!<br>



<br>



L&ouml;sung:<br>



<br>



Man braucht folgende Dinge:<br>



1. Einen Suchbefehl, mit dem man zu jedem Satz der Erg.Menge den<br>



&nbsp;&nbsp; gew&uuml;nschten anderen Satz erh&auml;lt.<br>



&nbsp;&nbsp; Der Trick dazu ist, den geeigneten Suchbefehl zu basteln
und<br>



&nbsp;&nbsp; dann den Satz mit dem Befehl&nbsp; f1nd herbeizuholen -
denn dabei<br>



&nbsp;&nbsp; wird die momentane Erg.Menge nicht ver&auml;ndert! Das ist
n&ouml;tig,<br>



&nbsp;&nbsp; sonst k&ouml;nnte man sie nicht Satz f&uuml;r Satz
durcharbeiten.<br>



<br>



2. Ein Verfahren, wie man die so gefundenen Datens&auml;tze zu einer<br>



&nbsp;&nbsp; Ergebnismenge machen kann.<br>



&nbsp;&nbsp; Der Trick dazu ist, da&szlig; man zuerst die Satznummern
der mit f1nd<br>



&nbsp;&nbsp; geholten S&auml;tze in eine Datei schreibt und dann diese
mit dem<br>



&nbsp;&nbsp; Befehl&nbsp; read set ...&nbsp; in eine Erg.Menge
umwandelt!<br>



<br>



Eine Komplikation besteht darin, da&szlig; es z.B. mehrere
Bestells&auml;tze<br>



oder Exemplars&auml;tze zu einem Titelsatz geben kann! In der
angestrebten<br>



Erg.Menge der Titels&auml;tze soll es aber keine doppelten S&auml;tze
geben.<br>



Der Trick dazu ist, die Erg.Menge der Titels&auml;tze zuerst nach<br>



Satznummern zu sortieren, dann die Nummern in eine Datei auszugeben<br>



und dann diese Datei nochmals mit&nbsp; read set ...&nbsp; als Erg.Menge<br>



einzulesen.<br>



Puh! H&ouml;rt sich schwierig an - viel einfacher geht es aber nicht. <br>



Am besten nimmt man wohl ein ganz konkretes Beispiel und &auml;ndert<br>



es an den wenigen Stellen ab, wo es sein mu&szlig;. Hier ist das
Beispiel:<br>



o-titel.flx: (Kommentar ist erweitert, die zu modifizierenden Stellen<br>



sind mit *** markiert)<br>



<br>



&nbsp;
--------------------------------------------------------------------<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
O-TITEL.FLX : Erg.Menge besteht aus Bestellsaetzen, finde dazu die</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
2005-08-23&nbsp;&nbsp;&nbsp; Titelsaetze und praesentiere als Erg.Menge</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Es kann zu einem Titel mehrere Bestellungen geben,</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
das wird abgefangen, jeder Titelsatz kommt nur einmal!</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if empty mes
Keine Erg.Menge;end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">first</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; ***
Spezifische Pruefung ***</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Sind
das ueberhaupt Bestellsaetze?</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if not #9DA
jump sorry</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; ***
Ende spezifische Pruefung ***</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Hilfsdatei mit den internen Nummern der Titelsaetze zusammenstellen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">open x
titel.num</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Es
muss zuerst eine Ueberschrift rein</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">wri "bestell"
n</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Schleife zur Abarb. d. Bestellsaetze</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:bloop</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; ***
Spezifischer Teil, nur hier muss man eingreifen! ***</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; ****
hier wird der zugehoerige Satz gesucht. ***</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Bestellsatz enthaelt TitelIdNr in #9DA$T</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Findbefehl fuer den Titelsatz zu der betr. Bestellung anlegen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "|9 "
#9DA$T</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; ***
Ende des spezifischen Teils ***</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Befehl
ausfuehren, d.h. zugeh. Datensatz laden</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; (f1nd
laedt den Satz, bildet aber keine neue Erg.Menge)</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">f1nd</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
interne Nummer dieses Titelsatzes in die Datei schreiben</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">write i n</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
naechsten Bestellsatz aus der Erg.Menge holen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">next</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if yes jump
bloop</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; es gab
keinen mehr</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">close x</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Jetzt
Hilfsdatei (Nummernliste!) titel.num als Erg.Menge laden</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
Da sind evtl. noch doppelte drin!</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">read set
titel.num</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
deshalb erst nach internen Nummern ordnen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">order n</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Neue
Hilfsdatei aufmachen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">open x
titel.set</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Ueberschrift rein</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">wri
"Bestellungen" n</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; und
die Titeldaten-Erg.Menge wieder als Nummernliste speichern.</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">wri in</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">close x</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Liste
neu einlesen, dabei fliegen Doppelte raus, weil sie direkt</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
hintereinander stehen wegen der Ordnung mit "ord n"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">read set
titel.set</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "Die
Erg.Menge besteht jetzt aus den Titeldaten" n "und wird gleich gezeigt!"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">mes</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Erg.Menge im Kurzlistenfenster zeigen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">show list</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Hilfsdateien loeschen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">delete
titel.num</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">delete
titel.set</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">end</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:sorry</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "Sorry,
die aktuelle Ergebnismenge besteht nicht aus Bestelldaten"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">mes</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">end</span><br>



<br>



</small>
---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span><br>



</small><font face="Verdana">
<a name="63"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 63: Das
Wichtigste zuerst</span></font> &nbsp;<span style="font-family: Verdana;">&nbsp;</span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Beim Start sofort den
Index erscheinen lassen</span></span></small><br>



<small><span style="font-family: Verdana;">Warum: Es kann in einer
Anwendung sehr sinnvoll sein, wenn der Nutzer</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
sofort beim Start eine ganz bestimmte Stelle in einem der</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Register aufgebl&auml;ttert bekommt.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Ein Anwender kann auch der Meinung sein, da&szlig; der Index das</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
zentrale Konzept der Datenbank ist, und deshalb zu Beginn</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
erst einmal ein Register pr&auml;sentieren wollen.</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">Sagen wir, um konkret zu sein, es
soll Register 3 an der Stelle</span><br>



<span style="font-family: Verdana;">"goethe" erscheinen.</span><br>



<span style="font-family: Verdana;">Was NICHT geht (sonst w&auml;re
dieser Trick nicht n&ouml;tig), das ist, in den</span><br>



<span style="font-family: Verdana;">_start.flx&nbsp; einfach
reinzuschreiben</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">index |3
goethe</span><br>



<br>



<span style="font-family: Verdana;">Warum geht das eigentlich nicht?
Nun, das hat mit den internen</span><br>



<span style="font-family: Verdana;">Bedingungen zu tun, die im Moment
der Abarbeitung des _start.flx</span><br>



<span style="font-family: Verdana;">vorliegen - man erspare uns die
Einzelheiten, es f&uuml;hrt zu weit</span><br>



<span style="font-family: Verdana;">und ist ab jetzt uninteressant.</span><br>



<br>



<span style="font-family: Verdana;">Der Trick ist, sich das
Hilfsprogramm "flex" dienstbar zu machen!</span><br>



<span style="font-family: Verdana;">Dieses erm&ouml;glicht, einen FLEX
von au&szlig;en an ein laufendes a99 zu senden,</span><br>



<span style="font-family: Verdana;">um ihn ausf&uuml;hren zu lassen.
Das kann manuell, aber auch aus einem</span><br>



<span style="font-family: Verdana;">Batch heraus geschehen. Wir lassen
einfach a99 selber einen Befehl an </span><br>



<span style="font-family: Verdana;">das System geben, indem wir in
den&nbsp; _start.flx&nbsp; an das Ende schreiben </span><br>



<span style="font-family: Verdana;">(und statt&nbsp; |3 goethe&nbsp;
nat&uuml;rlich was immer Sie wollen):</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">open x
dothis.flx</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">wri "index |3
goethe" n</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">close x</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var P "flex
dothis"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">dos</span><br>



<br>



<span style="font-family: Verdana;">Das ist schon alles! Die letzten 2
Zeilen lassen schlicht den Befehl</span><br>



<span style="font-family: Verdana;">&nbsp; flex dothis</span><br>



<span style="font-family: Verdana;">ausf&uuml;hren. Damit wird&nbsp;
flex.exe&nbsp; als externes Programm gestartet </span><br>



<span style="font-family: Verdana;">und sendet von au&szlig;en den
vorher pr&auml;parierten FLEX&nbsp; dothis.flx</span><br>



<span style="font-family: Verdana;">an a99 - und da steht genau der
index-Befehl drin. </span><br>



<span style="font-family: Verdana;">Wenn&nbsp; flex.exe&nbsp; dann
seine Arbeit tut, sind in a99 die "internen</span><br>



<span style="font-family: Verdana;">Bedingungen" inzwischen
erf&uuml;llt, die das problemlose Aufklappen des</span><br>



<span style="font-family: Verdana;">Registers erm&ouml;glichen.</span><br>



<br>



<span style="font-family: Verdana;">Wichtig: In der INI-Datei darf
nicht&nbsp; exflex=0&nbsp; stehen. </span><br>



<span style="font-family: Verdana;">Die Berechtigung (also der
Wert&nbsp; access=...) spielt keine Rolle!</span><br>



<br>



<span style="font-family: Verdana;">Jetzt k&ouml;nnen Sie
nat&uuml;rlich drangehen und in&nbsp; dothis.flx&nbsp; reinschreiben,</span><br>



<span style="font-family: Verdana;">was immer Sie wollen und am Anfang
ausgef&uuml;hrt werden soll. Aber alles</span><br>



<span style="font-family: Verdana;">andere au&szlig;er "index" kann
_start.flx ja sowieso ausf&uuml;hren, daf&uuml;r ist</span><br>



<span style="font-family: Verdana;">der Trick unn&ouml;tig.</span><br>



<span style="font-family: Verdana;">Mehr zum Hilfsprogramm&nbsp;
flex.exe:&nbsp; h exflex.txt</span><br>



<span style="font-family: Verdana;">(Darauf beruhte &uuml;brigens auch
das alte RuckZuck-Konzept!)</span><br>



<br>



<span style="font-family: Verdana;">Die allerersten Versionen von a99
waren, ironischerweise, so</span><br>



<span style="font-family: Verdana;">gestrickt, da&szlig; zuerst ein
Register erschien - aber das konnte man</span><br>



<span style="font-family: Verdana;">nicht abschalten. Vehemente
W&uuml;nsche bewogen uns, die Sache zu &auml;ndern,</span><br>



<span style="font-family: Verdana;">aber die M&ouml;glichkeit, ein
Register als erstes erscheinen zu lassen,</span><br>



<span style="font-family: Verdana;">ging aus den genannten internen
Gr&uuml;nden dann leider verloren und wurde</span><br>



<span style="font-family: Verdana;">bis heute nicht wiedergefunden...</span></small><br>



---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="64"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 64:
FLEXiermaschine</span></font> &nbsp;<span style="font-family: Verdana;">&nbsp;</span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">1. FLEX ohne Datenbank?<br>



&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp;&nbsp;2. Jedem User seinen _start.flx<br>



</span></span></small><br>



<small><span style="font-family: Verdana;">Aufgabe: Ein FLEX, der mit
einer Datenbank gar nichts zu tun hat,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
soll erledigt werden - geht das ohne a99? (Z.B., ein</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Kalenderblatt erstellen als RTF-Datei, oder eine Zins-</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
berechnung f&uuml;r einen Kredit...)</span><br>



<br>



<span style="font-family: Verdana;">Warum: Mit FLEX kann man z.B. dank
der Dateifunktionen viel N&uuml;tzliches</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
programmieren, was mit der Datenbank gar nichts zu tun hat! </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Das m&uuml;&szlig;te sich doch ausnutzen lassen, um sonstwas machen zu</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
k&ouml;nnen!? Es sei denn, man hat z.B. Perl gelernt, versteht sich.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Wer das kann, braucht Ziffer 1. nicht.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Ziffer 2. kann dagegen &uuml;berall virulent werden, wo es diffizile</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Unterschiede zwischen Anwendern gibt.</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">Gleich vorweg: Ohne Datenbank geht
es nicht, a99 kann nicht als</span><br>



<span style="font-family: Verdana;">FLEXiermaschine v&ouml;llig
losgel&ouml;st von jeder Datenbank arbeiten.</span><br>



<span style="font-family: Verdana;">Das macht aber nichts - jeder HAT
ja eine Datenbank: warum nicht die</span><br>



<span style="font-family: Verdana;">DemoBank f&uuml;r diesen Zweck als
"Strohmann" benutzen?! Sie mu&szlig; nur</span><br>



<span style="font-family: Verdana;">da sein, ihr Inhalt ist egal und
wird nicht ver&auml;ndert.</span><br>



<br>



<span style="font-family: Verdana;">Es zeigt sich
&uuml;berraschenderweise, da&szlig; man mit der L&ouml;sung zugleich</span><br>



<span style="font-family: Verdana;">das ganz andere Problem
erschl&auml;gt: Wie kann man jedem Nutzer</span><br>



<span style="font-family: Verdana;">seinen eigenen&nbsp;
_Start.flx&nbsp; geben? </span><br>



<br>



<span style="font-family: Verdana;">Der Trick ist drei- bzw. zweiteilig:</span><br>



<br>



<span style="font-family: Verdana;">1. Am Ende des _start.flx diese 3
Zeilen anh&auml;ngen:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">var
"myjob.flx"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">fsize</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if &gt;0 exec
myjob</span><br>



<br>



<span style="font-family: Verdana;">2. Den FLEX, der eigentlich zu
erledigen ist, auf dem Startverzeichnis</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; ablegen und&nbsp;
myjob.flx&nbsp; nennen</span><br>



<br>



<span style="font-family: Verdana;">3. Ans Ende des&nbsp;
myjob.flx&nbsp; den Befehl&nbsp; STOP&nbsp; setzen.</span><br>



<br>



<br>



<span style="font-family: Verdana;">Wenn es&nbsp; myjob.flx&nbsp; nicht
gibt, startet die Datenbank normal und es</span><br>



<span style="font-family: Verdana;">kommt wegen der Pr&uuml;fung
mit&nbsp; fsize&nbsp; auch keine Fehlermeldung.</span><br>



<br>



<span style="font-family: Verdana;">Wer auf einem anderen Verzeichnis
startet und dort keinen&nbsp; myjob.flx</span><br>



<span style="font-family: Verdana;">zu liegen hat, merkt nichts. D.h.
die drei Zeilen im _start.flx&nbsp; haben</span><br>



<span style="font-family: Verdana;">keine unerw&uuml;nschte
Nebenwirkung.</span><br>



<br>



<span style="font-family: Verdana;">Zweittrick: (und nur dieser ist
auch f&uuml;r Perlianer interessant)</span><br>



<span style="font-family: Verdana;">Wenn Punkt 3. entf&auml;llt, ist
der&nbsp; myflex.flx&nbsp; praktisch eine</span><br>



<span style="font-family: Verdana;">individuelle Erweiterung des&nbsp;
_start.flx !!! Denn die Datenbank</span><br>



<span style="font-family: Verdana;">arbeitet dann normal.</span><br>



<br>



<span style="font-family: Verdana;">Hinweis zu Ziffer 1.:</span><br>



<span style="font-family: Verdana;">Wer eine avanti-Installation auf
seinem PC hat, kann auch avanti-cl</span><br>



<span style="font-family: Verdana;">zum Abarbeiten von datenbankfremden
FLEXen entzweckfremden:</span><br>



<span style="font-family: Verdana;">Der FLEX mu&szlig; nur eine
entsprechende Endzeile mit @ haben, z.B.</span><br>



<span style="font-family: Courier New,Courier,monospace;">@ DB=avdemo
ID=opac/OPAC</span><br>



<span style="font-family: Verdana;">und dann gibt man nur den
Befehl&nbsp;&nbsp; avanti-cl &lt;myflex.flx</span><br>



<span style="font-family: Verdana;">Wobei die Unterschiede zwischen a99
und avanti zu beachten sind!</span><br>



<span style="font-family: Verdana;">Der Vorteil ist: avanti-cl braucht
weniger Zeit.</span><br>



<br>



<span style="font-family: Verdana;">Hinweis zu Ziffer 2.:</span><br>



<span style="font-family: Verdana;">Wenn man will, da&szlig; jeder
Nutzer einen ganz individuellen&nbsp; _start.flx&nbsp; </span><br>



<span style="font-family: Verdana;">hat, dann ginge das auch so,
da&szlig; man keinen solchen auf</span><br>



<span style="font-family: Verdana;">DbDir, ProgDir und ProgDir\FLEX
hat, sondern jeweils den ganz</span><br>



<span style="font-family: Verdana;">individuellen auf dem
Arbeitsverzeichnis des Nutzers. </span><br>



<span style="font-family: Verdana;">Besser w&auml;re gewi&szlig;, der
Name "_start.flx" w&auml;re nur default und</span><br>



<span style="font-family: Verdana;">man k&ouml;nnte in der INI-Datei
einen Namen vorgeben. </span><br>



<span style="font-family: Verdana;">Kommt auf den Zettel, mit H-Faktor
2.</span></small><br>



<br>



---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span><br>



</small><font face="Verdana">
<a name="65"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 65:
Umrechenwerk</span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Umrechnen zwischen
Zahlensystemen (Hex, Dez, Bin, ...)</span></span></small><br>



<small><span style="font-family: Verdana;"></span></small><br>



<small><span style="font-family: Verdana;">Aufgabe: Schnell mal eben
eine hexadezimale Zahl in ihr dezimales,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
oktales, binb&auml;res ... &Auml;quivalent umrechnen. Oder umgekehrt.</span><br>



<br>



<span style="font-family: Verdana;">Warum: Das Umrechnen von einem
Zahlensystem in ein anderes geh&ouml;rt</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
zu den Grundaufgaben der Programmierung, und zu den einfachsten</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&uuml;berhaupt. FALLS so etwas also nebenbei mal auftritt, sollte</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
man daf&uuml;r eine fertige Prozedur bei der Hand haben, wenn es</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
schon keinen direkten Befehl daf&uuml;r gibt. FLEX, das ja keine</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
richtige Programmiersprache ist, hat leider keinen.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Also her mit einem Unterprogramm, das man unbesehen einbinden </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
kann! Man mu&szlig; ja wirklich nicht mehr selber rechnen k&ouml;nnen
("Ist</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Mathematik noch zeitgem&auml;&szlig;?" fragte j&uuml;ngst eine
f&uuml;hrende</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Zeitung), sondern nur noch wissen, welchem Programm man eine</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Aufgabe in welcher Weise zu stellen hat.</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">Nicht jeder wird das Unterprogramm
sehen und verstehen wollen, daher</span><br>



<span style="font-family: Verdana;">wird es hier nicht abgedruckt,
obwohl's nicht gro&szlig; ist, sondern zum </span><br>



<span style="font-family: Verdana;">Download bereitgestellt:</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
http://ftp.allegro-c.de/aktuelle-version/numcon.inc</span><br>



<span style="font-family: Verdana;">Es geht nur um positive ganze
Zahlen! Andere braucht man wohl nie</span><br>



<span style="font-family: Verdana;">auf eine andere Basis umzurechnen -
oder doch?</span><br>



<br>



<span style="font-family: Verdana;">Nebenbemerkung:</span><br>



<span style="font-family: Verdana;">Jeder hat andererseits mit dem
Zubeh&ouml;r-"Rechner" von Microsoft ein</span><br>



<span style="font-family: Verdana;">geeignetes Werkzeug zur
Verf&uuml;gung, das auch die Umrechnung zwischen den</span><br>



<span style="font-family: Verdana;">genannten Zahlsystemen beherrscht.
Erstens aber kann man es nicht in</span><br>



<span style="font-family: Verdana;">FLEX einbinden, und zweitens kann
man mit FLEX, wenn schon, denn schon</span><br>



<span style="font-family: Verdana;">auch noch etwas weiter gehen als
Onkel Bill! Die Rechenmethodik, die</span><br>



<span style="font-family: Verdana;">man braucht, funktioniert nicht nur
f&uuml;r 2,8,10 und 16, sondern auch</span><br>



<span style="font-family: Verdana;">f&uuml;r andere Basiszahlen.
In&nbsp; numcon.inc&nbsp; befindet sich in der Tat eine</span><br>



<span style="font-family: Verdana;">Funktion, mit der man jedes
Zahlsystem von 2 bis 20 in jedes andere</span><br>



<span style="font-family: Verdana;">umrechnen kann.</span><br>



<br>



<span style="font-family: Verdana;">Hintergrund:</span><br>



<span style="font-family: Verdana;">Warum gerade bis 20? Kelten und
Mayas hatten ein auf 20 basierendes</span><br>



<span style="font-family: Verdana;">Zahlensystem. Ganz spurlos
verschwunden ist das nicht! Das franz&ouml;sische</span><br>



<span style="font-family: Verdana;">Wort f&uuml;r 80, "quatre-vingt"
(vier-zwanzig) kommt daher, es wird aber</span><br>



<span style="font-family: Verdana;">schon ab 60 im Zwanzigerschritt
gez&auml;hlt: 70 ist soixante-dix, nicht</span><br>



<span style="font-family: Verdana;">"septante" - au&szlig;er in Belgien
und teilweise Schweiz. Das englische</span><br>



<span style="font-family: Verdana;">"score" hatte fr&uuml;her auch die
Bedeutung zwanzig, und ein Pfund hatte</span><br>



<span style="font-family: Verdana;">20 Schillinge. Das Deutsche kannte
mal die Bezeichnung "altes Schock"</span><br>



<span style="font-family: Verdana;">f&uuml;r 20 Groschen, ein "Schock"
waren 60, also 3x20. Und es gibt das aus </span><br>



<span style="font-family: Verdana;">der Reihe tanzende russische Wort
"sorok" f&uuml;r 40 - das soll aus dem </span><br>



<span style="font-family: Verdana;">Persischen stammen. Aber genug
solcher Quisquilien, der Leser wird </span><br>



<span style="font-family: Verdana;">schnellstens wissen wollen, wie's
denn nun geht.</span><br>



<br>



<span style="font-family: Verdana;">Rezept:</span><br>



<span style="font-family: Verdana;">Hier knapp das Rezept, wie man den
"Number Converter" anwendet:</span><br>



<span style="font-family: Verdana;">Sagen wir, in #uzz steht eine
Hex-Zahl, und sie soll ins Achtersystem</span><br>



<span style="font-family: Verdana;">verwandelt werden, das Ergebnis
soll in #uyy. So geht das:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">var #uzz " 16
8"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">perform numcon</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uyy</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">...</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Einbindung des UP:</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">include
numcon.inc</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">Man &uuml;bergibt also dem
Unterprogramm drei Zahlen, getrennt durch </span><br>



<span style="font-family: Verdana;">Leerzeichen! Allgemein:&nbsp; var
"nnn B Z"</span><br>



<span style="font-family: Verdana;">Die erste Zahl, nnn, ist die
umzurechnende, die zweite (B) ist</span><br>



<span style="font-family: Verdana;">deren Basiszahl (die kann das
Programm nicht selber erraten!), die</span><br>



<span style="font-family: Verdana;">dritte, Z, ist die Zielbasis.
L&auml;&szlig;t man die Zielbasis weg, wird daf&uuml;r 10</span><br>



<span style="font-family: Verdana;">genommen, l&auml;&szlig;t man die
Basis auch weg, wird daf&uuml;r 16 genommen.</span><br>



<span style="font-family: Verdana;">Default ist also die Umrechnung
Hex-&gt;Dez, aber B und Z k&ouml;nnen beide</span><br>



<span style="font-family: Verdana;">von 2 bis 20 reichen.</span><br>



<br>



<span style="font-family: Verdana;">Und was ist der Trick?&nbsp; Das
Unterprogramm ist so verd&auml;chtig kurz...</span><br>



<span style="font-family: Verdana;">Verbal gesagt, arbeitet es im Kern
so:</span><br>



<br>



<span style="font-family: Verdana;">1. Die gegebene Zahl in eine
dezimale wandeln. </span><br>



<span style="font-family: Verdana;">2. Die ermittelte Dezimalzahl ins
angegebene Zielsystem konvertieren.</span><br>



<br>



<span style="font-family: Verdana;">So kommt man daran vorbei, sich um
jeden der rund 800 denkbaren F&auml;lle</span><br>



<span style="font-family: Verdana;">einzeln k&uuml;mmern zu
m&uuml;ssen, denn 1. und 2. arbeiten immer in derselben</span><br>



<span style="font-family: Verdana;">Weise, nur mit jeweils anderem
Faktor.</span><br>



<span style="font-family: Verdana;">SonderTip:&nbsp; Mit&nbsp; X
numcon.inc&nbsp; auch direkt aufrufbar. </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Einfach mal probieren.</span><br>



<br>



<span style="font-family: Verdana;">Vorschau V28.1:</span><br>



<span style="font-family: Verdana;">Eingebaut wird die Sache noch in
den&nbsp; umrech.flx. </span><br>



<span style="font-family: Verdana;">Den haben Sie schon!&nbsp;&nbsp;
Geben Sie mal ein:&nbsp;&nbsp; X umrech</span><br>



<br>



<span style="font-family: Verdana;">Und noch was:</span><br>



<span style="font-family: Verdana;">Auch in den EXPORTparametern kann
man Zahlen umrechnen! </span><br>



<span style="font-family: Verdana;">Daf&uuml;r haben wir ein
entsprechendes Unterprogramm, das wir bei</span><br>



<span style="font-family: Verdana;">Interesse oder Bedarf
zug&auml;nglich machen. Es wurde gebraucht f&uuml;r</span><br>



<span style="font-family: Verdana;">die Unicode-Datenbank.</span></small><br>



<br>



---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span><br>



</small><font face="Verdana">
<a name="66"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 66: Daten aus
dem Off</span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Offline-Liste genauer
inspizieren</span></span></small><br>



<small><span style="font-family: Verdana;"></span></small><br>



<small><span style="font-family: Verdana;">Aufgabe: Schnell mal
schauen, was in der Offline-Datei WIRKLICH alles</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
steht.</span><br>



<br>



<span style="font-family: Verdana;">Warum: Zu sehen bekommt man in der
Offline-Datei mit Alt+q und dann</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Alt+w immer nur den jeweils aktuellen und den davor zuletzt</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&uuml;berschriebenen Stand der Bearbeitung eines Satzes, nicht</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
die evtl. erfolgten mehrfachen, jeweils gespeicherten Korrekturen</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
w&auml;hrend einer Sitzung.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
JEDE der GESPEICHERTEN Fassungen ist jedoch in der Offline-Datei</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
festgehalten! Sollte man darauf nicht zur&uuml;ckgreifen k&ouml;nnen?</span><br>



<br>



<span style="font-family: Verdana;">Tip: Was ist die
Offline-Datei?&nbsp; h off&nbsp; eingeben.</span><br>



<br>



<span style="font-family: Verdana;">Hintergrund:</span><br>



<span style="font-family: Verdana;">Es wird tats&auml;chlich jedesmal
beim Speichern eines Satzes seine dabei</span><br>



<span style="font-family: Verdana;">&uuml;berschriebene Vorversion aus
der Datenbank heraus in die Offline-</span><br>



<span style="font-family: Verdana;">Datei kopiert. Mit Alt+w
("Wechseln") bekommt man diese Vorversion</span><br>



<span style="font-family: Verdana;">wieder zu sehen - aber leider nur
diese, nicht die vorvorige usw.,</span><br>



<span style="font-family: Verdana;">obwohl diejenigen aus derselben
Sitzung alle noch in der Offline-</span><br>



<span style="font-family: Verdana;">Datei stehen.</span><br>



<span style="font-family: Verdana;">&nbsp;</span><br>



<span style="font-family: Verdana;">Wenn man einen Datensatz
bearbeitet, aber NICHT sofort speichert,</span><br>



<span style="font-family: Verdana;">sondern sich erst mal einen anderen
vornimmt, was passiert dann?</span><br>



<span style="font-family: Verdana;">Dann wird der bearbeitete Satz nur
schnell noch in die Offline-Datei</span><br>



<span style="font-family: Verdana;">geschrieben und erscheint beim
Aufbl&auml;ttern gelb. Erst wenn man ihn</span><br>



<span style="font-family: Verdana;">sp&auml;ter wirklich speichert,
wird die Vorversion aus der Datenbank</span><br>



<span style="font-family: Verdana;">herauskopiert in die Offline-Datei.
Mit Alt+w kriegt man danach diese</span><br>



<span style="font-family: Verdana;">alte Fassung wieder zu sehen, dann
aber diese in gelb. Nach mehrfachem</span><br>



<span style="font-family: Verdana;">Speichern sieht man stets nur die
letzte Vorversion und die aktuelle,</span><br>



<span style="font-family: Verdana;">nicht mehr die &auml;lteste oder
irgendwelche Zwischenversionen.</span><br>



<span style="font-family: Verdana;">Typischerweise steht, wie sich
hieraus ergibt, die &auml;ltere Version</span><br>



<span style="font-family: Verdana;">unterhalb ihrer Nachfolgerin in der
realen Offline-Datei!</span><br>



<br>



<br>



<span style="font-family: Verdana;">Es gibt zwei Tricks, mit denen man
die Aufgabe l&ouml;sen kann:</span><br>



<span style="font-family: Verdana;">Der erste besteht darin, da&szlig;
man die Offline-Datei in eine Externdatei</span><br>



<span style="font-family: Verdana;">verwandelt (extern,dat) und diese
dann laden l&auml;&szlig;t. Darin sieht man dann</span><br>



<span style="font-family: Verdana;">alle Fassungen von
Datens&auml;tzen, so wie sie eingelagert wurden (s.o.). </span><br>



<span style="font-family: Verdana;">Die Offline-Datei hat den Dateityp
.$$$, ist aber in Wahrheit in </span><br>



<span style="font-family: Verdana;">ihrer Struktur nichts anderes als
eine Grunddatei - man braucht sie</span><br>



<span style="font-family: Verdana;">also nur umzubenennen oder zu
kopieren! Sie liegt auf dem Temp-</span><br>



<span style="font-family: Verdana;">Verzeichnis (bzw. dem mit DbAux=...
in der INI angegebenen Pfad).</span><br>



<br>



<br>



<span style="font-family: Verdana;">L&ouml;sung 1: (kurz, aber mit
Vorsicht zu genie&szlig;en)</span><br>



<span style="font-family: Verdana;">---------</span><br>



<span style="font-family: Verdana;">Hier ein ganz kleiner FLEX, mit dem
man es bewerkstelligen kann:</span><br>



<br>



<big><span style="font-family: monospace;">var M B ".$$$ extern.dat"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fcopy</span><br style="font-family: monospace;">



<span style="font-family: monospace;">erase off</span><br style="font-family: monospace;">



<span style="font-family: monospace;">read extern</span><br style="font-family: monospace;">



<span style="font-family: monospace;">delete extern.dat</span></big><br>



<br>



<span style="font-family: Verdana;">Danach erst Esc, um die
erscheinende Liste zu schlie&szlig;en, dann mit</span><br>



<span style="font-family: Verdana;">Alt+q wieder &ouml;ffnen, um die
S&auml;tze dann als Ganzes zu sehen,</span><br>



<br>



<span style="font-family: Verdana;">Aber Vorsicht! Irgendwelche noch
nicht gespeicherten Datens&auml;tze im</span><br>



<span style="font-family: Verdana;">Offline-Speicher sind dann nicht
mehr mit ihrem Originalsatz verbunden</span><br>



<span style="font-family: Verdana;">und per Alt+w umschaltbar!
Speichert man sie nun, entstehen neue</span><br>



<span style="font-family: Verdana;">Datens&auml;tze.</span><br>



<span style="font-family: Verdana;">Man KANN den Befehl "erase off"
weglassen, dann sind die noch nicht</span><br>



<span style="font-family: Verdana;">gespeicherten S&auml;tze noch
korrekt vorhanden und darunter die Liste der</span><br>



<span style="font-family: Verdana;">eingelesenen Datei extern.dat, in
der sie nochmals als unabh&auml;ngige</span><br>



<span style="font-family: Verdana;">S&auml;tze auftreten. Aufpassen, um
dann nicht durcheinander zu kommen ...</span><br>



<br>



<br>



<span style="font-family: Verdana;">L&ouml;sung 2: (jederzeit schnell
mal eben zwischendurch m&ouml;glich, denn es</span><br>



<span style="font-family: Verdana;">---------&nbsp; geht ganz enorm
rasch)</span><br>



<span style="font-family: Verdana;">Die genannten Probleme vermeidet
ein anderer Trick: Die Offline-</span><br>



<span style="font-family: Verdana;">Datei als solche unber&uuml;hrt
lassen, aber als Datei lesen und in eine</span><br>



<span style="font-family: Verdana;">Textdatei verwandeln, die man mit
dem help-Befehl anzeigen l&auml;&szlig;t:</span><br>



<span style="font-family: Verdana;">(am besten in eine Datei
offlist.flx speichern und dann X offlist, ab<br>



V28.2 ist offlist.flx im Gesamtpaket dabei.)</span><br>



<br>



<big><span style="font-family: monospace;">var M B ".$$$"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">open</span><br style="font-family: monospace;">



<span style="font-family: monospace;">open x offlist</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; erstes Byte
&uuml;berspringen, dann satzweise einlesen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fetch b</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fetch b</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if ="-1" jump ende</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fetch rec</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if cancel jump ende</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Satz rausschreiben</span><br style="font-family: monospace;">



<span style="font-family: monospace;">write</span><br style="font-family: monospace;">



<span style="font-family: monospace;">write 13 10 "................" 13
10</span><br style="font-family: monospace;">



<span style="font-family: monospace;">jump loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Das war's, Daten anzeigen</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:ende</span><br style="font-family: monospace;">



<span style="font-family: monospace;">close x</span><br style="font-family: monospace;">



<span style="font-family: monospace;">h offlist</span></big><br>



<br>



<span style="font-family: Verdana;">Aus der Anzeige dieser Textdatei
kann man nat&uuml;rlich beliebig mit</span><br>



<span style="font-family: Verdana;">Copy&amp;Paste wieder Sachen
entnehmen und in aktuelle S&auml;tze einf&uuml;gen.</span><br>



<span style="font-family: Verdana;">M&ouml;glicher Nachteil: Bei sehr
gro&szlig;er Zahl von S&auml;tzen, z.B. nach</span><br>



<span style="font-family: Verdana;">umfangreichen globalen Ersetzungen,
ist die Datei&nbsp; offlist&nbsp; evtl.</span><br>



<span style="font-family: Verdana;">zu lang. Man kann sie dann aber
au&szlig;erhalb des Programms mit jedem</span><br>



<span style="font-family: Verdana;">Texteditor oder -betrachter lesen,
darin suchen, vergleichen usw.</span><br>



<br>



<br>



<span style="font-family: Verdana;">ZusatzHinweis</span><br>



<span style="font-family: Verdana;">Die Offline-Datei ist nicht zentral
f&uuml;r alle Bearbeiter, sondern</span><br>



<span style="font-family: Verdana;">individuell nur f&uuml;r den
einzelnen Bearbeiter, und zwar je nach</span><br>



<span style="font-family: Verdana;">Einstellung nur die aktuelle
Sitzung (SaveResults=2 in der INI-Datei)</span><br>



<span style="font-family: Verdana;">oder &uuml;bergreifend f&uuml;r
zwei oder mehr Sitzungen (SaveResults=0 oder 1).</span><br>



<br>



<span style="font-family: Verdana;">Wer also sehen will, was INSGESAMT
in der Datenbank passiert ist,</span><br>



<span style="font-family: Verdana;">mu&szlig; die LOG-Datei auswerten,
denn dort stehen chronologisch alle</span><br>



<span style="font-family: Verdana;">gespeicherten Datens&auml;tze, und
zwar stets komplett, auch wenn nur</span><br>



<span style="font-family: Verdana;">winzige &Auml;nderungen gemacht
wurden. Die Werkzeuge daf&uuml;r sind vorhanden</span><br>



<span style="font-family: Verdana;">und bekannt (s. Quick-Liste).</span></small><br>



<br>



---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="67"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 67:
Schnellz&auml;hlung</span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Wieviele Eintr&auml;ge
sind im Index unter xyz?</span></span></small><br>



<small><span style="font-family: Verdana;">Aufgabe: Hurtig mal
pr&uuml;fen, wieviele Eintr&auml;ge es z.B. im Register 3</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
unter xyz gibt. Anspruchsvolle wollen noch mehr: </span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Wieviele Eintr&auml;ge gibt es, die mit xyz beginnen?</span><br>



<br>



<span style="font-family: Verdana;">Warum: Man will vielleicht in einem
FLEX pr&uuml;fen, ob es im Index unter</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
irgendeinem Kriterium &uuml;berhaupt schon etwas gibt, und wenn ja,</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
wieviele Zeilen. Das kann z.B. die Anzahl der Ausleihen eines</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Lesers sein, oder die Anzahl von Heften zu einer Zeitschrift.</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Oder: Hat dieser Satz verkn&uuml;pfte Unters&auml;tze und wieviele?</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(Die erste Frage ist auch mit&nbsp; if main&nbsp; beantwortbar!)</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Solche Eintr&auml;ge haben immer eine bestimmte Struktur, sind also</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
in Index an einer Stelle versammelt. Mit blo&szlig;em Auge sieht ja</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
jeder sofort, wieviele Treffer es da gibt - kann FLEX das auch?</span><br>



<br>



<span style="font-family: Verdana;">L&ouml;sung:</span><br>



<span style="font-family: Verdana;">Das geht mit dem Befehl "qrix". Den
gibt es schon lange, aber man </span><br>



<span style="font-family: Verdana;">findet nicht so leicht raus,
da&szlig; der solche Sachen kann. Wie soll man</span><br>



<span style="font-family: Verdana;">auch wo nach dieser Funktion
suchen? (Sagen Sie uns, wie und wo Sie</span><br>



<span style="font-family: Verdana;">gesucht und es nicht gefunden
haben! Wir richten das dann.)</span><br>



<br>



<span style="font-family: Verdana;">Geben Sie mal bei der DemoBank ein:</span><br>



<br>



<span style="font-family: Verdana;">x qrix 1 per shak\mes</span><br>



<br>



<span style="font-family: Verdana;">Es erscheint die
Mitteilung&nbsp;&nbsp; "74&nbsp; shakespeare, william"</span><br>



<span style="font-family: Verdana;">Und jetzt:</span><br>



<br>



<span style="font-family: Verdana;">x qrix 1 per shak?\mes</span><br>



<br>



<span style="font-family: Verdana;">Dann kommt die Meldung&nbsp;&nbsp;
"274&nbsp; shak"</span><br>



<br>



<span style="font-family: Verdana;">Dasselbe sehen Sie mit blo&szlig;em
Auge im Personenregister, wenn Sie</span><br>



<span style="font-family: Verdana;">zu der Stelle&nbsp; shak&nbsp;
gehen bzw. dann mal&nbsp; shak?&nbsp; eintippen.</span><br>



<br>



<span style="font-family: Verdana;">Das Rezept ist also ganz klar:</span><br>



<br>



<span style="font-family: Verdana;">qrix 1 abc xyz</span><br>



<br>



<span style="font-family: Verdana;">liefert in der internen Variablen
genau die Registerzeile, die man</span><br>



<span style="font-family: Verdana;">haben will. abc ist der symbolische
Name des Registers, xyz ist die</span><br>



<span style="font-family: Verdana;">Stelle bzw. der Anfang davon, wenn
man mit ? trunkiert.</span><br>



<span style="font-family: Verdana;">Die 1 hinter dem "qrix" ist die
Anzahl Zeilen, die man haben will!</span><br>



<span style="font-family: Verdana;">Mit einer Zahl &gt;1 kriegt man
entsprechend viele Zeilen in die iV,</span><br>



<span style="font-family: Verdana;">getrennt durch den Code 20. Das
braucht man weniger oft.</span><br>



<span style="font-family: Verdana;">L&auml;&szlig;t man aber die Zahl
ganz weg, gibt's gleich 20 Zeilen!</span><br>



<br>



<span style="font-family: Verdana;">Nun aber die Frage: Wenn xyz im
Register gar nicht auftritt?</span><br>



<span style="font-family: Verdana;">Dann kriegt man die Zeile, die
genau an der Stelle steht, wo xyz</span><br>



<span style="font-family: Verdana;">stehen m&uuml;&szlig;te und nicht
steht.</span><br>



<span style="font-family: Verdana;">Und wie kann man diesen Sachverhalt
im FLEX pr&uuml;fen, d.h. da&szlig; es</span><br>



<span style="font-family: Verdana;">die gesuchten Eintr&auml;ge nicht
gibt?</span><br>



<span style="font-family: Verdana;">Sagen wir, Zeilen mit "shakesp"
werden gesucht, und man will pr&uuml;fen,</span><br>



<span style="font-family: Verdana;">ob welche vorkommen, bevor man
weitermacht im FLEX.</span><br>



<span style="font-family: Verdana;">Hier ist das Strickmuster:</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">qrix 1 per
shakesp</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var (f" " b"
" f" ")</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if not
="shakesp" jump nix</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; ....</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:nix</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">mes es gibt
keine Zeilen an der Stelle!</span><br>



<br>



<span style="font-family: Verdana;">Die komische Zeile&nbsp; var (f" "
b" " f" ") beseitigt am Anfang der</span><br>



<span style="font-family: Verdana;">Zeichenfolge, die sich in der iV
befindet, die Leerzeichen, dann die</span><br>



<span style="font-family: Verdana;">Zahl, dann die evtl. noch folgenden
Leerzeichen vor dem Text. &Uuml;brig</span><br>



<span style="font-family: Verdana;">bleibt der Text! Und der
l&auml;&szlig;t sich dann mit&nbsp; ="shakesp"&nbsp; vergleichen,</span><br>



<span style="font-family: Verdana;">also mit dem, was man haben
wollte...</span><br>



<span style="font-family: Verdana;">-----------------------------------------------------------------------</span><br>



<span style="font-family: Verdana;">Und nun noch die Frage: Wieviele
verkn. Unters&auml;tze?</span><br>



<span style="font-family: Courier New,Courier,monospace;">var p</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" mes
Kein Prim.Schl.!;end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "1 |9 " p
"+?"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">qrix</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">eval</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uvk</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "Es gibt
" #uvk " verkn. Unters&auml;tze"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">mes</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">Hier werden also die Angaben
f&uuml;r qrix per var-Befehl zusammengestellt,</span><br>



<span style="font-family: Verdana;">die Zahl aus der dann in iV
befindlichen Indexzeile per eval ermittelt.</span><br>



<span style="font-family: Verdana;">-----------------------------------------------------------------------</span><br>



<span style="font-family: Verdana;">&Uuml;brigens: Statt des
symbolischen Namens geht auch die &uuml;bliche</span><br>



<span style="font-family: Verdana;">Bezeichnung |1 f&uuml;r Register 1
usw., also z.B.</span><br>



<br>



<span style="font-family: Courier New,Courier,monospace;">x qrix 1 |3
shak?\mes</span><br style="font-family: Courier New,Courier,monospace;">



<br>



<span style="font-family: Verdana;">um im Register 3 die Stelle "shak"
abzupr&uuml;fen.</span><br>



<br>



<span style="font-family: Verdana;"></span></small>
---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="68"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 68: Gibt's ein
Verzeichnis f&uuml;r das Ereignis?</span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Existiert der Pfad
c:\abc\xyz?</span></span></small><br>



<small><span style="font-family: Verdana;"><br>



Aufgabe: Geschwind mal nachschauen, ob ein bestimmtes Verzeichnis<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eigentlich auf dem
System schon existiert.<br>



<br>



Warum: Man will dann und wann eine Datei mit&nbsp; "open x ..." anlegen
und<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; der Dateiname enth&auml;lt einen
Pfad. Dann klappt das ja nur, wenn<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; der Pfad schon da ist. Im Fall
seines Fehlens erf&auml;hrt man aber<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mit "if no ..." nur, da&szlig; es
nicht geklappt hat. Der Grund kann<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; daf&uuml;r auch ein anderer sein:
z.B. mangelndes Schreibrecht auf<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dem Verzeichnis, oder Datei
existiert schon und ist schreib-<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gesch&uuml;tzt. Um sicher zu
gehen, w&uuml;rde man gerne vorab die<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Existenz des Verzeichnisses
schnell mal eben abchecken k&ouml;nnen.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Weitere Gr&uuml;nde f&uuml;r einen
solchen Wunsch sind denkbar.<br>



<br>



L&ouml;sung:&nbsp;&nbsp; [siehe dazu&nbsp; h xfnam ]<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Es geht erfreulich schnell. Sagen
wir, man will die Existenz des<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Verzeichnisses&nbsp;
c:\allegro\altdaten\kopie&nbsp; pr&uuml;fen. So geht's:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
fnam |.c:/allegro/altdaten/kopie</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
if "" jump fehler</span><br style="font-family: Courier New,Courier,monospace;">



<br>



Was st&uuml;nde in der iV als Ergebnis, wenn das Verzeichnis existiert?<br>



Da st&uuml;nde dann einfach nur "kopie" drin. Dasselbe passiert, wenn<br>



man schreibt:<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp; &nbsp;
&nbsp; fnam |.c:/allegro/altdaten/kop*</span><br style="font-family: Courier New,Courier,monospace;">



<br>



Hier sind also die bequemeren normalen Schr&auml;gstriche m&ouml;glich,
aber<br>



der Backslash - verdoppelt - tut es auch. Dabei Vorsicht: Wenn der<br>



Name des Verzeichnisses in einem Datenfeld vorkommt, d&uuml;rfen die<br>



Backslashe darin nicht verdoppelt sein. Sagen wir, es ist:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">#uvz
c:\allegro\altdaten\kopie</span><br style="font-family: Courier New,Courier,monospace;">



<br>



dann ist das OK, und man h&auml;tte zu schreiben:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">var "|." #uvz</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">fnam</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" jump
fehler</span><br style="font-family: Courier New,Courier,monospace;">



<br>



W&auml;re es nicht unpraktisch, in solchen F&auml;llen, wo man den
Verzeichnis-<br>



namen wom&ouml;glich aus anderer Quelle hat, sich erst noch um die
Striche <br>



k&uuml;mmern zu m&uuml;ssen? Mu&szlig; man also nicht. <br>



<br>



Vorsicht:<br>



Am Ende des Namens darf kein Strich sein!<br>



Was macht man, wenn man das nicht wei&szlig;? So kriegt man sie weg:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">var "|."
#uvz(F"/\\")</span><br style="font-family: Courier New,Courier,monospace;">



<br>



Und geht das auch mit $-Variablen? Ja, das geht:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">var "|."
$Verz (F"/\\")</span><br style="font-family: Courier New,Courier,monospace;">



<br>



Wichtig: Das Spatium zwischen dem Variablennamen und der Klammer! Denn<br>



die Namen der $-Variablen sind ja variabel lang, da mu&szlig; das
Programm<br>



erkennen k&ouml;nnen, wo der Name zu Ende ist: am Spatium eben.<br>



<br>



ExtraTip:<br>



Gibt es das Laufwerk K:?&nbsp; Das pr&uuml;ft man so:<br>



<span style="font-family: Courier New,Courier,monospace;">fnam |.k:\\*.*</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" jump
fehler</span><br style="font-family: Courier New,Courier,monospace;">



<br>



SonderTip:<br>



D&uuml;rfen eigentlich bei den Befehlen "open" und "open x" die Striche
<br>



auch normal sein? Ja. Auch gemischt? Ja.<br>



<br>



<br>



Hinweis: Trick 53 befa&szlig;te sich nur mit der Frage, welche
Verzeichnisse<br>



an einer bestimmten Stelle im System anzutreffen sind, nicht gezielt<br>



mit der Frage, ob es ein bestimmtes gibt.<br>



<br>



</span></small>
---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="69"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 69:
Schiebereien mit der Maus</span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Feldinhalt manuell
sinnvoll sortieren durch Verschieben mit Maus</span></span></small><br>



<small><span style="font-family: Verdana;"><br>



Aufgabe: Im Feld #31 stehen 25 Schlagw&ouml;rter, mit ; getrennt.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sieht ja chaotisch
aus, Schnell mal eben sinnvoll umordnen!<br>



<br>



Warum: Alphabetische Ordnung in einem Feld (s. Trick 56) ist leicht<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; herzustellen, seit es den
FLEX-Befehl&nbsp; sort&nbsp; gibt.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Aber "sinnvolle Ordnung"?<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mit Cut&amp;Paste kann man das
eine oder andere Schlagwort an<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eine andere Stelle verschieben,
auf die Dauer ist das aber<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; zeitraubend. Kann man sowas nicht
heutzutage auch mit der Maus<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; machen - wie in jedem
vern&uuml;nftigen Programm einfach rauf und<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; runter verschieben oder so?<br>



<br>



L&ouml;sung: <br>



Genau das kann man machen, Und zwar mit aresqa! Vermutlich ist es<br>



wenig bekannt: wenn man eine aresqa-Liste vor sich hat, kann man<br>



jede Zeile mit der Maus ergreifen und beliebig verschieben. Sie wird<br>



dann VOR diejenige Zeile geschoben, auf die man zeigt, im Moment des<br>



Loslassens der linken Maustaste.<br>



<br>



Prima, aber wie kriegt man den Feldinhalt von #31 (oder was immer es<br>



sei) in eine aresqa-Liste? Und von da wieder zur&uuml;ck?<br>



Man mu&szlig; daf&uuml;r sorgen, da&szlig; die zu ordnenden Elemente
durch Zeilenwechsel<br>



(Codes 13 10) getrennt sind. Das ist mit einer lokalen Ersetzung zu<br>



l&ouml;sen, aber es gibt subtile Klippen zu umschiffen dabei.<br>



Damit es unter allen Umst&auml;nden klappt, haben wir ein Unterprogramm<br>



gemacht, das man leicht aufrufen kann. Als Vorbereitung mu&szlig; man<br>



den zu ordnenden Inhalt in&nbsp; $fu&nbsp; so bereitstellen, da&szlig;
zwischen den <br>



Elementen die Zeichenfolge %%% steht. Das Ergebnis kriegt man in $fs <br>



zur&uuml;ck und kann die %%% wieder entsprechend zur&uuml;ckumwandeln. <br>



(Warum %%%? Jede andere eindeutige (sonst nicht vorkommende) Zeichen-<br>



folge w&uuml;rde es auch tun, also warum nicht diese?)<br>



SonderBonus: In der aresqa-Liste kann man sogar jede Zeile bearbeiten:<br>



einfach Balken drauf, Enter, Zeile bearbeiten, Enter.<br>



<br>



Damit geht es dann folgenderma&szlig;en (statt #31 das Feld, um das es<br>



bei Ihnen geht):<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">var #31</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins _; _;_</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins _;_%%%_</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $fu</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Unterprog. f. manuelles Ordnen aufrufen:</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">perf feld-mord</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $fs</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins _%%%_; _</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #31</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">...</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">include
fsort.inc</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



---------------------------------------------------------------------<br>



<br>

Damit sich's aber lohnt, ist in&nbsp; fsort.inc&nbsp; auch gleich noch
ein<br>



Unterprogramm f&uuml;r das alphabetische Sortieren mit drin. Man ruft es<br>



auf mit&nbsp; perf feld-asort.<br>



<br>



Und wie sieht es aus, das Unterprogramm&nbsp; :feld-mord&nbsp; f&uuml;r
das<br>



manuelle Ordnen? Gar nicht lang:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">:feld-mord</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">mes Zeilen
mit Maus verschieben, dann Liste mit OK speichern</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $fu</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins _%%%_^M^J_</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Liste
zeigen, Nutzer kann sie bearbeiten</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">aresqa</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Wurde
Esc gegeben? Dann $fu in $fs kopieren</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" var
$fu;ins $fs;return</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Bearbeitete Liste steht in aresqa.lst</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var
Faresqa.lst</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins _^M^J_%%%_</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var (F"% ")</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $fs</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">del aresqa.lst</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">return</span><br style="font-family: Courier New,Courier,monospace;">



<br>



</span></small>
---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="70"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 70: FLEXoFlip
oder FlippoFLEX?</span></font> &nbsp;<span style="font-family: Verdana;">
</span><br>



<small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Flip per FLEX erzeugen</span></span></small><br>



<small><span style="font-family: Verdana;"><br>



Aufgabe: Im Anzeigefeld mit FLEX einen zus&auml;tzlichen, anklickbaren
Flip<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; erscheinen lassen, wie
von Geisterhand.<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>



Warum: Es ist nicht jedermanns Sache, in die Anzeigeparameter einzu-<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; greifen, um einen neuen Flip
einzubauen. Warum kann man nicht<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eigene Flips auch mit FLEX
erzeugen und unter der Anzeige <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; als Sonderservice bei Bedarf
auftauchen lassen?<br>



<br>



L&ouml;sung: Ein Trick reicht nicht, drei sind n&ouml;tig.<br>



<br>



1.<br>



Der zentrale Trick ist der Befehl&nbsp; show +IV<br>



Damit kann man den Inhalt der internen Variablen unter der Anzeige<br>



aufscheinen lassen. Und wenn in der iV in dem Moment ein korrekt <br>



aufbereiteter Fliptext steht, dann sieht er genauso aus wie ein<br>



echter. Der Text mu&szlig; dazu nur die richtigen RTF-Formatierungs-<br>



anweisungen enthalten. Geben Sie mal ein:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">x var "\\ul
HALLO\\ul0"\sho +IV</span><br>



<br>



... denn \ul schaltet die Unterstreichung ein, \ul0 wieder aus.<br>



<br>



2.<br>



Das allein reicht noch nicht. Man mu&szlig; in zwei Variablen, #uYi und
#uZi,<br>



erstens den Fliptext und zweitens die Aktion bereitstellen.<br>



<br>



Sagen wir, "Info zur Datenbank" soll als Flip erscheinen, blau und <br>



unterstrichen, und soll die bekannte Funktion "Info zur Datenbank"<br>



ausl&ouml;sen. D.h., es m&uuml;&szlig;te der FLEX dbinfo.flx aufgerufen
werden. Dazu <br>



braucht's ein paar #u-Variable, die man auch per FLEX herstellen kann.<br>



<br>



So geht's:<br>



(Zum Testen schreiben Sie mal den folgenden Text in eine Datei ff.flx<br>



und geben dann ein:&nbsp; X ff )<br>



<br>



&nbsp; -----------------------------------------------------<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Text</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">$uy Info zur
Datenbank</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Aufruf</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">$uz X dbinfo</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Flip
erzeugen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">perf flexoflip</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">end</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Unterprogramm</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:flexoflip</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; Text
$uy aufbereiten (Code 160 = Flip-Begrenzungszeichen)</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var n 160
"\\ul\\cf2 " $uy "\\ul0\\cf1 " 160</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; und
anzeigen unter dem schon vorhandenen Text</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">sho +IV</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; $uy in
die n&auml;chste freie #uYi kopieren (daf&uuml;r sorgt ~)</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $uy</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">asci</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uY~</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; $uz in
die n&auml;chste freie #uZi kopieren</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $uz</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uZ~</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">return</span><br style="font-family: Courier New,Courier,monospace;">



&nbsp; -------------------------------------------------------<br>



<br>



3.<br>



Das reicht aber auch noch nicht, wenn der Flip in jedem Fall sofort<br>



bei der Anzeige eines Datensatzes aufblitzen soll! Er zeigt sich erst,<br>



wenn der FLEX aktiviert wird - was aber eben nicht von allein passiert<br>



und nicht aus den Exportparametern heraus veranla&szlig;t werden kann.<br>



<br>



Hier hilft das Konzept "autoflex" weiter (siehe h flex=autoflex).<br>



Das einfache Rezept f&uuml;r diesen Fall ist folgendes: Schreiben Sie in<br>



die Anzeigeparameter, am besten VOR die erste Zeile, die mit #<br>



anf&auml;ngt, diese Zeile<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">#nr "X ff!"
e"!" =X:</span><br style="font-family: Courier New,Courier,monospace;">



<br>



... wenn ff.flx der FLEX ist, um den es geht. Dann wird ff.flx immer<br>



sofort im Anschlu&szlig; an das Erzeugen der Anzeige ausgef&uuml;hrt.<br>



Wenn dasselbe auch bei F5 (Umschaltung auf Kategorieanzeige) passieren<br>



soll, dann mu&szlig; diese Zeile auch in den Abschnitt der
Parameterdatei,<br>



der mit&nbsp; #-(&nbsp; beginnt. Sie k&ouml;nnen in Ihren Autoflex
ansonsten noch<br>



ganz andere Dinge einbauen, das ist klar - er ist ein FLEX wie jeder<br>



andere.<br>



Anzeigeparameter - welche Datei das in Ihrem Fall ist? Mit&nbsp; X
dbinfo&nbsp; <br>



sehen Sie es.<br>



<br>



Aber mit "display" kommt der Flip nicht!?<br>



Das ist richtig. Der FLEX-Befehl&nbsp; disp&nbsp; l&auml;&szlig;t zwar
die Anzeigeparameter<br>



abarbeiten, aber den Autoflex nicht, denn das geht dann nicht.<br>



Wenn man aber "disp" gibt, ist man ja sowieso in einem FLEX und<br>



kann die n&ouml;tigen Befehle gleich dort mit einbauen. Oder als
n&auml;chste<br>



Zeile nach dem "disp" den Befehl "exec ff", falls der FLEX nach dem <br>



"disp" sowieso endet. Oder im Anschlu&szlig;, wenn der eigene FLEX
fertig<br>



ist, zweimal F5 dr&uuml;cken.<br>



<br>



<br>



Vorsicht Umlaute:<br>



Hier ist angenommen, da&szlig; der FLEX in ANSI geschrieben ist, z.B.<br>



mit Notepad. Wichtig ist das nur, wenn Umlaute vorkommen.<br>



Wenn man in ASCII schreibt, dann mu&szlig; das Unterprogramm so
beginnen:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">var $uy</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ansi</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $ux</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var n 160
"\\ul\\cf2 " $ux "\\ul0\\cf1 " 160</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">sho +IV</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; $uy in
#uYx kopieren</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $uy</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uY~</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">...</span><br style="font-family: Courier New,Courier,monospace;">



<br>



Hinweis:<br>



Da&szlig; mit \cf2 auf blau umgestellt wird, ist nicht
selbstverst&auml;ndlich.<br>



Es beruht auf den Farbeinstellungen in disphead.rtf. Hat man diese<br>



ver&auml;ndert, sind die Farbnummern evtl. andere.<br>



<br>



Fortgeschrittene wollen mehr: <br>



Der Flip soll OBERhalb des Anzeigetexts erscheinen!<br>



Dann mu&szlig; das Unterprogramm so aussehen:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">:flexoflip</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Anzeige speichern in body.rtf</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">file body.rtf</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;
Mini-RTF-Datei mit dem Flip erzeugen:</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">open x
head.rtf</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">wri "{ " 160
"\\ul\\cf2 " $uy "\\ul0\\cf1 " 160 "\\par }"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">close x</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; und
anzeigen ueber dem vorhandenen Text</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">help head</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">help +body</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; $uy in
die n&auml;chste freie #uYi kopieren (daf&uuml;r sorgt ~)</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $uy</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">asci</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uY~</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; $uz in
die n&auml;chste freie #uZi kopieren</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $uz</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uZ~</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">return</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



Trick Nummer 70.4 ist das Laden von zwei Hilfetexten untereinander, <br>



wobei hier der erste schnell mal eben erstellt wird, der zweite<br>



ebenfalls, aber als Kopie der momentanen Anzeige mit "file body.rtf".<br>



<br>



</span></small>
---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="71"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 71: Cambio</span></font>
&nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;"></span></small><small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp;&nbsp;<span style="font-weight: bold;">Fremdw&auml;hrungen in Euro umrechnen</span></span></small><br>



<small><span style="font-family: Verdana;"></span></small><br>



<small><span style="font-family: Verdana;">
Aufgabe: Schnell mal eben einen Fremdw&auml;hrungsbetrag in Euro
umrechnen<br>



<br>



Warum: Das wird gebraucht, wenn man bei einer Bestellung Preise in <br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fremdw&auml;hrungen vorliegen hat
oder Rechnungen zu erfassen sind,<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; die in Nicht-Euro-W&auml;hrungen
vorliegen.<br>



<br>



Im Prinzip ist kein Trick n&ouml;tig, wenn es nur um EINE W&auml;hrung
geht,<br>



z.B. nur um US-Dollar. Man besorgt sich den aktuellen Umtauschkurs, <br>



etwa von&nbsp;&nbsp; </span><big><span style="font-family: monospace;">http://de.finance.yahoo.com/waehrungsrechner</span></big><span style="font-family: Verdana;"><br>



Da findet man vielleicht, da&szlig;&nbsp; 1 EUR zu&nbsp; 1,5719 USD
gehandelt wird.<br>



Man mu&szlig; folglich einen Dollarbetrag durch&nbsp; 1,5719&nbsp;
teilen, um den<br>



EUR-Gegenwert zu erhalten.<br>



Sagen wir, in&nbsp; $bt steht der Dollarbetrag, dann:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">eval $bt /
1,5719</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $eu</span><br style="font-family: Courier New,Courier,monospace;">



<br>



und schon hat man in $eu den Gegenwert davon in EUR.<br>



Soll das Ergebnis gerundet sein auf zwei Stellen, dann geht es<br>



auch etwas anders (aber es mu&szlig; das gro&szlig;e Z sein!):<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">Z=$bt / 1,5719</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var Z2</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $eu</span><br style="font-family: Courier New,Courier,monospace;">



<br>



Nun schwankt der Kurs aber von Tag zu Tag. Daher mu&szlig; statt 1,5719
eine<br>



Variable her, die anderswo gesetzt wird. Sagen wir, $wk enth&auml;lt<br>



den aktuellen Dollarkurs. Dann gelten dieselben Formeln, nur mit<br>



$wk statt 1,5719.<br>



<br>



Das waren noch keine besonderen Tricks. Aber man will ja noch mehr: <br>



Nicht nur Dollars, sondern alle W&auml;hrungen, die in unseren
Bestellungen<br>



und Rechnungen auftreten, will man sofort in EUR umrechnen k&ouml;nnen.<br>



Daf&uuml;r gibt es in der DemoBank eine W&auml;hrungstabelle. Sie
steckt in einem<br>



Systemsatz, der unter SYSWWHRG im Reg. 11 zu finden ist. Darin stehen<br>



in $W beliebig viele Kurse, codiert in dieser Form:<br>



<br>



<span style="font-family: Courier New,Courier,monospace;">...
USD:1.5719:US-Dollar%AUD:1.60:Austral.$%CAD:1.47:Canad.$ ...</span><br style="font-family: Courier New,Courier,monospace;">



<br>



So k&ouml;nnen wir das ausnutzen:<br>



<br>



1. Kurse aktualisieren und evtl. die Liste erweitern:<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;
X o-kurse</span><br style="font-family: Courier New,Courier,monospace;">



&nbsp;&nbsp; In der Regel kann man die Kurse dem Wirtschaftsteil der
Tageszeitung<br>



&nbsp;&nbsp; entnehmen - geht schneller, falls eine zur Hand ist.<br>



&nbsp;&nbsp; Beim Bearbeiten auf die Doppelpunkte aufpassen! Die Zahl
in der<br>



&nbsp;&nbsp; Mitte ist immer der Wert eines EUR in der
Fremdw&auml;hrung.<br>



<br>



2. Kurse zum Rechnen verwenden<br>



&nbsp;&nbsp; Sch&ouml;n w&auml;re ein kompaktes Unterprogramm
":wumrech".<br>



&nbsp;&nbsp; Der Aufruf soll so aussehen: Zuerst Betrag und
W&auml;hrungsbezeichnung<br>



&nbsp;&nbsp; in der iV bereitstellen, z.B.&nbsp; 100 USD oder auch CAD
250, oder <br>



&nbsp;&nbsp; SWF320 - alles das sollte gehen. Man will z.B. schreiben
k&ouml;nnen:<br>



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;
var "nnnXYZ"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;
perform wumrech</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;
ins $eu</span><br style="font-family: Courier New,Courier,monospace;">



&nbsp; &nbsp;um nnn Einheiten der W&auml;hrung XYZ in Euro umzurechnen,
<br>



&nbsp;&nbsp; d.h. das Ergebnis soll dann in der iV stehen. Negativ, wenn<br>



&nbsp;&nbsp;&nbsp;&nbsp; es den W&auml;hrungscode XYZ gar nicht gibt.<br>



<br>



Hier ein vollst&auml;ndiger FLEX zum Ausprobieren, samt Unterprogramm:<br>



<br>



&nbsp; ---------------------------------------------------------------<br>



<span style="font-family: Courier New,Courier,monospace;">:start</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ask Bitte
Eingabe: Betrag W&auml;hrung</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" end</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">perf wumrech</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "-" mes
Keine g&uuml;ltige W&auml;hrung;jump start</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $eu</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $betrag "
= " $eu " EUR</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">mes</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">jump start</span><br style="font-family: Courier New,Courier,monospace;">



<br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; ******
Unterprogramm ***********</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:wumrech&nbsp;&nbsp;
// Waehrung nach Kurswert umrechnen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $betrag</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if $Wtab jump
wu2</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">set obj
2&nbsp;&nbsp; // Tabelle laden, falls noch nicht da</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var "|;
SYSWWHRG"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">f1nd</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var #9A$W</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $Wtab</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">set obj 1</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">:wu2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Zahlenwert mit eval aus $betrag entnehmen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">eval $betrag</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $bt</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; //
Trick1 : Waehrungscode entnehmen -&gt; #uwk</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $betrag
(f"0123456789,. " F"0123456789,. ")</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins #uwk</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; //
TRICK2 : Umrechnungswert aus $Wtab entnehmen</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var $Wtab
(b"#uwk" f":" e":")</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">if "" var "-1"</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">ins $wk</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">&nbsp; //
jetzt rechnen und Ergebnis zurueckgeben</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">Z=$bt / $wk</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">var Z2</span><br style="font-family: Courier New,Courier,monospace;">



<span style="font-family: Courier New,Courier,monospace;">return</span><br style="font-family: Courier New,Courier,monospace;">



&nbsp; ---------------------------------------------------------------<br>



<br>



Der Trick liegt darin, wie man den zur gew&auml;hlten W&auml;hrung
geh&ouml;rigen<br>



Umrechnungskurs aus der Liste herauszieht. Das macht die Zeile<br>



<span style="font-family: Courier New,Courier,monospace;">var $Wtab
(b"#uwk" f":" e":")</span><br>



Damit ergibt sich, wenn USD in #uwk steht, genau "1.5719".<br>



<br>



Ein weiterer Trick entnimmt vorher den W&auml;hrungscode aus der
Eingabe,<br>



indem vorn und hinten Ziffern sowie Komma, Punkt und Spatium<br>



weggenommen werden.<br>



<br>



Ab V28.3 wird es so sein, da&szlig; man auch schreiben kann<br>



<span style="font-family: Courier New,Courier,monospace;">var $Wtab
(b"~#uwk" f":" e":")</span><br style="font-family: Courier New,Courier,monospace;">



und dann ist es egal, ob in #uwk&nbsp; USD steht oder usd oder Usd.<br>



<br>



Anmerk.:&nbsp; <span style="font-family: Courier New,Courier,monospace;">b"$wk"</span> geht
leider auch in V28.3 nicht! In solchen F&auml;llen<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gehen nur die
#u-Variablen.<br>



<br>



Hinweis:&nbsp; Auch in der Exportsprache kann man mit Hilfe der
W&auml;hrungs-<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tabelle
umrechnen. Das geschieht in kont.apr, womit das<br>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Durchrechnen der
Kontingente bewerkstelligt wird.<br>



<br>



</span></small>
---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="72"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 72: Bedenke
wohl die letzte Zeile ...</span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;"></span></small><small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Was steht am Ende einer
Datei?</span></span></small><br>



<small><span style="font-family: Verdana;"></span></small><br>



<small><span style="font-family: Verdana;">Aufgabe: Schnell mal eben
die letzte Zeile / die letzten 100 Bytes<br>



&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; einer
Datei besorgen<br>



<br>



Warum: Hat man eine Datei produziert oder von woanders bezogen, kann<br>



&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; es n&uuml;tzlich sein,
sich mal das Ende anzuschauen. <br>



&nbsp;<br>



Die Probleme damit sind weit gr&ouml;&szlig;er als mit der ersten
Zeile, aber mit<br>



diesen Hinweisen geht es auch bei extrem gro&szlig;en Dateien sehr
schnell.<br>



Eine Datei mit 250MB kriegt man kaum in einen Editor...<br>



Trickreich ist es vor allem wegen der Steuerzeichen! Hier finden Sie<br>



ein paar erprobte Rezepte zum Abkupfern. Ganz unten ein fertiger FLEX,<br>



mit dem man sofort die letzte Zeile jeder Datei sehen kann.<br>



<br>



Ist die Datei xyz.txt sehr klein, sagen wir mal unter 10000 Zeichen, <br>



lautet das schnellste, einfachste Rezept so:<br>



<br>



</span><big><span style="font-family: monospace;">var Fxyz.txt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var (0,r10000)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var (9900,0)</span><br style="font-family: monospace;">



</big><span style="font-family: Verdana;"><br>



und schon hat man die letzten 100 Bytes. Der Trick&nbsp; ist:<br>



Der Dateitext wird nach dem Einlesen in der iV nach rechts geschoben,<br>



so da&szlig; eine Zeichenfolge von 10000 Byte entsteht, der eigentliche<br>



Text ganz am Ende. So kann man den Abschnitt ab Position 9900 nehmen,<br>



das sind dann genau die letzten 100 Zeichen. (Es gibt leider keinen<br>



Manipulationsbefehl, der direkt die letzen 100 Byte herausgriffe.)<br>



Hierbei erh&auml;lt man alle Zeichen, auch die Leer- und Steuerzeichen,<br>



also vor allem 13 und 10, die sich am Ende befinden.<br>



<br>



Wenn man aber genau die letzte Zeile will, und nicht wei&szlig;, wie
lang <br>



diese ist, kann man es so machen:<br>



<br>



</span><big><span style="font-family: monospace;">var Fxyz.txt</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var (T"^J" e"^M")</span></big><span style="font-family: Verdana;"><br>



<br>



Der Manipulationsbefehl (T"^J" nimmt das hinter dem letzten Code 10<br>



stehende St&uuml;ck, und das ist die letzte Zeile. Mit ^J ist nicht der<br>



Code 10 gemeint, sondern man gibt die Zeichen ^ und J getrennt an.<br>



Das Programm interpretiert das so, da&szlig; der Code 10 gesucht werden
soll.<br>



<br>



Moment, sagen Schlauk&ouml;pfe jetzt, die letzte Zeile kann leer sein,<br>



oder es gibt am Ende sogar mehrere Leerzeilen mit oder ohne Blanks.<br>



aber man will nat&uuml;rlich die letzte echte Textzeile haben! Was
dann? <br>



Da hilft dieser Trick:<br>



<br>



</span><big><span style="font-family: monospace;">ins _^M^J_{{{_</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var (F" {" T"{{{")</span><br style="font-family: monospace;">



</big><span style="font-family: Verdana;"><br>



Damit werden erst einmal alle Kombinationen 13 10 durch {{{ ersetzt,<br>



dann am Ende die Zeichen { und Blank weggenommen - egal wie viele es<br>



sind,&nbsp; und dann im verbleibenden Text nach der letzten Sequenz {{{<br>



gesucht und der dahinter stehende Text genommen. Das ist die letzte<br>



Zeile, in der was steht.<br>



<br>



Nur bei Dateien oberhalb 10000 Byte L&auml;nge empfiehlt sich das
weniger. <br>



Es gibt eine viel schnellere Methode. Sagen wir, die Datei ist<br>



wieder xyz.txt. Dann ist dies das geeignete UP, um die letzte Zeile<br>



anzeigen zu lassen:<br>



<br>



<br>



&nbsp;
---------------------------------------------------------------------<br>



</span><big><span style="font-family: monospace;">&nbsp; LASTLINE.FLX</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Aufruf:&nbsp; X
dateiname&nbsp; (d.h. dateiname steht dann in der iV)</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">perf lastline</span><br style="font-family: monospace;">



<span style="font-family: monospace;">mes</span><br style="font-family: monospace;">



<span style="font-family: monospace;">end</span><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Unterprogramm "Letzte
Zeile nach iV holen"</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Funktioniert bei allen
Konfigurationen.</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:lastline</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Name steht in iV</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #upA</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fsize</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if no var "DATEI " #upA " NICHT
GEFUNDEN";return</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #upL</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #upA</span><br style="font-family: monospace;">



<span style="font-family: monospace;">open</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Dateilaenge minus -1000</span><br style="font-family: monospace;">



<span style="font-family: monospace;">eval #upL -1000</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; positionieren</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fetch m</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp; 1000 Bytes holen
(d.h. gesamten Rest der Datei)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
laenger wird die letzte Zeile ja wohl nicht sein?</span><br style="font-family: monospace;">



<span style="font-family: monospace;">fetch 1000</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; 13 10 durch {{{ ersetzen
(fetch macht ^ und M aus Code 13)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Wenn man aber das Zeichen
^ suchen und ersetzen will, </span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; dann muss man&nbsp;
^~&nbsp; angeben</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins _^~M^~J_{{{_</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var (F" {" T"{{{")</span><br style="font-family: monospace;">



<span style="font-family: monospace;">close</span><br style="font-family: monospace;">



<span style="font-family: monospace;">return</span><br style="font-family: monospace;">



</big><span style="font-family: Verdana;">&nbsp;
---------------------------------------------------------------------<br>



<br>



Nochmal langsam zum Mitschreiben, warum hier ^~M&nbsp; statt ^M usw.? <br>



Weil der Befehl "fetch m" die Steuerzeichen in Codierungen der Form ^X<br>



verwandelt, also jeweils zwei Zeichen draus macht, d.h. aus 13 wird ein<br>



^ und ein M. Bei&nbsp; var Fxyz.txt&nbsp; ist das nicht so, da bleiben
13 und 10 <br>



als solche erhalten, als einzelne Codes also. Das "Suchen und Ersetzen<br>



mit dem Befehl&nbsp; ins _..._..._&nbsp; erfordert bei dem Spezialfall
des<br>



Zeichens ^, da&szlig; man daf&uuml;r ^~ angibt. Solche Sonderf&auml;lle
sind immer<br>



&auml;rgerlich, aber das UP kann man immerhin ohne dieses Wissen
verwenden.<br>



<br>



Anm.:<br>



Ab V28.4 wird man auch sagen k&ouml;nnen:<br>



</span><big><span style="font-family: monospace;">var (F"^~ MJ")</span></big><span style="font-family: Verdana;"><br>



um hinten direkt die Zeichen&nbsp; ^&nbsp; und&nbsp; M&nbsp; und&nbsp;
J&nbsp; alle wegzunehmen.<br>



(Bis jetzt geht ^~ bei F"..." und f"..." nicht.)<br>



&nbsp;</span></small>
---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="73"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 73: Datumsverdru&szlig;</span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;"></span></small><small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Unbrauchbare Datumsangaben standardisieren</span></span></small><br>



<small><span style="font-family: Verdana;">Immer mal wieder kommt Mi&szlig;mut auf &uuml;ber unstandardgem&auml;&szlig;e Datumsangaben!</span><br>



<span style="font-family: Verdana;">Da steht in einem Feld sowas wie&nbsp; 3.10.98 oder 10-03-01, man braucht </span><br>



<span style="font-family: Verdana;">aber 19981003 bzw. 20010310.</span><br>



<br>



<span style="font-family: Verdana;">Die schlechte Nachricht: Man kann kein Programm schreiben, das _jede_</span><br>



<span style="font-family: Verdana;">Form von Datum standardisieren k&ouml;nnte. Denn es ist ja auch m&ouml;glich,</span><br>



<span style="font-family: Verdana;">da&szlig;&nbsp; 10-03-01&nbsp; in Wahrheit 20100301 bedeutet! Oder da&szlig;&nbsp; 04/09/2009</span><br>



<span style="font-family: Verdana;">amerikanisch gemeint ist und&nbsp; 20090409&nbsp; hei&szlig;en soll.</span><br>



<br>



<span style="font-family: Verdana;">Wenn es aber so ist, da&szlig; die Datumsangaben alle von derselben Struktur</span><br>



<span style="font-family: Verdana;">sind, also etwa&nbsp; TT.MM.JJJJ, dann l&auml;&szlig;t sich was machen. Es gibt ein</span><br>



<span style="font-family: Verdana;">allgemeines Rezept, das man f&uuml;r andere F&auml;lle leicht modifizieren kann:</span><br>



<br>



<span style="font-family: Verdana;">Sagen wir mal, die konkrete Aufgabe lautet so: </span><br>



<span style="font-family: Verdana;">In #999 steht immer etwas von der Struktur&nbsp; TT.MM.JJJJ, und</span><br>



<span style="font-family: Verdana;">es soll daraus eine #99n werden mit JJJJMMTT. Und als Besonderheit</span><br>



<span style="font-family: Verdana;">kann TT bzw. MM auch einstellig sein, also z.B. 1.2.1999.</span><br>



<span style="font-family: Verdana;">Hinter dem Datum k&ouml;nnte auch noch etwas stehen, was dann verschwinden</span><br>



<span style="font-family: Verdana;">soll.</span><br>



<span style="font-family: Verdana;">Die #999 soll dann weg. Die Umwandlung soll auf die gesamte Datenbank</span><br>



<span style="font-family: Verdana;">angewendet werden.</span><br>



<br>



<span style="font-family: Verdana;">Hier der komplette FLEX:</span><big><br style="font-family: monospace;">



<br style="font-family: monospace;">



<span style="font-family: monospace;">first #</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Die Zahlen umordnen, 1stellige nach rechts ruecken</span><br style="font-family: monospace;">



<span style="font-family: monospace;">var #999(b"." b"." e" " 0,r4) #999(b"." e"." 0,r2) #999(e"." 0,r2)</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; Leerzeichen durch 0 ersetzen, Ergebnis nach #99n</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins _ _0_</span><br style="font-family: monospace;">



<span style="font-family: monospace;">ins #99n</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; und weg mit der #999, Satz speichern</span><br style="font-family: monospace;">



<span style="font-family: monospace;">#999</span><br style="font-family: monospace;">



<span style="font-family: monospace;">put</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:weiter</span><br style="font-family: monospace;">



<span style="font-family: monospace;">next #</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if cancel jump ende</span><br style="font-family: monospace;">



<span style="font-family: monospace;">&nbsp; geloeschte Saetze nicht behandeln!</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if del jump weiter</span><br style="font-family: monospace;">



<span style="font-family: monospace;">if yes jump loop</span><br style="font-family: monospace;">



<span style="font-family: monospace;">:ende</span><br style="font-family: monospace;">



<span style="font-family: monospace;">mes Uff, erledigt!</span><br style="font-family: monospace;">



</big><br>



<br>



<span style="font-family: Verdana;">Die Zeile mit "var" ist diejenige, die aus dem vorgegebenen Datum die</span><br>



<span style="font-family: Verdana;">richtige Struktur macht. Diese mu&szlig; man bei einer anderen Vorgabe dann</span><br>



<span style="font-family: Verdana;">entsprechend &auml;ndern, u.U. wird's schwieriger als in diesem Fall!</span><br>



<br>



<span style="font-family: Verdana;">Der Trick liegt hier in dem Manipulationsbefehl 0,r2, der bei den</span><br>



<span style="font-family: Verdana;">Zahlen f&uuml;r Monat und Tag angewendet wird. Damit r&uuml;ckt man eine </span><br>



<span style="font-family: Verdana;">einstellige Zahl nach rechts, so da&szlig; sich zwei Stellen ergeben.</span><br>



<span style="font-family: Verdana;">Leider ist die erste dann ein Leerzeichen. Man erh&auml;lt also aus</span><br>



<span style="font-family: Verdana;">1.2.1998 dann&nbsp;&nbsp; 1998 2 1.&nbsp; Hm, was nun?</span><br>



<span style="font-family: Verdana;">Der zweite Trick ist der Befehl&nbsp; ins _ _0_, der die Leerzeichen im</span><br>



<span style="font-family: Verdana;">iV-Text durch Nullen ersetzt. Und das war's dann.</span><br>



<span style="font-family: Verdana;">Der Rest ist die normale Vorgehensweise, wenn man die Gesamtbank</span><br>



<span style="font-family: Verdana;">durcharbeiten will. (S. Beisp. 3 in der Doku zu next: h xnext)</span><br>



<br>



<span style="font-family: Verdana;">Tip: Das "put" weglassen, wenn man nach dem Durchlauf erst nochmal</span><br>



<span style="font-family: Verdana;">schauen will, ob's denn gut geklappt hat. Danach dann in dem Mem&uuml;</span><br>



<span style="font-family: Verdana;">"Datei" die Funktion "Alle bearb. Daten speichern" aktivieren.</span><br>



<br>



<span style="font-family: Verdana;">Ist statt der Gesamtbank nur eine Erg.Menge abzuarbeiten, l&auml;&szlig;t man</span><br>



<span style="font-family: Verdana;">das Zeichen # bei first und next weg.</span><br>



<br>



<span style="font-family: Verdana;">Hinweis:</span><br>



<span style="font-family: Verdana;">Ab V29.6 gibt es den Manipulationsbefehl&nbsp; rN,x</span><br>



<span style="font-family: Verdana;">Dieser r&uuml;ckt den iV-Inhalt auf N Stellen nach rechts zurecht und f&uuml;llt</span><br>



<span style="font-family: Verdana;">links den Leerraum mit dem Zeichen x auf. Damit k&ouml;nnte man den </span><br>



<span style="font-family: Verdana;">var-Befehl des FLEXes so schreiben:</span><br>



<br>



<big><span style="font-family: monospace;">var #999(b"." b"." e" " r4,0) #999(b"." e"." r2,0) #999(e"." r2,0)</span></big><br>



<span style="font-family: Verdana;">&nbsp;</span><br>



<span style="font-family: Verdana;">Dies entspricht dem r-Befehl der Export-Manipulationssprache.</span><br>



<br>



(20090611)<br>



<br>



</small><small><span style="font-family: Verdana;">
&nbsp;</span></small>
---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="74"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 74: Globale Dollarkrise</span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;"></span></small><small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Das Zeichen $ &uuml;berall ersetzen</span></span></small><br>



<small><span style="font-family: Verdana;"><br>



</span></small><span style="font-family: Verdana;">Aufgabe: Man hat in seiner Datenbank den $ als Unterfeldzeichen,
</span><br>



<div class="moz-text-flowed" style="font-family: -moz-fixed; font-size: 16px;" lang="x-western"><span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; nun soll er durch das Dreieck (Code 31) ersetzt werden.
</span><br>



<br>



<small><span style="font-family: Verdana;">Aber Achtung: wenn der $ irgendwo als solcher vorkommt, dann wird
</span><br>



<span style="font-family: Verdana;">er ebenfalls ersetzt, denn das Programm kann dies nicht unterscheiden.
</span><br>



<br>



<span style="font-family: Verdana;">Das Durcharbeiten der gesamten Datenbank ist kein gro&szlig;er Trick, es
</span><br>



<span style="font-family: Verdana;">wird im Text&nbsp; xnext.rtf&nbsp; unter Beispiel 3 beschrieben.
</span><br>



<br>



<span style="font-family: Verdana;">Der erste Trick ist, da&szlig; man die lokale Ersetzung mit insert </span><span style="font-family: Verdana;" class="moz-txt-underscore"><span class="moz-txt-tag">_</span>abc_XYZ<span class="moz-txt-tag">_</span></span><span style="font-family: Verdana;">
</span><br>



<span style="font-family: Verdana;">verwenden mu&szlig;, denn bei der globalen hat der $ leider die Wirkung
</span><br>



<span style="font-family: Verdana;">eines Abzwack-Operators: es verschwindet der ganze Rest des Felds.
</span><br>



<span style="font-family: Verdana;">(s. Handbuch S. 118)
</span><br>



<span style="font-family: Verdana;"><br>



Der zweite Trick ist, mit var k_1 und var k_2 die Felder einzeln
</span><br>



<span style="font-family: Verdana;">zu bearbeiten, wobei die Feldnummer mitgenommen wird (mit k1/k2
</span><br>



<span style="font-family: Verdana;">hat man die Feldtexte ohne Nummer), so da&szlig; mit
</span><br>



<span style="font-family: Verdana;">var k_2
</span><br>



<span style="font-family: Verdana;">...
</span><br>



<span style="font-family: Verdana;">ins
</span><br>



<span style="font-family: Verdana;">das Feld wieder korrekt in den Satz zur&uuml;ckgegeben wird.
</span><br>



<br>



<span style="font-family: Verdana;">Der dritte Trick ist, mit&nbsp; if _$_&nbsp; zu pr&uuml;fen, ob im Satz wirklich
</span><br>



<span style="font-family: Verdana;">ein $ vorkommt, denn wenn nicht, braucht ja nichts getan zu werden
</span><br>



<span style="font-family: Verdana;">und insbes. der Satz nicht wieder gespeichert.
</span><br>



<br>



<span style="font-family: Verdana;">Der vierte Trick ist, da&szlig; man mit ^_ (zwei Zeichen) das Dreieck
</span><br>



<span style="font-family: Verdana;">angeben kann (Strg+_ ist Code 31). Dies geh&ouml;rt zu den Eigenheiten
</span><br>



<span style="font-family: Verdana;">der lokalen Ersetzung (h xinsert)
</span><br>



</small>
<div class="moz-text-flowed" style="font-family: -moz-fixed; font-size: 16px;" lang="x-western">
<small><br>



</small><span style="font-family: Verdana;"><small>Hier die L&ouml;sung:</small>
</span><br>



<br>



&nbsp; DOLL.FLX : Dollarzeichen ueberall durch das Dreieck ersetzen
<br>



&nbsp; 2009-11-26
<br>



<br>



first #
<br>



&nbsp; falls der erste Satz gel&ouml;scht ist: n&auml;chster Satz
<br>



if del jump weiter
<br>



&nbsp; Jeder Satz wird in dieser Schleife verarbeitet:
<br>



:schleife
<br>



<br>



&nbsp; Kommt $ im Satz vor? Wenn nicht, -&gt; :weiter
<br>



if not _$_ jump weiter
<br>



<br>



&nbsp; *************<br>



var k_1
<br>



<br>



:loop
<br>



&nbsp; Kombination ^ und _ steht fuer das Dreieck:
<br>



ins ,$,^_,
<br>



ins
<br>



var k_2
<br>



if not "" jump loop
<div class="moz-text-flowed" style="font-family: -moz-fixed; font-size: 16px;" lang="x-western">
&nbsp; **************<br>



<br>



put&nbsp;&nbsp; speichern
<br>



<br>



&nbsp; N&auml;chsten Satz holen (interne Nummernfolge)
<br>



:weiter
<br>



next #
<br>



<br>



&nbsp; kein Satz mehr, Ende erreicht
<br>



if cancel jump exit
<br>



&nbsp; der Satz ist gel&ouml;scht
<br>



if del jump weiter
<br>



<br>



&nbsp; es gab noch einen Satz? dann -&gt; :schleife
<br>



if yes jump schleife
<br>



<br>



:exit
<br>



end<br>



<br>



<small><span style="font-family: Verdana;">Statt des Abschnitts zwischen ***** geht auch, k&uuml;rzer:</span></small><br>



<br>



var kn<br>



ins ,$,^_,
<br>



ins
<br>



put<br>



<br>



<small><span style="font-family: Verdana;">Das w&auml;re der f&uuml;nfte Trick: mit&nbsp; var kn &nbsp;wird der gesamte Satz in die iV kopiert</span><br>



<span style="font-family: Verdana;">die Ersetzung darin durchgef&uuml;hrt und das Ganze wieder in den Arbeitsspeicher</span><br>



<span style="font-family: Verdana;">zur&uuml;ckkopiert.</span><br>



</small><span style="font-family: Verdana;"><br>



<small><small>(2009-11-26)</small></small></span><small>
<small><br>



</small><span style="font-family: Verdana;">
&nbsp;</span></small>
---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="75"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 75: Index &auml;ndern on-the-fly</span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;"></span></small><small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Bestimmte Eintr&auml;ge im laufenden Betrieb &auml;ndern</span></span></small><br>



<small><span style="font-family: Verdana;"><br>



</span></small><span style="font-family: Verdana;"><span style="font-style: italic;">Aufgabe</span>: Schnell mal eben f&uuml;r eine Anzahl von S&auml;tzen einen bestimmten<br>



&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Registereintrag &auml;ndern.<br>



</span><span style="font-family: Verdana;">&nbsp;</span><br>



<small><span style="font-family: Verdana;">Warum das?</span><br>



<span style="font-family: Verdana;">Wer kennt es nicht: Man macht an den Indexparametern eine ganz kleine</span><br>



<span style="font-family: Verdana;">&Auml;nderung, aber a99 ist zu dumm, dann schnell mal eben die nicht mehr</span><br>



<span style="font-family: Verdana;">korrekten Schl&uuml;ssel automatisch rauszusuchen und -zuwerfen und die</span><br>



<span style="font-family: Verdana;">nunmehr korrekten einzusortieren. </span><br>



<span style="font-family: Verdana;">Warum das so ist? Nun, a99 kriegt einfach gar nicht mit, da&szlig; man was</span><br>



<span style="font-family: Verdana;">ge&auml;ndert hat - es pr&uuml;ft nicht st&auml;ndig, ob die Datei noch so ist wie</span><br>



<span style="font-family: Verdana;">vorher - und falls nicht, dann genau das Richtige zu tun. Das w&auml;re</span><br>



<span style="font-family: Verdana;">leider zuviel verlangt, man mu&szlig; also selber dran denken, da&szlig; man den</span><br>



<span style="font-family: Verdana;">Index dann erneuert.</span><br>



<span style="font-family: Verdana;">Ha! Index erneuern, das ist bei Kleinbanken kein Problem, aber bei</span><br>



<span style="font-family: Verdana;">sehr gro&szlig;en braucht's massig Zeit und ist im Netz auch nur dann</span><br>



<span style="font-family: Verdana;">m&ouml;glich, wenn gerade keiner an der Datenbank arbeitet, und das kann</span><br>



<span style="font-family: Verdana;">schon ein arges &Auml;rgernis sein; in einem 24/7-Betrieb geht das gar</span><br>



<span style="font-family: Verdana;">nicht!</span><br>



<br>



<span style="font-family: Verdana;">Aber FLEX birgt das Potential f&uuml;r einen pfiffigen Trick, und der</span><span style="font-family: Verdana;"> geht so:</span><br>



<span style="font-family: Verdana;"><br>



Zuerst die Ergebnismenge aller S&auml;tze bilden, bei denen die</span><br>



<span style="font-family: Verdana;">&Auml;nderung sich auswirken w&uuml;rde.</span><br>



<span style="font-family: Verdana;">Dann einen FLEX schreiben, der </span><br>



<span style="font-family: Verdana;">a) aus einem Satz den nicht mehr g&uuml;ltigen Schl&uuml;ssel bildet und</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; diesen l&ouml;scht (mit&nbsp; ixdel ...)</span><br>



<span style="font-family: Verdana;">b) aus demselben Satz den nunmehr g&uuml;ltigen Schl&uuml;ssel bildet und</span><br>



<span style="font-family: Verdana;">&nbsp;&nbsp; diesen einf&uuml;gt (mit&nbsp; ixadd ...)</span><br>



<br>



<span style="font-family: Verdana;">
Es folgt das Kochrezept, an das man sich in jedem Fall halten kann. <br>



(Doku zu den zwei Befehlen:  h xixadd. Darin auch Hinweis auf einen <br>



aufwendigeren FLEX umindex.flx, der sich empfiehlt, wenn besonders <br>



viele Schl&uuml;ssel zu &auml;ndern sind; darauf wurde auch in der Vb.202 <br>



schon kurz aufmerksam gemacht. Er l&ouml;scht zun&auml;chst *alle* Schl&uuml;ssel <br>



eines Satzes nach Ma&szlig;gabe der alten Parameter und speist dann alle <br>



nach Vorschrift der neuen neu ein. Je nach Menge dauert das viel <br>



l&auml;nger. umindex.flx ist im Gesamtpaket mit drin.)

</span><br>



<br>



<span style="font-family: Verdana;">// Ergebnismenge der relevanten S&auml;tze vorher bilden</span><br>



</small><br>



<span style="font-family: Courier New;">
first<br>



:loop<br>



// den alten, nicht mehr korrekten Schl. bilden<br>



// und zwar mit Index-Pr&auml;fix, z.B&nbsp; |7, ohne Spatium dahinter<br>



var "|..." ...<br>



ins #uzA<br>



var i " " #uzA<br>



ixdel<br>



<br>



<small><span style="font-family: Verdana;">// den neuen, jetzt korrekten Schl. bilden</span></small><br>



var "|..." ...<br>



ins #uzN<br>



var i " " #uzN<br>



ixadd<br>



<br>



:nxt<br>



next<br>



if yes jump loop<br>



mes ERLEDIGT!<br>



</span>
<br>



<br>



<small><span style="font-family: Verdana;">Statt&nbsp; var "..." ...&nbsp; ist nat&uuml;rlich jeweils ein geeigneter Algorithmus</span><br>



<span style="font-family: Verdana;">f&uuml;r den betr. Schl&uuml;ssel einzusetzen. Dazu sind evtl. mehrere Befehle</span><br>



<span style="font-family: Verdana;">n&ouml;tig. Insbes. kann man mit&nbsp; xcode ip&nbsp; oder&nbsp; xcode iq&nbsp; die Umcodierung</span><br>



<span style="font-family: Verdana;">der Indexparameter mit heranziehen.</span><br>



<br>



<span style="font-family: Verdana;">Auch umgekehrt, zuerst neu dann alt, ist es m&ouml;glich. Oder wahlweise nur</span><br>



<span style="font-family: Verdana;">den alten, nicht mehr ben&ouml;tigten Schl&uuml;ssel l&ouml;schen oder nur den neuen,</span><br>



<span style="font-family: Verdana;">den es bisher noch nicht gab, erzeugen.</span><br>



<br>



<span style="font-family: Verdana;">Ferner ist es nat&uuml;rlich auch m&ouml;glich, statt nur eines Schl&uuml;ssels gleich</span><br>



<span style="font-family: Verdana;">mehrere zu l&ouml;schen und/oder neu einzuspeisen; dann erweitert man eben</span><br>



<span style="font-family: Verdana;">die Sache um entsprechende Abschnitte. Ratsam ist nat&uuml;rlich immer, es</span><br>



<span style="font-family: Verdana;">erst mit einer kleinen Erg.Menge zu testen...</span><br>



<br>



<span style="font-family: Verdana;">Aber was, wenn man auf keine Weise die Ergebnismenge aller betroffenen</span><br>



<span style="font-family: Verdana;">S&auml;tze bilden kann? Dann erweitert man die Schleife mit&nbsp; <span style="font-family: Courier New,Courier,monospace;">first #</span>&nbsp; und</span><br>



<span style="font-family: Verdana;"><span style="font-family: Courier New,Courier,monospace;">next #</span>&nbsp; eben auf die Gesamtbank und startet es vor der Mittagspause.</span><br>



<span style="font-family: Verdana;"><span style="font-style: italic;">Aber Achtung:</span> Statt einfach nur&nbsp; <span style="font-family: Courier New,Courier,monospace;">next #&nbsp;</span> mu&szlig; es dann so lauten:</span><br>



</small><br>



<span style="font-family: Courier New;">:nxt<br>



next #<br>



if deleted jump nxt<br>



if not cancel jump loop<br>



</span><br>



<small><span style="font-family: Verdana;">denn es k&ouml;nnte sich bei dem mit&nbsp; <span style="font-family: Courier New,Courier,monospace;">next #</span>&nbsp; geladen Satz um einen</span><br>



<span style="font-family: Verdana;">gel&ouml;schten handeln ("deleted"), so einer ist zu &uuml;berspringen.</span><br>



</small><br>



</div>



</div>



<span style="font-family: Verdana;"></span><small><span style="font-family: Verdana;"></span></small><span style="font-family: Verdana;"><small><small>(2010-05-04)</small></small></span><small>
<br>


<br>


</small><small><span style="font-family: Verdana;">
&nbsp;</span></small>
---------------------------------------------------------------------------------------------------<br>



<small><span style="font-family: Verdana;"></span></small><br>



<font face="Verdana">
<a name="76"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 76: Erweiterter Aktionsradius</span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;"></span></small><small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Ergebnismenge einschl. verkn&uuml;pfter S&auml;tze durcharbeiten</span></span></small><br>



<small><span style="font-family: Verdana;"><br>



</span></small><span style="font-family: Verdana;"><small><span style="font-style: italic;">Aufgabe</span>: Schnell mal eben eine Ergebnismenge durcharbeiten, wobei aber<br>


zu jedem Satz auch die mit ihm in bestimmter Weise verkn&uuml;pften S&auml;tze<br>


mit verarbeitet werden sollen, aber nicht unbedingt in derselben Weise<br>


wie der Hauptsatz.</small><br>



</span><span style="font-family: Verdana;">&nbsp;</span><br>



<small><span style="font-family: Verdana;">Warum das?</span><br>



<span style="font-family: Verdana;"></span><span style="font-family: Verdana;">Beispiele sind nicht nur die verkn&uuml;pften Bands&auml;tze, </span><span style="font-family: Verdana;">sondern auch Exemplar- oder Bestells&auml;tze <br>


oder die Ausleihen von </span><span style="font-family: Verdana;">Nutzern etc., d.h. alles kommt in Betracht, was durch die Indexierung <br>


</span><span style="font-family: Verdana;">miteinander zusammenh&auml;ngt. </span><br style="font-family: Verdana;">


<span style="font-family: Verdana;"><span style="font-style: italic;">Ferner:</span> Es soll ein reines FLEX-Verfahren sein, also ohne Export</span><span style="font-family: Verdana;">parameter, bis auf Umcodierung.</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;"><span style="font-style: italic;">Und:</span> Das Verfahren soll mit a99 und mit acon funktionieren.</span><br style="font-family: Verdana;">


</small><br>


<small><span style="font-family: Verdana;">Option: Vielleicht will man auch gelegentlich schnell mal eben die</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">Gesamtbank entsprechend abarbeiten ...</span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<span style="font-family: Verdana;">Beisp.1: Erg.Menge exportieren, aber unter jedem Satz die Exemplardaten</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; auflisten.</span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<span style="font-family: Verdana;">Beisp.2: In jedem Satz der Erg.Menge bestimmte &Auml;nderungen vornehmen,</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; zus&auml;tzlich aber auch in den verkn&uuml;pften Unters&auml;tzen.</span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<span style="font-family: Verdana;">Gesucht ist eine allgemeine L&ouml;sung, die in allen vergleichbaren</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">F&auml;llen zum Einsatz kommen kann! Ein FLEX-Unterprogramm also, aber mit</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">Variationsm&ouml;glichkeiten.</span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<span style="font-family: Verdana;">Man konnte solche Produktionen seit langem mittels der "Nachladung"</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">in den Exportparametern bewerkstelligen. Nun aber soll eine Methode</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">gefunden werden, die allein mit FLEX arbeitet, denn die Export-</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">Parametrierung ist eine wegen ihrer Abstraktheit und Kryptik doch recht</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">schwierig anzuwendende Sache.</span><br style="font-family: Verdana;">


</small><br>


<small><span style="font-family: Verdana;"></span><big style="font-weight: bold;"><span style="font-family: Verdana;">Der L&ouml;sungsweg</span></big><br style="font-family: Verdana;">


<span style="font-family: Verdana;"></span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">Folgende Kurzbezeichnungen sind sinnvoll:</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp; HM = Hauptergebnismenge</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp; ZM = Zusatz-Erg.Menge, jeweils zu einem Satz der HM zu bilden</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (Manchmal ist sie leer!)</span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<span style="font-family: Verdana;">Zwei Probleme stellen sich in den Weg:</span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<span style="font-family: Verdana;">Problem 1:</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">Wir k&ouml;nnen nicht die &uuml;bliche Methode&nbsp; first / next&nbsp; verwenden, denn zu</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">jedem Satz ist eine Zusatz-Erg.Menge (ZM) zu bilden - dadurch wird</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">dann die HM geschlossen. Nach Verarb. der ZM ist zur HM zur&uuml;ckzukehren</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">und in dieser dann zum n&auml;chsten Satz zu gehen. Das ginge in a99, in</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">acon aber nicht!&nbsp; [Evtl. wird das noch ge&auml;ndert!]</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">L&ouml;sung: Aus der HM wird mittels des Befehls</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var i,</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eine Nummernliste erstellt, in der die internen Satznummern</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; durch ',' getrennt vorliegen</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Aber ACHTUNG: Die Liste wird in einer $-Var. gespeichert, das</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; beschr&auml;nkt die Gr&ouml;&szlig;e der Erg.Menge auf etwa 8-10000. Will man</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gr&ouml;&szlig;ere erschlagen k&ouml;nnen, mu&szlig; man die Methodik umstellen</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; auf Speicherung in einer Datei und dann zeilenweises Einlesen.</span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<span style="font-family: Verdana;">Problem 2: Die folgenden drei je spezifischen Aktionen k&ouml;nnen </span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">nicht Teil des erw&uuml;nschten, allgemeing&uuml;ltigen Unterprogramms sein:</span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<span style="font-family: Verdana;">ZMget : Bildung der zu einem HM-Satz geh&ouml;rigen ZM</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">HMact : Ausf&uuml;hrung der gew&uuml;nschten Aktion am HM-Satz</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">ZMact : ... am verkn&uuml;pften ZM-Satz</span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<span style="font-family: Verdana;">L&ouml;sung: Unser Unterprogramm soll&nbsp; EXTACT&nbsp; hei&szlig;en, d.h. es beginnt mit</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">der Zeile&nbsp; :EXTACT&nbsp; und endet mit&nbsp; return. (Der Name leitet sich ab</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">von "extended action", wie man die Sache auch bezeichnen k&ouml;nnte.)</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">Das Unterprogramm enth&auml;lt nicht selber die drei Aktionen, sondern</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">die liegen als Unterprogramme "weiter oben" im Haupt-FLEX, unter den</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">o.g. Namen, denn sie m&uuml;ssen spezifisch f&uuml;r die jeweilige konkrete</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">Aufgabe sein.</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">Weil aber verschachtelte Unterprogramme nicht m&ouml;glich sind, m&uuml;ssen</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">die drei Unterprogramme mit "jump ..." aufgerufen werden, d.h. sie</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">sind keine echten Unterprogramme, sondern werden jeweils mit einem</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">"jump ..." beendet, der zur&uuml;ck in das Unterprogramm&nbsp; EXTACT hinter den</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">jeweiligen Aufruf f&uuml;hrt: :HMact endet mit&nbsp; jump HMactRet&nbsp; und f&uuml;hrt</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">damit zu&nbsp; :HMactRet&nbsp; unter&nbsp; jump HMact, usw.</span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<big><span style="font-family: Verdana; font-weight: bold;">Was ist zu tun?</span><br style="font-family: Verdana; font-weight: bold;">


<span style="font-family: Verdana; font-weight: bold;"></span></big><br style="font-family: Verdana;">


<span style="font-family: Verdana;">Im Haupt-FLEX sieht der Ablauf so aus:</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">und hier mu&szlig; man die "AKTIONen" selber geeignet programmieren!,</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">d.h. NUR das hier, zwischen ANFANG und ENDE, ist der variable Teil,</span><br style="font-family: Verdana;">


<span style="font-family: Verdana;">den man in den eigenen FLEX bzw. Job einbauen muss: </span><br style="font-family: Verdana;">


<br style="font-family: Verdana;">


<span style="font-family: Verdana;">(Also das folgende Muster kopieren und geeignet modifizieren!)</span></small><br>


<br>


<small>// *** ANFANG des eigenen .flx oder .job ************************<br>


// ... Vorbereitende AKTIONen ...<br>


<br>


// Fuer acon:<br>


var m<br>


if %ac-% echo off<br>


<br>


//&nbsp; Wenn Gesamtbank gewuenscht, dann Flag $gF setzen:<br>


// $gF=1<br>


<br>


// Sonst muss jetzt eine Erg.Menge vorliegen, evtl. geordnet.<br>


<br>


exp f &lt;dateiname&gt;&nbsp;&nbsp; // Ausgabedatei oeffnen<br>


exp p utf&nbsp;&nbsp; // diese 2 Zeilen nur f&uuml;r Wandlung von ASCII nach UTF-8<br>


exp wA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Bei #-A in utf.apr wird der zu schreibende Text umcodiert<br>


<br>


// der Aufruf des Unterprogramms:<br>


perform EXTACT<br>


mes Erledigt!<br>


<br>


// ... nachbereitende Aktionen des Hauptteils ...<br>


<br>


end<br>


<br>


// An das Ende des eigenen Jobs kommt noch dieser Teil,<br>


// ebenfalls selbst zu schreiben, weil spezifisch.<br>


<br>


// ###############<br>


//&nbsp; Diese drei Abschnitte sind aufgabenspezifisch auszufuellen:<br>


<br>


//&nbsp; 1. Bildung der Sub-Erg.Menge&nbsp; ZM<br>


:ZMfind<br>


// *** hier AKTION zur Bildung der ZM-Erg.Menge, evtl. mit Ordnung ***<br>


// i.d.R. mit "var ..." einen Suchbefehl machen und dann "find"<br>


//&nbsp; zurueck in das UP<br>


jump ZMfindRet<br>


<br>


//&nbsp; 2. Verarb. d. Satzes aus der HM (ist jetzt der aktive Satz)<br>


:HMact<br>


// *** hier AKTIONen mit dem HM-Satz ***<br>


// evtl. bestimmte S&auml;tze ausschlie&szlig;en, z.B. mit<br>


// if not #20 jump HMnext<br>


// i.d.R. mit "write ..." die Ausgabe erzeugen<br>


jump HMactRet<br>


<br>


//&nbsp; 3. Export des aktuellen Satzes der ZM (ist jetzt aktiver Satz)<br>


:ZMact<br>


// *** hier AKTIONen mit dem ZM-Satz&nbsp; ***<br>


// i.d.R. mit "write ..." die Ausgabe erzeugen<br>


jump ZMactRet<br>


<br>


// ################<br>


<br>


//&nbsp; jetzt noch die Datei hinzunehmen, in der :EXTACT ist:<br>


include extact.inc<br>


<br>


// *** ENDE des eigenen FLEXjobs *********************************<br>


<br>


<br>


&nbsp;================ extact.inc =====================================<br>


<br>


==&gt;Mit&nbsp; X getfile extact.inc&nbsp; k&ouml;nnen Sie sich die Datei holen!<br>


&nbsp; oder von hier kopieren:<br>


<br>


// *** Beginn extact.inc *****************************************<br>


//&nbsp; Label fuer den Aufruf mit&nbsp; perform EXTACT&nbsp; zur Anwendung auf die<br>


//&nbsp; aktuelle Erg.Menge, die in der vorliegenden Reihenfolge<br>


//&nbsp; abgearbeitet werden soll<br>


<br>


:EXTACT<br>


//&nbsp; Die internen Nummern der HM in $hm ablegen, mit , getrennt<br>


var i,<br>


ins $hm<br>


//&nbsp; Diese Liste wird dann abgearbeitet von vorn nach hinten<br>


//&nbsp; ACHTUNG: die Erg.Menge kann fuer diese Methode nicht groesser als<br>


//&nbsp; 8-10.000 Saetze sein.<br>


<br>


// Wenn $gF besetzt, dann Gesamtbank abarb.<br>


<br>


if $gF first #;if del jump HMgesamt<br>


<br>


:HMloop<br>


//&nbsp; die erste (bzw. naechste) Nummer nehmen, # davorsetzen<br>


//&nbsp; ($hm beginnt mit dieser Nr.)<br>


//&nbsp; und den HM-Satz mit dieser Nr. laden<br>


//&nbsp; - falls nicht $gF gesetzt, dann ist jetzt naechste Satz schon da<br>


if not $gF var "#" $hm (e",");f1nd<br>


<br>


//&nbsp; Die HM-Aktion ausfuehren<br>


jump HMact<br>


<br>


:HMactRet<br>


//&nbsp; Zu dem Satz nun die zusaetzliche Menge (ZM) bilden<br>


// Vorher&nbsp; Objekt 2 einschalten - damit dann&nbsp; next #&nbsp; klappt<br>


// aber 1 nach 2 kopieren, damit unter :ZMfind zugaenglich<br>


copy obj 1 2<br>


set obj 2<br>


// d.h. die ZM-Saetze werden in Obj.2 geladen<br>


jump ZMfind<br>


//&nbsp; (von dort Ruecksprung mit&nbsp; jump ZMfindRet)<br>


:ZMfindRet<br>


// "less than 1"?&nbsp; d.h. ZM ist leer<br>


if l1 set obj 1;jump HMnext<br>


<br>


//&nbsp; Die ZM ist nicht leer, also abarbeiten<br>


<br>


first<br>


:ZMloop<br>


// die ZM-Aktion&nbsp; :ZMact&nbsp; ausfuehren (im HauptFLEX)<br>


jump ZMact<br>


// von dort zurueck mit&nbsp; jump ZMactRet<br>


:ZMactRet<br>


// naechsten Satz der ZM<br>


next<br>


if yes jump ZMloop<br>


// keiner mehr da - Die ZM schliessen und loeschen<br>


close res<br>


// ZM Ende, jetzt wieder Objekt 1<br>


set obj 1<br>


<br>


//&nbsp; Hauptschleife geht weiter, momentan erste Nr. der HM wegnehmen<br>


:HMnext<br>


// Wenn Gesamtbank:<br>


if $gF jump HMgesamt<br>


<br>


// Naechsten Satz der Erg.Menge<br>


var $hm (b",")<br>


//&nbsp; verkuerzte Liste wieder in $hm<br>


ins $hm<br>


//&nbsp; Ist noch was da? Dann weiter in Hauptschleife mit dem naechsten Satz<br>


if $hm jump HMloop<br>


jump HMend<br>


<br>


// naechsten Satz der Gesamtbank, etwas schwierig wg. unbesetzter Nummern etc.<br>


:HMgesamt<br>


next #<br>


// Ende? (a99: cancel, acon: no)<br>


if no jump HMend<br>


if cancel jump HMend<br>


<br>


if del jump HMgesamt<br>


jump HMloop<br>


<br>


:HMend<br>


return<br>


end<br>


// **** ENDE&nbsp; extact.inc&nbsp; *****************************************<br>


<br>


<br>


Es wurden uns ein paar Verbesserungsw&uuml;nsche mitgeteilt, die wir<br>


noch umsetzen konnten.<br>


<br>


Geben Sie zuerst in a99 diese zwei Befehle:<br>


<br>


&nbsp; X getfile extact.ini <br>


&nbsp;&nbsp;&nbsp;&nbsp; das ist die eigentliche Funktion :EXTACT, <br>


&nbsp;&nbsp;&nbsp;&nbsp; diese Datei erfordert *keinen* Eingriff<br>


<br>


&nbsp; X getfile extact.flx<br>


&nbsp;&nbsp;&nbsp;&nbsp; das ist ein Muster zum Abwandeln! Darin wird :EXTACT aufgerufen<br>


&nbsp;&nbsp;&nbsp;&nbsp; Ausf&uuml;hrliche Hinweise stehen drin.<br>


<br>


Dann haben Sie die zwei Dateien in Ihrem FLEX-Ordner.<br>


<br>


<br>


Um ein *eigenes Projekt* zu realisieren, so vorgehen:<br>


<br>


1. Kopie von&nbsp; extact.flx machen, sagen wir&nbsp; mypro.flx<br>


<br>


2. mypro.flx bearbeiten: (darin ist alles kommentiert)<br>


<br>


&nbsp;&nbsp; A. Drei Flags setzen, und zwar f&uuml;r diese Optionen:<br>


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $gF : Erg.Menge oder Gesamtbank verarbeiten<br>


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $mF : Hauptsatzdaten immer ausgeben,<br>


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; oder nur wenn Unterdaten existieren?<br>


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $hF : Hauptsatz &uuml;ber oder unter den Unters&auml;tzen auswerfen<br>


<br>


&nbsp;&nbsp; B. Drei Funktionen erg&auml;nzen:<br>


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :ZMfind: Funktion f&uuml;r das Bilden der Zusatz-Erg.Menge<br>


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :HMact : Aktion f&uuml;r den jeweiligen Hauptsatz<br>


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :ZMact : Aktion f&uuml;r die zus&auml;tzlichen (nachgladenen) S&auml;tze<br>


<br>


Die Aktionen werden zumeist write-Befehle sein, um die erw&uuml;nschten<br>


Datenelemente in der erw&uuml;nschten Form auszugeben, es k&ouml;nnen aber auch<br>


andere Aktionen sein, die man mit den Datens&auml;tzen durchf&uuml;hren will,<br>


also auch &Auml;nderungen an Haupt- bzw. Nachlades&auml;tzen.<br>


Weitere Tips in den Dateien.<br>


<br>


3. Vor dem Start:&nbsp; Mit&nbsp; Export / Andere Exportdatei<br>


&nbsp;&nbsp;&nbsp; in a99 einen Dateinamen fuer den Output vorgeben!<br>


<br>


4. Schlie&szlig;lich mit&nbsp;&nbsp; X mypro&nbsp;&nbsp; starten!<br>


<br>


(Solange kein "put"-Befehl vorkommt, kann nix schiefgehen.)<br>


</small><br>


<font face="Verdana">
<a name="77"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 77: <big style="font-family: Verdana;">RAK = Register-Abschnitts-Kopie</big></span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;"></span></small><small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; <span style="font-weight: bold;">Reg.Abschnitt in eine andere Indexdatei kopieren</span></span></small><br>



<small><span style="font-family: Verdana;"><br>



</span></small><span style="font-family: Verdana;"><small><span style="font-style: italic;">Aufgabe</span>: Schnell mal eben einen Registerabschnitt kopieren von einem<br>


Index (z.B. .adx) in einen anderen (z.B. .aex). </small></span><span style="font-family: Verdana;"><br>


&nbsp;</span><br>



<small><span style="font-family: Verdana;">Warum das?</span></small><br>


<small style="font-family: Verdana;">Konkreter Anla&szlig; war die Beobachtung, da&szlig; die Expansion einer<br>


Suche nicht klappt, wenn das ALL-Register benutzt wird. Z.B. w&uuml;rde<br>


man mit&nbsp; find all &amp;schiller&nbsp; die R&auml;uber nicht erwischen, wenn sie<br>


(d.h. das Wort "raeuber") in Unterdatens&auml;tzen vorkommen, die den<br>


Namen "Schiller" nicht enthalten.<br>


Das kommt, weil das ALL-Register im Index .aex liegt, das Expansions-<br>


Register aber in .adx: Das sind dort die Eintraege, die mit | beginnen<br>


im Register 10.<br>


Ob und wann diese Unzul&auml;nglichkeit behebbar sein wird, das steht noch<br>


abzuwarten. Immerhin sind fast 4 Jahre verstrichen, seitdem das ALL-<br>


Register entwickelt wurde, und erst jetzt fiel das Problem auf.<br>


<br>


Was aber, so die Idee zum Trick, wenn das Expansionsregister einfach<br>


irgendwie in .aex r&uuml;berkopiert werden k&ouml;nnte? Dann m&ouml;cht's doch<br>


gehen!? Ja, das tut es!<br>


Das ist zwar nett, aber nat&uuml;rlich wird der Einwand sofort kommen:<br>


<br>


Alsbald nach solchem Kopieren k&ouml;nnen sich schon wieder Eintr&auml;ge &auml;ndern!<br>


Neue kommen hinzu, andere verschwinden. Und schon ist die Expansion <br>


unzuverl&auml;ssig - das ist schlimmer, als wenn's sie gar nicht gibt.<br>


Richtig. Der Trick ist ein Behelf, mehr nicht. Aber was jahrelang gar<br>


nicht auffiel, mag wohl damit erst einmal ein paar Wochen hingehen,<br>


wenn man den Vorgang angemessen h&auml;ufig wiederholt, vielleicht t&auml;glich<br>


oder alle paar Stunden.<br>


<br>


Das konkrete Beispiel soll deshalb mehr zur Veranschaulichung der<br>


Methode dienen, nicht als wirkliche L&ouml;sung dieses speziellen Problems.<br>


(FLEXperten seien angespornt, die Sache noch zu erweitern um eine <br>


Routine, die zuerst aus .aex die bereits vorhandene Kopie des<br>


Abschnitts wieder l&ouml;scht, bevor der aktuelle Stand hineinkopiert wird.<br>


Denn sonst bleiben Eintr&auml;ge stehen, die nicht mehr stimmen. Sch&ouml;n<br>


w&auml;r's, man k&ouml;nnte das auch mit acon machen - das geht aber nicht,<br>


weil acon den Modus f3 von qrix nicht kennt. Man m&uuml;&szlig;te f1 nehmen<br>


und die Prozedur etwas umst&auml;ndlicher umschreiben.)<br>


<br>


Es folgt nun der FLEX&nbsp; <span style="font-weight: bold;">trix.flx</span>, der den Transfer des Expansions-<br>


registers aus .adx nach .aex leistet. Man startet ihn in a99 mit<br>


dem Aufruf&nbsp; X trix.</small><br>


<br>


---------------------------------------------------<br>


<br>


<small>&nbsp; trix.flx : "transfer index" : SR-Register von .adx in .aex kopieren<br>


&nbsp; 2014-09-12<br>


&nbsp; Verallgemeinerbar: Registerabschnitt in einen anderen Index kopieren<br>


&nbsp; (wozu auch immer)<br>


<br>


&nbsp; SR-Eintraege aus .adx in Datei trix.dat schreiben<br>


<br>


open x trix.dat<br>


&nbsp; Modus 3 fuer qrix einstellen und Separator --- f&uuml;r Von/Bis-Suche<br>


qri f3<br>


qri d---<br>


&nbsp; Den Abschnitt in die Datei schreiben<br>


Qri |: |0---|z<br>


close x<br>


<br>


&nbsp; Datei trix.dat dann zeilenweise einlesen und in .aex einfuegen.<br>


&nbsp; Die Dateizeilen haben die Form&nbsp; ih||iu, wobei ih die Nummer des<br>


&nbsp; Datensatzes ist, in dem "Schiller" steht, iu diejenige eines<br>


&nbsp; Untersatzes, in dem "R&auml;uber" steht.<br>


<br>


open trix.dat<br>


&nbsp; zur Sicherheit<br>


set tbl lock<br>


<br>


:srloop<br>


&nbsp; Zeile lesen<br>


get<br>


&nbsp; Dateiende<br>


if cancel jump ende<br>


<br>


ins $q<br>


<br>


&nbsp; Zeile zerlegen :&nbsp; aus&nbsp; ih||iu&nbsp; soll&nbsp; ih ~e:|iu&nbsp; werden<br>


<br>


var $q (e"|")<br>


ins $n<br>


var $q (b"|")<br>


ins $q<br>


<br>


&nbsp; Zeile erstellen und einfuegen<br>


var $n " ~e:" $q<br>


ixadd<br>


&nbsp; Schleife<br>


jump srloop<br>


<br>


:ende<br>


&nbsp; flush index<br>


close index<br>


set tbl fre<br>


<br>


close<br>


del trix.dat<br>


mes Done<br>


</small><br>


<font face="Verdana">
<a name="78"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 78: <big style="font-family: Verdana;"><span style="font-family: monospace;">Variable Variablen</span></big></span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;"></span></small><small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp; </span><big style="font-family: Verdana;"><span style="font-weight: bold;">mit vorher unbekannten Namen, die sich aus Datens&auml;tzen ergeben</span></big></small><br>



<small><span style="font-family: Verdana;"><br>



</span></small><span style="font-family: Verdana;"><small><span style="font-style: italic;">Aufgabe</span>: Schnell mal eben einen Registerabschnitt kopieren von einem<br>


Index (z.B. .adx) in einen anderen (z.B. .aex). </small></span><span style="font-family: Verdana;">&nbsp;</span><small><span style="font-family: Verdana;"><span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2015-04-21<br>
<br>
</span><span style="font-family: Verdana;">Manchmal braucht man eine unbestimmte Anzahl von Variablen, deren Namen</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">man nicht im Vorhinein festlegen kann, sondern die Namen selber stehen</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">wiederum in anderen Variablen. Dann sprechen wir von "variablen</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Variablen", kurz "var.Var."</span><br style="font-family: Verdana;">
<br style="font-family: Verdana;">
<span style="font-family: Verdana;">Beispiel 1: Man will ORDER-Bestells&auml;tze durcharbeiten und dabei </span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">zu einem bestimmten Auftraggeber die Summen errechnen, die er</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">von den einzelnen Kontingenten ausgegeben hat. Man wei&szlig; nicht,</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">welche und wieviele Kontingente es sind, auch das soll die Auswertung</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">dann erst ergeben, und eine Liste nach Kontingenten geordnet</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">soll entstehen. [Realisiert in dem FLEX o-besta.flx des ORDER-Systems.]</span><br style="font-family: Verdana;">
<br style="font-family: Verdana;">
<span style="font-family: Verdana;">Beispiel 2: Die momentan ausgeliehenen Exemplare sollen nach Signatur-</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">gruppen geordnet und gezaehlt werden. (Die Signaturgruppe ergibt sich </span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">beim Standard aus dem Unterfeld #9DG$s.)</span><br style="font-family: Verdana;">
<br style="font-family: Verdana;">
<span style="font-family: Verdana;">Dabei sind insgesamt vier Probleme zu loesen.</span><br style="font-family: Verdana;">
<br style="font-family: Verdana;">
<span style="font-family: Verdana;">1. Eine var.Var. erzeugen</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Sagen wir, in #una steht jeweils ein Variablenname, z.B. eine</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Signaturgruppe, ein Lieferanten- oder Kontingentcode o.a.</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Wenn nun in #una z.B.&nbsp; xy&nbsp; steht, und in #uwe der Wert 101, </span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">dann soll $QVxy den Inhalt 101 kriegen. Wie macht man das? So:</span><br style="font-family: Verdana;">
<span style="font-family: monospace;"><br>
var "$QV" #una "=" #uwe<br>
ins <br>
<br>
</span><span style="font-family: Verdana;">ACHTUNG: Es ist hier $QVxy gewaehlt statt $xy, weil es damit moeglich</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">wird, diese Variablen aus allen anderen $-Variablen herauszufischen. </span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Statt QV ein anderes Praefix nehmen, wenn man QV schon anderweitig</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">braucht! (Vielleicht VV?)</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Mehr als zwei Buchstaben sind auch moeglich. Statt grossen Buchstaben </span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">gehen auch kleine, wenn die Auswertung im selben FLEX passiert.</span><br style="font-family: Verdana;">
<br style="font-family: Verdana;">
<br style="font-family: Verdana;">
<span style="font-family: Verdana;">2. Mit einer var.Var. rechnen</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">In $QVxy sei irgendein Wert, und auf den wollen wir die Zahl</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">in #uza addieren, die Summe dann wieder in $QVxy speichern:</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Der Name "xy" soll jetzt mal in $v stehen.</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">(Wenn $QVxy noch nicht belegt ist, hat sie den Wert 0)</span><br style="font-family: Verdana;">
<span style="font-family: monospace;"><br>
var "$QV" $v " +#uza"<br>
//&nbsp; in iV steht jetzt&nbsp; $QVxy +#uza, das wird so ausgerechnet:<br>
eval<br>
// und in $summe kopiert<br>
ins $summe<br>
// diese Summe dann wieder der Variablen $QVxy zugewiesen<br>
var "$QV" $v "=" $summe<br>
ins<br>
<br>
</span><span style="font-family: Verdana;">Wenn man nur zaehlen will (Problem 2), wie oft der Wert "xy"</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">vorkommt, der in $v steht, dann die erste Zeile so:&nbsp; </span><span style="font-family: monospace;"><br>
var "$QV" $v " +1"<br>
&nbsp;<br>
<br>
</span><span style="font-family: Verdana;">3. Die erzeugten var.Var. herausfischen, ordnen und anzeigen</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Am Ende kommt der Moment, wo man alle so entstandenen&nbsp; $QVxy&nbsp; sortieren</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">und ausgeben will.</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Zuerst muessen wir aus dem "gro&szlig;en" Variablenspeicher alle extrahieren,</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">deren Namen mit&nbsp; $QV anfangen. Schwierig, denn die stehen im Variablen-</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">speicher leider nicht schoen geordnet! Aber so geht's:</span><br style="font-family: Verdana;">
<br style="font-family: Verdana;">
<span style="font-family: monospace;">// In $X soll die Liste der Werte landen, also erst leermachen:<br>
var ""<br>
ins $X<br>
// die erste der grossen Var. nehmen (koennte z.B. $A abc sein)<br>
first $1<br>
ins $X<br>
// In $X steht jetzt z.B.&nbsp; $A abc<br>
<br>
// Schleife zur Sammlung der $QV-Variablen<br>
:floop<br>
// naechste Var.<br>
next $1<br>
// Ende?<br>
if no jump flend<br>
ins $v<br>
// Nur wenn Name mit $QV beginnt, dann an $X anhaengen<br>
if "$QV" var $X n $v;ins $X<br>
// In $x stehen also die Var. mit Zeilentrennungszeichen<br>
//&nbsp;&nbsp;&nbsp;&nbsp; denn&nbsp; n = Codes 13 10 = ^M^J<br>
jump floop<br>
<br>
// $X enthaelt jetzt die komplette Liste<br>
:flend<br>
// Erste Zeile von $X wegnehmen, wenn sie NICHT mit $QV beginnt<br>
var $X<br>
if not "$QV" var $X (b"^M^J");ins $X<br>
// Jetzt stehen in $X genau alle $QV-Variablen: jeweils $QVxy wert<br>
var $X<br>
// Das Praefix $QV wegnehmen<br>
ins _$QV__<br>
// und aufsteigend nach Namen ordnen<br>
sort a0<br>
ins $X<br>
// Liste ist fertig, anzeigen<br>
sho IV<br>
<br>
</span><span style="font-family: Verdana;">Nun stehen in $X die Variablen samt Namen, also&nbsp; $QVxy wert, getrennt</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">durch "^M^J" - das ist bequem fuer die Anzeige mit show IV.</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Mit "sho IV" sieht man die Liste in der Anzeige und kann sie da</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">herauskopieren. Oder man macht sonstwas anderes aus $X.</span><br style="font-family: Verdana;">
<br style="font-family: Verdana;">
<br style="font-family: Verdana;">
<span style="font-family: Verdana;">4. Die erzeugten var.Var. alle loeschen</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">FLEXperten werden sofort fragen: Wenn wir dann also eine Anzahl von</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">Variablen haben, deren Namen mit $QV anfangen, aber wir wissen die</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">genauen Namen nicht und auch nicht die Anzahl, wie k&ouml;nnen wir sie</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">alle zusammen loswerden? Damit sie bei einem weiteren Durchlauf mit</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">anderen Daten nicht stoeren!</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">[Hinweis: Falls man die $QV-Var. nach Ablauf des FLEXes nicht mehr</span><br style="font-family: Verdana;">
<span style="font-family: Verdana;">braucht, $qV statt $QV nehmen, dann verschwinden sie automatisch.]</span><br style="font-family: Verdana;">
<br style="font-family: Verdana;">
<span style="font-family: Verdana;">So geht's: </span><br style="font-family: Verdana;">
<span style="font-family: monospace;"><br>
// UP zum Loeschen aller mit $QV beginnenden Variablen<br>
:$QVdel<br>
var ""<br>
ins $qall<br>
first $1<br>
var (e" ")<br>
<br>
ins $qall<br>
// Schleife zur Sammlung der $QV-Variablen in $qall<br>
:qloop<br>
// naechste Var.<br>
next $1<br>
// Ende?<br>
if no jump qlend<br>
var (e" ")<br>
ins $vq<br>
<br>
// Nur wenn Name mit $QV beginnt, dann an $qall anhaengen<br>
if "$QV" var $qall "//" $vq;ins $qall<br>
// In $qall stehen also die Var., mit // getrennt<br>
jump qloop<br>
<br>
:qlend<br>
var $qall<br>
sho IV<br>
<br>
// Erste Zeile von $qall wegnehmen, wenn sie NICHT mit $QV beginnt<br>
var $qall<br>
if not "$QV" var $qall (b"//");if "" jump QVend;ins $qall<br>
if not $qall jump QVend<br>
// Jetzt stehen in $qall genau alle $QV-Variablen: jeweils $QVxy wert<br>
// Eine leere Zuweisung uf jede Variable ausfuehren, z.B. $QVabc=\ins<br>
var $qall (e"//")<br>
var +"="<br>
ins<br>
<br>
var $qall (b"//")<br>
if "" jump QVend<br>
ins $qall<br>
jump qlend <br>
<br>
:QVend<br>
return<br>
<br>
</span></span></small><br>
<font face="Verdana">
<a name="79"></a><br>



</font><font face="Verdana"><span style="color: rgb(0, 102, 0); font-weight: bold;">Trick 79: <big style="font-family: Verdana;"><span style="font-family: monospace;">Gezielter Rauswurf von Mehrfachfeldern</span></big></span></font> &nbsp;<span style="font-family: Verdana;"> </span><br>



<small><span style="font-family: Verdana;"></span></small><small><span style="font-family: Verdana;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;
&nbsp;&nbsp;&nbsp;</span><big style="font-family: Verdana;"><span style="font-weight: bold;">L&uuml;ckenbeseitigung bei HFM-Feldern</span></big></small><br>



<small><span style="font-family: Verdana;"><br>



</span></small><span style="font-family: Verdana;"><small><span style="font-style: italic;">Aufgabe: </span>Manchmal hat man einen Haufen Mehrfachfelder, von denen man einige<br>
gel&ouml;scht hat oder l&ouml;schen will, und man h&auml;tte die &uuml;briggebliebenen<br>
danach gerne wieder l&uuml;ckenlos angeordnet. <br>
Wenn z.B. #313 entfallen ist, soll #314, falls noch da, mitsamt aller nachfolgenden <br>
Felder so umbenannt werden, da&szlig; aus #314 dann #313 wird, aus dem n&auml;chsten #314 <br>
usw. Besonders bei der HFM-Technik kann's passieren, da&szlig; man viele<br>
unerw&uuml;nschte Felder und L&uuml;cken beseitigen will, ordentlich wie man ist.<br>
Ob das wohl geht? Ohne Tricks nicht, das ist klar. <br>
Und am besten soll's auch auf eine Erg.Menge anwendbar sein, aber<br>
das ist nat&uuml;rlich trickfrei m&ouml;glich.<br>
<br>
Einen kompletten FLEX f&uuml;r die nachfolgend beschriebene Aufgabe kann<br>
man sich abholen mit<br>
</small></span><small><span style="font-family: monospace;">&nbsp; X getfile mfremove.flx</span><br style="font-family: monospace;">
</small><span style="font-family: Verdana;"><small><br>
Nehmen wir mal als konkrete Aufgabe, aus einer Sequenz von #90er-<br>
Kategorien alle die rauszunehmen, in denen das Standortsigel A9 steht,<br>
also ein Unterfeld $L mit Inhalt A9. Die entstehenden L&uuml;cken (und auch<br>
die evtl. bereits vorhandenen L&uuml;cken) sollen geschlossen werden durch<br>
Zusammenschiebung der &uuml;briggebliebenen Felder.<br>
F&uuml;r diese Ausgabe sind 4 Tricks n&ouml;tig:<br>
<br>
1. Die #90er alle in eine Variable&nbsp; $vorher&nbsp; kopieren<br>
<br>
2. Alle #90er aus dem Satz l&ouml;schen<br>
<br>
3. Die Variable $vorher durcharbeiten: Wenn $LA9 nicht vorkommt,<br>
&nbsp;&nbsp; dann den Inhalt an eine Hilfsvariable&nbsp; $nachher&nbsp; anh&auml;ngen<br>
&nbsp;&nbsp; Dabei das Mehrfachzeichen ersetzen durch '~'<br>
<br>
4. Den Inhalt von $nachher in einem Schwung in den Satz einkopieren,<br>
&nbsp;&nbsp; wobei aus dem '~' das n&auml;chste Mehrfachzeichen wird, gem&auml;&szlig; der<br>
&nbsp;&nbsp; Angabe $M in der CFG bzw. in HFM-Weise, also .1, .2, .3, ...<br>
<br>
Die Tricks sehen, der Reihe nach, so aus:<br>
<br>
0. Zuerst ein Hilfsfeld, sagen wir #usi, belegen mit der Zeichenfolge,<br>
&nbsp;&nbsp; nach der zu suchen ist: Im Beispiel k&ouml;nnte man setzen (oder eine<br>
&nbsp;&nbsp; Abfrage vorschalten):<br>
</small></span><small><span style="font-family: monospace;">#usi LA9 </span><br style="font-family: monospace;">
</small><span style="font-family: Verdana;"><small>&nbsp;&nbsp; Und wenn man's auf Ergebnismengen anwenden will:<br>
</small></span><small><span style="font-family: monospace;">first</span><br style="font-family: monospace;">
<span style="font-family: monospace;">:schleife</span><br style="font-family: monospace;">
</small><span style="font-family: Verdana;"><small><br>
1. Die #90er alle in eine Variable&nbsp; $vorher&nbsp; kopieren<br>
&nbsp;&nbsp; Hierf&uuml;r k&ouml;nnte man an Trick 46 denken, es geht aber inzwischen<br>
&nbsp;&nbsp; auch einfacher (wo steht's?&nbsp; h xcstring&nbsp; unter 3.):<br>
</small></span><small><span style="font-family: monospace;">var #90+</span><br style="font-family: monospace;">
<span style="font-family: monospace;">ins $vorher</span><br style="font-family: monospace;">
</small><span style="font-family: Verdana;"><small>&nbsp; dasselbe auch in eine Hilfsvar. $v<br>
</small></span><small><span style="font-family: monospace;">ins $v</span><br style="font-family: monospace;">
</small><span style="font-family: Verdana;"><small>&nbsp;&nbsp; In $vorher und in $v haben wir dann alle #90, getrennt durch den<br>
&nbsp;&nbsp; Code 10 (als ^J zu schreiben)&nbsp; [s. h xcstring unter B. ]<br>
&nbsp;&nbsp; Sodann wird $v nur f&uuml;r 2. gebraucht:<br>
&nbsp;<br>
2. Alle #90er raus aus dem Satz<br>
&nbsp;&nbsp; Eine Schleife: Aus $v werden die Feldnummern der Reihe nach<br>
&nbsp;&nbsp; entnommen und das Feld jeweils gel&ouml;scht.<br>
</small></span><small><span style="font-family: monospace;">:loesch</span><br style="font-family: monospace;">
<span style="font-family: monospace;">var $v (0,4)&nbsp;&nbsp;&nbsp;&nbsp; bzw.&nbsp; (0,5), wenn das Schema 3stellig ist ...)</span><br style="font-family: monospace;">
<span style="font-family: monospace;">ins&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
in iV steht&nbsp; "#90x"&nbsp; mit dem jeweiligen x,</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
und sonst nix, daher bewirkt "ins" die L&ouml;schung</span><br style="font-family: monospace;">
<span style="font-family: monospace;">var $v (b"^J")&nbsp;&nbsp; Das erste Feld von $v abschneiden</span><br style="font-family: monospace;">
<span style="font-family: monospace;">ins $v</span><br style="font-family: monospace;">
<span style="font-family: monospace;">if $v jump loesch&nbsp; </span>Noch mehr? Dann dasselbe nochmal<span style="font-family: monospace;">&nbsp;&nbsp;&nbsp; </span><br style="font-family: monospace;">
</small><span style="font-family: Verdana;"><small><br>
3. Die Variable&nbsp; $vorher&nbsp; durcharbeiten, zutreffende Felder raus<br>
&nbsp;&nbsp; Das ist der umfangreichste Teil.<br>
&nbsp;&nbsp; <br>
</small></span><small><span style="font-family: monospace;">:loop</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp; ersten Teil von $vorher nehmen</span><br style="font-family: monospace;">
<span style="font-family: monospace;">var $vorher (e"^J")</span><br style="font-family: monospace;">
<span style="font-family: monospace;">ins $s</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp; schauen, ob #usi drin vorkommt</span><br style="font-family: monospace;">
<span style="font-family: monospace;">var $s (b"#usi")</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp; sonst ist iV leer, dann naechsten Teil</span><br style="font-family: monospace;">
<span style="font-family: monospace;">if "" jump nxt</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp; kommt vor, dann den Inhalt verwenden, beginnt beim Zeichen 4</span><br style="font-family: monospace;">
<span style="font-family: monospace;">var $s (4,0)</span><br style="font-family: monospace;">
<span style="font-family: monospace;">ins $s</span><br style="font-family: monospace;">
<br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp; #90~ davor setzen, dann entsteht eine korrekte Reihenfolge der #90x</span><br style="font-family: monospace;">
<span style="font-family: monospace;">var "#90~" $s</span><br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp; an $nachher anhaengen, mit 13 10 getrennt</span><br style="font-family: monospace;">
<span style="font-family: monospace;">ins $s</span><br style="font-family: monospace;">
<span style="font-family: monospace;">var $nachher 13 10 $s</span><br style="font-family: monospace;">
<span style="font-family: monospace;">ins $nachher</span><br style="font-family: monospace;">
<br style="font-family: monospace;">
<span style="font-family: monospace;">&nbsp; naechste #90, wenn noch eine da ist</span><br style="font-family: monospace;">
<span style="font-family: monospace;">:nxt</span><br style="font-family: monospace;">
<span style="font-family: monospace;">var $vorher (b"^J")</span><br style="font-family: monospace;">
<span style="font-family: monospace;">ins $vorher</span><br style="font-family: monospace;">
<span style="font-family: monospace;">if $vorher jump loop</span><br style="font-family: monospace;">
</small><span style="font-family: Verdana;"><small><br>
4. Den Inhalt von Variable $nachher in den Satz kopieren<br>
&nbsp;&nbsp; Die neuen #90er sind jetzt in&nbsp; $nachher, getrennt durch 13 10.<br>
&nbsp;&nbsp; Das ist ganz einfach.<br>
&nbsp;&nbsp; ($nachher beginnt aber mit 13 10, das muss weg:)<br>
</small></span><small><span style="font-family: monospace;">var $nachher (f"^J^M")</span><br style="font-family: monospace;">
</small><span style="font-family: Verdana;"><small>&nbsp; Dann das Ganze einfuegen in den Satz<br>
</small></span><small><span style="font-family: monospace;">ins</span></small><span style="font-family: Verdana;"><small><br>
<br>
5. Und wenn man's auf Erg.Mengen anwenden will:<br>
<br>
</small></span><small><span style="font-family: monospace;">var ""</span><br style="font-family: monospace;">
<span style="font-family: monospace;">ins $nachher</span><br style="font-family: monospace;">
<span style="font-family: monospace;">next</span><br style="font-family: monospace;">
<span style="font-family: monospace;">if yes jump schleife</span><br style="font-family: monospace;">
<br style="font-family: monospace;">
<span style="font-family: monospace;">message Fertig!</span><span style="font-style: italic;"><br style="font-family: monospace;">
</span></small><span style="font-family: Verdana;"><small><span style="font-style: italic;">&nbsp;</span><br>
</small></span><br>


<br>



</div>



<small><span style="font-family: Verdana;"></span></small>
<hr style="width: 100%; height: 2px; font-family: Verdana;">
<div style="text-align: right;"><span style="font-family: Verdana;">2015-08-31</span><br>



</div>



<font face="Verdana">
</font>
</body>
</html>
