{\rtf1\ansi\deff0\deflang1031{\fonttbl{\f0\fscript\fprq2 Comic Sans MS;}{\f1\fswiss\fprq2 MS Sans Serif;}{\f2\froman Times New Roman;}{\f3\fswiss\fprq2 Arial;}{\f4\fswiss\fprq2\fcharset0 Arial;}{\f5\froman\fprq2 Times New Roman;}{\f6\fmodern\fprq1 Courier New;}{\f7\froman\fprq2\fcharset0 Times New Roman;}{\f8\froman\fprq2 allegro New Roman;}{\f9\fnil\fcharset2 Symbol;}}
{\colortbl ;\red255\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue0;}
\viewkind4\uc1\pard\qc\cf1\b\i\f0\fs28 allegro\i0  : Help Concept\cf0\b0\f1\fs24 
\par \pard 
\par \pard\qr\f2 `\cf2 Help for this database` 
\par \pard\cf0\b\f3\fs22 There are two types of help files: 
\par \pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-360\li360  RTF document file (extension .RTF) 
\par {\pntext\f9\'B7\tab} ASCII plain text files (no prescribed extension). 
\par \pard\f4 Thera are many more \f3 RTF \f4 files\f3 : the so-called "Flip" technique makes them very versatile. 
\par All of these files are openly accessible and may be edited or expanded by the user. 
\par Normally, help texts reside in the HELP subdirectory (see \b0\fs16 `\cf2\ul\b\fs22 FLISTENG.TXT\cf0\ulnone\b0\fs16 `\b\fs22 ). 
\par There are help files for various areas and functions: \f5 
\par \cf2\f3\fs28 
\par \tab A. \cf0\b0\f5\fs16 `\cf2\ul\b\f3\fs22 Help for the main functions\cf0\ulnone\b0\f5\fs16 `\f3\fs28 
\par \cf2\b\tab B. \cf0\b0\f5\fs16 `\cf2\ul\b\f3\fs22 Help for the sub-windows\cf0\ulnone\b0\f5\fs16 `\f3\fs28 
\par \cf2\b\tab C. \cf0\b0\f5\fs16 `\cf2\ul\b\f3\fs22 Editor help\cf0\ulnone\b0\f5\fs16 `\f3\fs28 
\par \cf2\b\tab D. \cf0\b0\f5\fs16 `\cf2\ul\b\f3\fs22 Help for the indexes\cf0\ulnone\b0\f5\fs16 `\f3\fs28 
\par \cf2\b\tab E. \cf0\b0\f5\fs16 `\cf2\ul\b\f3\fs22 User-supplied RTF help documents\cf0\ulnone\b0\f5\fs16 `\f3\fs28 
\par \cf2\b\tab F. \cf0\b0\f5\fs16 `\cf2\ul\b\f3\fs22 Help texts stored in records\cf0\ulnone\b0\f2\fs24 `\f3\fs28 
\par \f6\fs20 
\par \i\f5\fs22 Important: \i0 There is a header file  HELPHEAD.RTF . Without it, the ASCII help files cannot be displayed in the display area. The program looks for this file at first on the data path, then on the program directory.This means there may be data\f7 base\f5 -specific versions of it - \f7 these then\f5  have priority. This file, among other things, supplies the fonts \f7 to\f5   \f7 use in\f5  display\f7 ing\f5  ASCII files.\fs18 
\par \fs22 
\par Generally, help files may be located in several places:\f6\fs18 
\par 
\par \i Location of Help files:\i0  Local directory, DbDir, ProgDir\\help, ProgDir 
\par \f5\fs20 Directories are searched in this order. This means user-specific versions are preferred even over data-specific versions. 
\par \f6\fs18 
\par \i Recommendation:\i0  \b User-specific\b0  help files: Local directory of the user 
\par             \b Data specific\b0  help files: Database path (DbDir) 
\par             General files \b for all databases\b0 : Program directory (ProgDir) 
\par             \b Original\b0  File versions: ProgDir\\Help 
\par 
\par \cf3\b\f5\fs24 A. Help for the main functions\cf0\f6\fs20 
\par \pard\li720\b0\f5 These come up automatically, depending on the situation, on pressing  F1 or the [Help] button in dialogs. 
\par The followinhg file names belong to this group, all files being of type .RTF. A language code may be added to the name. These files are made available with ENG and GER language tags. For example, there is BUTTNGER:RTF and BUTTNENG.RTFMore on  `\cf2\ul\b RTF files\cf0\ulnone\b0 ` see under E. 
\par \pard\f6\fs18 
\par \pard\li720 `\cf2\ul\b\fs20 START\cf0\ulnone\b0\fs18 `: \f5\fs20 Help file is displayed before anything else happens 
\par \f6\fs18 `\cf2\ul\b\fs20 GENRL\cf0\ulnone\b0\fs18 `: \f5\fs20 Default for database-help (important functions)\f6\fs18 
\par `\cf2\ul\b\fs20 DOKU\cf0\ulnone\b0\fs18 ` : \f5\fs20 Overview of functions and documentation\f6\fs18 
\par `\cf2\ul\b\fs20 BUTTN\cf0\ulnone\b0\fs18 `: \f5\fs20 Help for buttons and other controls\f6\fs18 
\par `\cf2\ul\b\fs20 EXPRT\cf0\ulnone\b0\fs18 `: \f5\fs20 Export menu\f6\fs18 
\par `\cf2\ul\b\fs20 COMMD\cf0\ulnone\b0\fs18 `: \f5\fs20 for F1 if the focus is in the command line\f6\fs18 
\par `\cf2\ul\b\fs20 FIND\cf0\ulnone\b0\fs18 ` : \f5\fs20 For the Find button\f6\fs18 
\par `\cf2\ul\b\fs20 FLEX\cf0\ulnone\b0\fs18 ` : \f5\fs20 FLEX documentation (macro language)\f6\fs18 
\par `\cf2\ul\b\fs20 KONFG\cf0\ulnone\b0\fs18 `: \f5\fs20 When the CFG field list is on display in the listbox\f6\fs18 
\par `\cf2\ul\b\fs20 MENU\cf0\ulnone\b0\fs18 ` : \f5\fs20 Help for the menus\f6\fs18 
\par `\cf2\ul\b\fs20 PRMPT\cf0\ulnone\b0\fs18 `: \f5\fs20 when the prompt list is displayed in the listbox\f6\fs18 
\par `\cf2\ul\b\fs20 RECRD\cf0\ulnone\b0\fs18 `: \f5\fs20 when the fields of the current record are in the listbox\f6\fs18 
\par `\cf2\ul\b\fs20 RESRV\cf0\ulnone\b0\fs18 `: \f5\fs20 when the background store is in the listbox\f6\fs18 
\par `\cf2\ul\b\fs20 RESLT\cf0\ulnone\b0\fs18 `: \f5\fs20 Help for result set operations\f6\fs18 
\par `\cf2\ul\b\fs20 SPCHR\cf0\ulnone\b0\fs18 `: \f5 "Special Characters"\fs20  Help for input  (Alt+m in input field)\f6\fs18 
\par `\cf2\ul\b\fs20 WRITE\cf0\ulnone\b0\fs18 `: \f5\fs20 when F1 is pressed in input field  (inputting/editing of fields)\f6\fs18 
\par \pard 
\par \cf4\f5\fs20 Every  RTF help file can have embedded flips. 
\par Here's a part of  \f6 DOKUENG.RTF\f5  to show what flips look like: 
\par \cf0\f6\fs18 
\par \pard\tx1846\b\i\f1\fs24 General\b0\i0\f8\fs20\tab `\cf3\ul\b\f1\fs18 What is \i allegro\i0 `?\cf0\ulnone\b0   - `\cf3\ul\b Elements of the Program\cf0\ulnone\b0 ` 
\par \fs16  \f8\fs18 
\par \tab `\cf3\ul\b\f1 Concepts\cf0\ulnone\b0 ` - `\cf3\ul\b Background\cf0\ulnone\b0 ` - `\cf3\ul\b QUICK\cf0\ulnone\b0 ` 
\par \pard\cf4\f6 
\par   (and at the bottom of the file DOKUENG.RTF there are these lines: 
\par 
\par \cf0\fs20  ?What is allegro=h alleg 
\par  ?Elements of the Program=h elem 
\par  ?Concepts=h ac0-0 
\par  ?Background=h backg 
\par  ?QUICK=x View help\\\\quickeng.vw 
\par \cf4\fs18 
\par \f5 Internally, the RTF file looks like this:\f6 
\par \cf0\fs20\\par ?What is allegro=h alleg 
\par \\par ?Elements of the Program=h elem 
\par \\par ?Concepts=h ac0-0 
\par \\par ?Background=h backg 
\par \\par ?QUICK=x View help\\\\quickeng.vw 
\par \cf4\fs18 
\par \f5\fs20 This format is produced automatically when RTF text is saved by WinWord or Wordpad. 
\par If a flip doesn't react to the mouse click, check the file in an ASCII text editor, preferably the X editor. The sequence "\f6\\par\f5  " has to be at the beginning of a new line, with no other RTF control commands. 
\par \f6\fs18 
\par \f5\fs20 The words "What is allegro" etc. mostly appear underlined and in a color; but the really important thing is the "grave accent" right and left of the word. The = sign separates the flip text from the command to be executed when the flip is clicked on:   "h alleg" will get the help file \f6 alleg.rtf\f5  (or \f6 allegeng.rtf\f5 ), to display it. These flip lines are copied, upon reading the rtf file, to the user variables #uYi/#uZi  with character codes i > 128. 
\par Following the  ?  has to be the exact same character sequence as between the delimiters (grave accents) or enclosed by [...] in the text. 
\par Following the  =  there may be one of the flip commands or a FLEX command. 
\par for example:\f6\fs18    ...=X backup 
\par \f5\fs20 which means: execute the flex  BACKUP.FLX  when the flip is clicked on. 
\par \f6\fs18 
\par \cf3\b\f5\fs24 B. Help for sub-windows\cf4\f6\fs20 
\par \b0\i\f5 Special case!\i0  The help texts for the subwindows have names with no extensions, beginning HE or HA and ending  GER or ENG (German and English versions). Between these, the file name itself always consists of 3 letters. 
\par If a halp file  HExxxENG cannot be found, the program will look for HExxx, i.e. the name without the language code. 
\par (HA files are for alcarta, HE for a99) 
\par When still not found,   HExxxGER.RTF will be searched for. 
\par 
\par The following files are supplied for the subwindows: 
\par They are all ASCII files with no suffix. The  3letter name begins with a '_'. 
\par These texts all appear when  F1 is pressed in the subwindow: 
\par 
\par   for both programs: ( a99 will also look for HA if HE is not found)\f6\fs18 
\par       .._IX   Index window 
\par       .._BR   Brief Display 
\par       .._VW   View list display 
\par       .._CH   Search command menu 
\par \f5\fs20   only in A99 (HE...) 
\par \f6\fs18       HE_AD   Form Editor 
\par       HE_GR   Global replacements 
\par 
\par \f5\fs20 These Texts appear in a grey message window, not in the display field. The message window needs an [OK] before anything else goes on. 
\par \f6\fs18 
\par 
\par \cf3\b\f5\fs24 C. Editor help\cf4\f6\fs20 
\par \b0\f5 File names with no extensions, beginning with an H. 
\par Any existing editing help files for DOS can be re-used (e.g., h20eng or h2eng or h20 or h2). They will come up in the display field (when the cursor is in the write field) or in a message box (when an input form is being used). If no suitable  H file can be found for the field being edited, WRITEENG.RTF is shown instead. 
\par These texts must be plain ASCII, not RTF. We recommend the `\cf2\ul X-Editor\cf4\ulnone ` for these files, for Notepad uses ANSI codes. 
\par If F1 is pressed in the write field or in a form, this is what the program does: it checks which field #ABC is just being worked on, then it looks for HABCeng, then HABC, and if this doesn't exist either,  HAB and then HA. This means one can construct a very detailed help system with a text for every field, or just one text for every field group, or a combination of these.\f6\fs18 
\par \cf0 
\par 
\par \cf3\b\f5\fs24 D. Help for the indexes\cf4\f6\fs20 
\par \b0\f5 For each index there can be a help file HA_InENG for \i alcarta\i0\f7  and a HE_InENG f\'fcr \i\f5 a99 \i0 anlegen (n=1,2,3...). These are ASCII files as well, not RTF. With HE... missing, \i a99\i0  will use the HA text. There may thus be different help texts for both programs. 
\par As a minimum, create files HA_I1 ... HA_I0 for your database to have one help file for every index. 
\par \f6\fs18 
\par 
\par \cf3\b\f5\fs24 E. User-supplied RTF help documents\cf4\f6\fs20 
\par \b0\f5 The most powerful option. The text you are just reading, HELPENG.RTF, is of this type. 
\par Type A files are a subset of these. 
\par The file name is arbitrary. \i Recommended: \i0  up to  5 letters, then GER or ENG,  extension .RTF. \i Example:\i0   \f6 flexGER.RTF\f5 . 
\par In a monolingual environment, the language code can be omitted. The program always prefers the language specific text, which means it looks for the name plus language code first, like \i name\i0 ENG.RTF, and only after that, \i name\i0 .RTF. (Any help text may thus be created in more than one language.) 
\par The Microsoft program \b WordPad\b0  may be used to edit RTF files. Important: graphics and tables are not possible. 
\par But files can be written and edited directly in the display field, and ASCII files as well. 
\par In this case, save a file using the menu command "File | Save as ...". 
\par 
\par Important case:  \i dbn\i0 ENG.RTF  for the  \i dbn\i0  database, the database-specific main help text. 
\par \i Location:\i0  DbDir 
\par Example: for demo database see  CATGER.RTF. It appears when pressing the question mark button (lower left) 
\par \pard\li709  The FLEX command  \cf0\b\f6 help !\b0\f5  \cf4  evokes this file\cf0 
\par \pard\cf4 Recommentation: Create this file for your own databased using a copy of CATGER.RTF and link other help files into it by the flip method. 
\par Except for graphics and tables, most any feature of WordPad can be applied. Flips are constructed as already described under A. 
\par Flip texts must be delimited by accent graves, Code 96 (not displayable as such!), i.e., this code has to be placed before and behind the word or string that is supposed to activate the flip command. The exactly same text has to appear on a line beginning ?  (these lines are not displayed). 
\par \i Tip: \i0 
\par \cf0\b\f6 help ?\b0\f5  : evokes the most recently used help file (This function is also on the "View" menu).\cf4 
\par \i Special funktion: \i0 If an  RTF line begins  \f6\\par _i \f5  , with any digit i , the display will end at this point if the user has no access right of at least level i  (see access command in the INI-file). This way, help text can be concealed from "lower-class" users. 
\par 
\par If a help file call is to be implemented into a record display, the flip has to be constructed like this: (see example in D-WRTF.APR) 
\par \f6\fs18 
\par #xyz p"Information for this record!" e"!" =Y~ 
\par #xyz p"h \i name\i0 !" e"!" =Z~ 
\par #t\{ 160 t97 t74 "Information for this record" t76 t96 160 \} 
\par 
\par \f5\fs20 The text will appear in blue (text element 74) and underlined (text element 97), 160 is the invisible delimiter). The \i name\i0  must must be given with neither language code nor .RTF, e.g. 
\par \f6 ... p"h help!" e"!" ...\f5    for  \f6 helpENG.RTF\f5 
\par In this case,  \f6 helpGER.RTF\f5  will be shown when GER is the current language! 
\par 
\par For delimiters, one may use [ ] or the space-like code 160. (In WinWord, this code is produced by   Shift+Ctrl+spacebar). In the RTF files, there is a  `  instead. The flip text has to be exactly between two such marks. 
\par From inside a FLEX, help files can be called using the \b\f6 help\b0\f5  command. 
\par \f6\fs18 
\par \cf3\b\f5\fs20 Embedding fields and user variables into help files\cf4 
\par \b0 In any RTF help text there can be embedded variables  \b %%i\b0   , where   \b i\b0  = 0...9.  If  \b #uVi\b0   exists at the moment of displaying the text, its content will be inserted for %%i . Record content or other material can thus appear as part of a help text. 
\par Just as well, field texts \b\f6 %%\b0\f5  \b\f6 #nnn\b0\f5  or background variables \b\f6 %%\b0\f5  \b\f6 #uxy\b0\f5  may be directly embedded (with no blank between %% and #), to display the field \f6 #nnn\f5  or the user variable  \f6 #uxy\f5  directly as if being part of the text. 
\par Example: to embed the current title field #20 into the file \f6 xyz.rtf\f5  ,  but without the title addition (what comes after " : " in #20) :  (see `\cf2\ul\b FLEX-Dokumentation\cf4\ulnone\b0 `)\f6\fs18 
\par x var #20(e" : ")\\ins #utt\\help xyz 
\par \f5\fs20 and \f6 xyz.rtf\f5  must contain %%#utt at the the point where the text is supposed to appear. The #uxy variables can also be assigned within the display parameters, to the same effect. 
\par 
\par \i TIP\i0  for comfortable editing of  RTF help files: 
\par Enter explicitly, in the write field:  \b\f6 h name.rtf\b0\f5    (i.e., the file name \b with\b0  \f6 .rtf \f5 ) Forget this, and you lose the flips when saving the text! 
\par The file \f6 name.rtf\f5  will then be displayed, with a yellow background abd visible markers (grave accents) around the flip texts and the flip command lines visible. Everything can be edited in this mode (use the context menu via right mouse button for convenience), then save the text using "File | Save as" . 
\par If you enter   h name  without the \f6 .rtf\f5 , the  flip lines are invisible - as expected for the normal mode. 
\par \cf3\b For "Save as", the file name extension matters: if it is not .RTF,  just the text will be saved, not the RTF formatting commands. This can be useful if one wants to extract the bare ASCII text of a help file.\cf0 
\par \cf4\b0 Apart from all this, text portions may be exchanged with Winword or Wordpad using cut-and-paste. Attributes will be copied as well, for those programs understand RTF. (With HTML this wouldn't work.) 
\par Press the \i right\i0  mouse button while the cursor is in the display field. The context menu appears. Press \b i\b0  to switch italics on, for example. The creation of a flip is supported in this way: select the string intended to be clickable, right mouse button and \b f\b0   - the markers will then be set, the string copied to the end of the file with a preceding  ? and a = behind it. All that's left to do is to write down what FLEX is to be called or what help file brought up. 
\par 
\par \cf3\b\i Special case:\i0  Embedding phrases into help files (to set Strg keys)\cf4 
\par \b0 If one has a line like 
\par \f6\\par ?zzz=^pabc\f5 
\par in an  RTF help file, then  Strg+p  will be assigned the string \f6 abc\f5  . If the string \f6 abc\f5  begins with "x`" or "X`", a FLEX is executed when Strg+p is pressed. Find examples for this at the end of  FLEXGER.RTF. (The characters \f6 zzz\f5  have no meaning in these commands!)  If a \\  occurs as part of  \f6  abc\f5  , write it down as a single backslash, not a double as usual in RTF . For the lines beginning   \f6\\par ? \f5  are not treated as RTF lines when the program reads the text. 
\par 
\par \cf3\b\fs24 F. Help texts stored in records\cf4\f6\fs20 
\par \b0\f7 As a third way of providing help, a record type may be created that contains help text. This has been done extensively in the database "Theologic Periodical Contents Service" (T\'fcbingen, Dr. Weisweiler). In some 70 such records (each one available in German and English) all commands and options of database use have been described. Suitable parametrization has been added, apart from indexing the help records, to create Flips that bring up other help records,  index sections or particular records. It is ju\f5 st a question of time and imagination to extend this concept ever further. An appropriate parametrization then saves the time that  RTF files tend to consume. (The file HELPHEAD.RTF is not hused for this purpose, but DISPHEAD.RTF instead, like for any other records.) 
\par \f6\fs18 
\par 
\par ?Besen=h besen 
\par ?START=h start 
\par ?GENRL=h genrl 
\par ?DOKU=h doku 
\par ?EXPRT=h exprt 
\par ?MENU=h menu 
\par ?RECRD=h recrd 
\par ?RESRV=h resrv 
\par ?PRMPT=h prmpt 
\par ?COMMD=h commd 
\par ?KONFG=h konfg 
\par ?RESLT=h reslt 
\par ?WRITE=h write 
\par ?SPCHR=h spchr 
\par ?FIND=h find 
\par ?FLEX=h flex 
\par ?BUTTN=h buttn 
\par ?Help for this database=x help ! 
\par ?Help for the sub-windows=x h =B. H 
\par ?Editor help=x h =C. Editor 
\par ?Help for the main functions=x h =A. Help for the main functions 
\par ?Help for the indexes=x h =D. H 
\par ?User-supplied RTF help documents=x h =E. U 
\par ?Help texts stored as records=x h =F. H 
\par ?FLEX-Dokumentation=h flex 
\par ?RTF files=x h =E. B 
\par ?FLISTENG.TXT=h flisteng.txt=Hilfedateien 
\par ?X-Editor=h acd 
\par }
 