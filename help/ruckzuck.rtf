{\rtf1\ansi\ansicpg1252\deff0\deflang1031{\fonttbl{\f0\froman\fprq2\fcharset0  Times New Roman;}{\f1\fswiss\fprq2\fcharset0 Arial;}{\f2\fswiss\fprq2 Arial;}{\f3\fmodern\fprq1 Courier New;}{\f4\fmodern\fprq1\fcharset0 Courier New;}{\f5\froman\fprq2 Times New Roman;}{\f6\fmodern\fprq1 allegro Lucida Console;}{\f7\froman\fprq2\fcharset0 Times New Roman;}{\f8\froman\fcharset0 Times New Roman;}{\f9\froman Times New Roman;}{\f10\fswiss Courier New;}{\f11\fswiss\fcharset0 Courier New;}{\f12\fnil\fcharset2 Symbol;}}
{\colortbl ;\red255\green0\blue0;\red0\green0\blue255;\red128\green0\blue0;\red0\green0\blue0;\red0\green128\blue0;}
\viewkind4\uc1\pard\qc\f0\fs24   \cf1\b\i\fs36 RuckZuck\cf0\i0 
\par Web-Anbindung auf die Schnelle 
\par 
\par \pard\tx1136\tx4402\fs20\tab 1.  `\cf2 Wer kann RuckZuck brauchen?\cf0 `\tab 5.  `\cf2 Was macht/sieht der Nutzer?\cf0 ` 
\par \tab 2.  `\cf2 Was ist RuckZuck?\cf0 `\tab 6.  `\cf2 FLEXe, Hinweise f\'fcr CGI-Kundige\cf0 ` 
\par \tab 3.  `\cf2 Wie startet man RuckZuck?\cf0 `\tab 7.  `\cf2 Hinweise f\'fcr allegro-Kenner\cf0 ` 
\par \tab 4.  `\cf2 Funktionsweise\cf0 `\tab 8.  `\cf2 HTML-Dokumentation\cf0 ` 
\par \pard\b0 
\par \fs22 Nicht immer hat man die Zeit, das Geld, die Erfahrung - oder alles zusammen - um eine Web-Schnittstelle nach allen Regeln der Kunst f\'fcr die eigene Datenbank zu machen. Nicht immer ist der Aufwand notwendig, den man mit \b\i avanti\b0\i0  und mit ACWWW25 oder "populo" treiben mu\'df. Deshalb gibt es als Alternative eine Schnittstelle f\'fcr Schnellsch\'fcsse: \b RuckZuck\b0 . Ab September 2001 gibt es zwei Varianten:  
\par \b\tab F\b0  arbeitet ohne avanti nur mit FLEXen (a99 als Server), 
\par \b\tab P\b0  arbeitet mit avanti und mit `\cf2\b PHP\cf0\b0 ` (darin sind dann FLEXe eingebettet). 
\par \pard{\pntext\f12\'B7\tab}{\*\pn\pnlvlblt\pnf12\pnindent360{\pntxtb\'B7}}\fi-360\li360\b RuckZuck-F\b0  kommt ohne Skriptsprache aus (Perl, Python, Javascript), nur ganz normales HTML ist n\'f6tig. Variante \b P\b0  ist kompatibel in den Funktionen, aber realisiert mit der relativ einfach zu lernenden Skriptsprache PHP 
\par {\pntext\f12\'B7\tab}Ein m\'f6glichst vielseitiges Repertoire von Funktionen (einschl. Schreibzugriff) wird vorgefertigt bereitgestellt, wobei die Anforderungen an das System und die Notwendigkeit von Anpassungen auf ein Minimum reduziert sind. 
\par {\pntext\f12\'B7\tab}Lokalen Anpassungen sind keine Grenzen gesetzt - JavaScript ist dabei leicht anwendbar - wobei die FLEXe eine gr\'f6\'dfere Rolle spielen als die Parametrierung. 
\par \pard\'b7\tab\'b7\tab\'b7\tab\'b7\tab\'b7\tab 
\par So kann ein Startbildschirm aussehen, wenn man eine mit RuckZuck angebundene Datenbank anw\'e4hlt: 
\par \fs20 (Dies ist nur ein Bild, kein funktionsf\'e4higer Katalog, mitgeliefert als Datei  OPAC.HTM ) 
\par 
\par 
\par \pard\qc\cf1\b\fs48 OPAC der UB Braunschweig` 
\par \cf0\b0\f1\fs20 Universit\'e4tsbibliothek der TU Braunschweig - Pockelsstr. 13 - D-38106 Braunschweig - Tel. ++49 531 391 5026\f0\tab\tab 
\par \cf3\b\fs36 
\par Schnellsuche\cf0 
\par \b0\fs20 
\par \f2\fs16 
\par \f0\fs20 Titelwort:           _________________             (Einzelnes Wort!) 
\par \tab  
\par    Personenname:\tab             _________________             (Nachname, Vorname)\tab 
\par \ul\b 
\par \cf2 Suchen\cf0\ulnone\b0    \cf2\ul\b Registerlisten\cf0\ulnone\b0  
\par 
\par Beide Angaben werden automatisch trunkiert. 
\par Wenn Sie in beide Felder etwas eintragen, wird mit UND verkn\'fcpft 
\par 
\par \cf2\ul\b\fs28 Detail-Suche\cf0\ulnone 
\par \b0\fs20 (Wenn die Schnellsuche nicht geeignet ist, w\'e4hlen Sie "Detail-Suche") 
\par \pard 
\par \pard\qc 
\par 
\par \pard\b\fs32 1. Wer kann RuckZuck brauchen?\fs36 
\par \b0\fs20 Schon lange gibt es die `\cf2\ul\b\i allegro\b0\i0 -WWW-Schnittstelle\cf0\ulnone `. Mehr als 100 Web-Kataloge sind damit am Netz. 
\par \b Sie haben eine \i allegro\i0 -Datenbank\b0  (oder eine andere, aus der man eine machen k\'f6nnte),\b  die ins Inter- oder Intranet soll?\b0  
\par \b Nein\b0 : \b -->\b0  Ende 
\par \b Ja\b0 : \b Welche dieser Aussagen gelten f\'fcr Sie:\b0  
\par \pard\fi-360\li720\lang1033 1.\tab\lang1031 Sie haben zu wenig Geld 
\par \lang1033 2.\tab\lang1031 Sie haben zu wenig Zeit 
\par \lang1033 3.\tab\lang1031 Sie haben zu wenig Ahnung von der WWW-Programmierung, insbes. von Perl, Python etc. 
\par \lang1033 4.\tab Hoher Aufwand lohnt nicht, denn \lang1031 Ihre Datenbank soll nur f\'fcr begrenzte Zeit oder einen begrenzten Kreis verf\'fcgbar gemacht werden, vielleicht gar nur f\'fcr eine einzelne Person am anderen Ende des Internet. 
\par \pard\b Nichts davon trifft zu: --> Ende\b0 . 
\par \pard\li360\ri360 Denn dann verwenden Sie \b\i avanti\b0\i0  auf einer UNIX- oder Linux-Anlage und richten mit Hilfsmitteln wie z.B. Thomas Bergers `\cf2\ul "populo"-Paket\cf0\ulnone ` einen ma\'dfgeschneiderten Qualit\'e4tsdienst ein, mit hoher Betriebssicherheit, der monatelang ohne Aufsicht und ohne Eingriff laufen kann. Damit verglichen ist "RuckZuck" vielleicht eine 90%%-L\'f6sung - doch manchmal braucht man ja gar nicht mehr! 
\par \pard\b Wenn eine oder mehr dieser Aussagen f\'fcr Sie zutreffen\b0 , ist die RuckZuck-Methode eine \'dcberlegung wert. Oder auch dann, wenn schnell ein Provisorium gebraucht wird, damit man die Dauerl\'f6sung dann in Ruhe ausarbeiten kann. Die Variante \b P\b0  ist aber technisch durchaus auch als Dauerl\'f6sung geeignet! 
\par  
\par \b\fs32 2. Was ist "RuckZuck"?\b0  \fs20 
\par Es ist ein \b Fertigpaket\b0  f\'fcr das Bereitstellen einer "allegro"-Datenbank im Inter- oder Intranet. Variante \b F\b0  kommt \b ohne Skriptsprache\b0  (wie Perl, Python oder Javascript) aus. Programmiert wird mit den Mitteln der Exportsprache und der FLEX-Sprache und mit ganz gew\'f6hnlichem HTML. Das jetzt verf\'fcgbare Paket KANN leicht durch weitere Module erg\'e4nzt und nat\'fcrlich auch lokal angepa\'dft und ausgebaut werden; nur an ganz wenigen Punkten MUSS aber wirklich eingegriffen werden. 
\par RuckZuck sollte mit jedem Kategorienschema, also mit jeder "allegro"-Datenbank funktionieren. Es enth\'e4lt nur die wichtigsten Funktionen, die jeder braucht, aber sorgf\'e4ltig durchdacht und offen f\'fcr Erweiterungen. Die Standarddateien werden ohne grafische Elemente geliefert, die Einbindung eigener Grafiken, insbes. Logos oder GIF-Dateien f\'fcr Links wie "N\'e4chste Seite", "Neue Suche" usw., ist f\'fcr HTML-Kenner sehr einfach. Neudeutsch: man kann leicht seine eigene "Corporate Identity" integrieren. 
\par RuckZuck besteht aus ganz wenigen Dateien und bleibt damit sehr \'fcbersichtlich. Alle Dateien sind voll kommentiert, die Stellen f\'fcr notwendige Eingriffe sind markiert, daher braucht man nicht alles zu verstehen, was da abl\'e4uft. 
\par Erforderlich: 
\par \pard\fi-360\li720\lang1033 1.\tab\lang1031 Ein Rechner mit Win'XP oder Vista . Er mu\'df am Internet h\'e4ngen. Dazu braucht er keinen eigenen Namen, nur eine IP-Nummer. Eine solche hat jeder PC, der z.B. in einem Hochschulnetz steht. Testen kann man ohne Anschlu\'df nach drau\'dfen! 
\par \lang1033 2.\tab\lang1031 Das Programm  \b\i a99 \b0\i0  (normalerweise auf c:\\allegro gelegen) 
\par \lang1033 3.\tab\lang1031 Das neue Hilfsprogramm   \f3 cgi.exe\f4   (-> Verzeichnis cgi-bin von xampp)\f0 
\par \lang1033 4.\tab\lang1031 Die Datei  \f3 opac.htm\f4   (-> Verzeichnis htdocs/opac von xampp)\f0 
\par \lang1033 5.\tab\lang1031 das Paket \f3 ruckzuck.lzh\f0 , dieses enth\'e4lt Dateien, die man f\'fcr jede Datenbank auf ein eigenes Verzeichnis kopieren mu\'df. (Nicht auf das allegro-Programmverzeichnis!) Die in 3./4. genannten Dateien sind auch drin. 
\par \lang1033 6.\tab\lang1031 Ein Webserver.Sehr zu empfehlen ist das `\cf2\ul\b XAMPP-Paket\cf0\ulnone\b0 `, das neben dem Apache-Webserver auch PHP enth\'e4lt. Installieren Sie Apache nicht als Dienstprogramm, sondern als ganz normales Programm! Man startet es dann jeweils mit dem XAMPP Control. ("Dienst" geht auch, ist aber nicht n\'f6tig. Wenn man das will, mu\'df man unter Start / Systemsteuerung / Verwaltung / Dienste  auf "Apache" rechtsklicken, dann Eigenschaften / Anmelden  und einen Haken setzen bei "Datenaustausch zwischen Dienst und Desktop zulassen"). 
\par \pard 
\par Alles mu\'df auf demselben PC installiert werden! Webserver und a99 k\'f6nnen nicht \'fcber \f3 cgi.exe\f0  kommunizieren, wenn das nicht der Fall ist. Die \i Datenbank\i0  kann aber im LAN auf einem anderen Fileserver (z.B. auch Novell) liegen. 
\par Bereitgestellt wird mit RUCKZUCK.LZH ein Paket, das au\'dfer einem Webserver alles enth\'e4lt, was gebraucht wird. 
\par F\'fcr Unix oder Linux existiert nur RuckZuck Variante \b P\b0  , daf\'fcr wird der jeweilige \b\i avanti\b0\i0 -Server gebraucht. 
\par  
\par \b\fs32 3. Wie startet man RuckZuck?\b0  \fs20 
\par 
\par \pard\fi-360\li720\lang1033 1.\tab\lang1031 Webserver starten, 
\par \pard\li720\i Standard:\i0  Apache \'fcber das XAMPP Control starten\f5 
\par \f0 F\'fcr Variante \b P\b0  wird haupts\'e4chlich Apache empfohlen. 
\par 
\par \pard\fi-360\li720\lang1033 2.\tab\lang1031 a99 starten / Variante \b P\b0 :  \b\i avanti-\b0\i0 Server starten 
\par \pard\li720\i Standard:\i0  auf c:\\opac den Befehl` \b\f4 c:\\allegro\\a99 demo\b0  \f0  geben  / Var. \b P\b0 :  \b\f4 avanti.exe\b0\f0   
\par 
\par \pard\fi-360\li720\lang1033 3.\tab\lang1031 Test auf dem lokalen Rechner: 
\par \pard\li710\i Standard:\i0  Browser starten, dann zum Testen: \f4 http://127.0.0.1/opac/opac.htm\f0    /  Var. \b P\b0  : \f4 http://.../detail.php \f0 
\par \pard 
\par \'dcber die pr\'e4parierte HTML-Eingangsseite (OPAC.HTM mit lokaler Anpassung) kann jetzt der Zugriff losgehen. 
\par An der Datenbank kann von anderen Fenstern aus normal gearbeitet werden, entweder mit den DOS-Programmen oder a99. 
\par Das Fenster von a99 kann man u.a. benutzen, um sich die abgerufenen Ergebnismengen anzuschauen (Alt+e, dann sieht man die Liste). 
\par Es entsteht ein Protokoll RZ.LOG auf dem CGI-Verzeichnis des Web-Servers. Dieses kann man jederzeit gefahrlos l\'f6schen. Darin stehen die wesentlichen FLEX-Befehle, die zu einem Job geh\'f6ren. 
\par 
\par \fs24 Ab hier beschr\'e4nkt sich die Beschreibung auf die FLEX-Variante! Mehr \'fcber die P-Variante steht in PHPAC.TXT, mitgeliefert im Paket PHPAC.LZH.\b\fs36 
\par 
\par 4. Wie geht das? 
\par Funktionsweise der RuckZuck-Schnittstelle, Variante F 
\par 
\par \b0\fs20 Als Server dient \f3 a99.exe\f0 , das Windows-Hauptprogramm des \b\i allegro\b0\i0 -Systems, die Anfragen werden ihm als externe FLEXe \'fcbergeben. (Ein FLEX ist eine Art Makro, das man sowohl interaktiv in a99 ausf\'fchren, aber auch von au\'dfen dem Programm \'fcbergeben kann, gewisserma\'dfen zur Fernsteuerung.) Es wird keine Skriptsprache benutzt, auch nicht Java. \b\fs36 
\par \pard\qc\b0\fs20 
\par \pard\b\fs24 So wird installiert, wenn man eine eigene Datenbank zug\'e4nglich machen will:\b0  
\par \fs20 Hier sind in \cf1\b rot\cf0\b0  die Namen der Dateien hervorgehoben, in denen \cf1\b\'c4nderungen\cf0\b0  n\'f6tig sein k\'f6nnen. In den Dateien sind die Stellen mit XXX gekennzeichnet. 
\par 
\par \pard\fi-360\li720\lang1033\b 1.\b0\tab\lang1031 In den eigenen \cf1\b Indexparametern\cf0\b0  (Standard: \cf1 CAT.API\cf0 ) mu\'df man \b symbolische Namen f\'fcr die Register und die Restriktionen\b0  haben (z.B. PER f\'fcr das Personenregister etc.) siehe Handbuch S. 176. Nur ganz alte Datenbanken haben so etwas noch nicht. Solche Zeilen sehen so aus: 
\par \lang1033\tab\tab Symbolische Registernamen: 
\par \tab\lang1031\f6 I PER 1 "Personennamen"       Register 1 = Personennamen\f0 
\par \tab\tab Symbolische Restriktionsnamen: 
\par \tab\f6 R ERJ r1 "Erscheinungsjahr"   \f0 Restr. 1 = Ersch.Jahr beginnt auf  Pos. 1 der RES-Datei 
\par 
\par \lang1033\b 2.\b0\tab\lang1031 Die Startdatei \cf1\b\f3 OPAC.HTM\cf0\b0\f0  kopiert man auf das Dokumentenverzeichnis des Webservers, Unterverzeichnis "allegro". Bei XAMPP ist das z.B. 
\par \tab\f3 ...\\x\f4 ampp\f3\\\f4 htdocs\f3\\\f4 opac\f0 ` (anderer Name ist m\'f6glich). In OPAC.HTM mu\'df man evtl. an wenigen Stellen eingreifen. \b Zweimal\b0  mu\'df der Verzeichnisname eingetragen werden, \b wo a99 gestartet wurde\b0  (siehe 4., In der Vorlage steht jeweils \f3 c:\\opac\f0 .) 
\par \pard\li720 Auf dasselbe Verzeichnis dann auch das Icon  \f3 ruckzuck.gif\f0  - oder eines Ihrer Wahl unter demselben Namen. Eine Kopie davon auch auf's CGI-Verzeichnis (s.3.). 
\par In \cf1 OPAC.HTM\cf0  m\'fcssen auch die Namen und Ziffern der Register f\'fcr die Schnellsuche evtl. ge\'e4ndert werden. 
\par Diese m\'fcssen mit den Angaben in \cf1 FIND-S.FLX\cf0  zusammenpassen. 
\par Die URL dieser Datei teilt man dann den betroffenen Personen mit. Diese Datei ist der Zugang und zugleich so etwas wie die INI-Datei f\'fcr Ihren Web-Katalog. Daher enth\'e4lt sie den Pfad, wo a99 l\'e4uft. 
\par 
\par \pard\fi-360\li720\lang1033\b 3.\b0\tab\lang1031 Das Programm CGI.EXE mu\'df auf das CGI-Verzeichnis des Web-Servers. Bei einer Standard-Installation von XAMPP ist das \f3 ...\\x\f4 ampp\f3\\cgi-bin\f0 . CGI.EXE wird bei Bedarf vom Webserver aufgerufen, wie es der CGI-Methodik entspricht. 
\par 
\par \lang1033\b 4.\b0\tab\lang1031 Man legt ein Verzeichnis f\'fcr die Schnittstelle an, z.B. \cf1\b C:\\OPAC\cf0\b0  (g\'fcnstig ist ein nicht zu langer Name, denn er mu\'df bei jeder Transaktion mit durchgereicht werden). Der Name dieses Verz. mu\'df in \cf1 OPAC.HTM\cf0  stehen (siehe 2.). Wenn Sie es einmal verlagern: nur OPAC.HTM entsprechend \'e4ndern. Auf C:\\OPAC entpackt man ruckzuck.lzh: die FLEXe, Parameter und HTM-Dateist\'fccke, aus denen die Schnittstelle besteht. Hier mu\'df auch eine Datei \cf1\i\f3 xyz\i0 .\b ini\cf0\b0\f0  angelegt werden f\'fcr a99. Darin stehen Name und Pfad der Datenbank etc. und au\'dferdem: 
\par \tab\b\f3 PrintParameter=\f4 D\f3 -H0\b0\f0 
\par \tab\b\f3 ExportParameter=D-HTML\b0 
\par \tab\f0 Wenn a99 nicht auf C:\\ALLEGRO installiert ist, mu\'df man die Eintragung` \f3 ProgDir\f0  entsprechend \'e4ndern. 
\par \tab Mit "a99 xyz" \b startet man a99 dann auf diesem Verzeichnis\b0  (nicht woanders). Man stellt es dann so ein, da\'df irgendein Titelsatz in der Anzeige ist. Nun wartet es auf Arbeit... 
\par \pard\li720 
\par \pard\fi-294\li720\tx284\tab In den \cf1\b\f3 .FLX\cf0\b0\f0 - und \cf1\b\f3 .HTM\cf0\b0\f0 -Dateien sind Stellen f\'fcr Anpassungen mit XXX markiert. Achtung: es sind keine vollst\'e4ndigen Dateien, sondern sie werden w\'e4hrend der Laufzeit als Bausteine verwendet zum Zusammensetzen der dynamischen Seiten. 
\par \pard\li720 
\par \pard\fi-360\li720\lang1033\b 5.\b0\tab\lang1031 F\'fcr weitere Datenbanken legt man weitere Schnittstellenverzeichnisse an (Kopien von C:\\OPAC), die jeweils eine individuelle .INI f\'fcr den Start von a99 brauchen. D.h. es mu\'df f\'fcr jede Datenbank ein eigenes a99 auf dem zugeh\'f6rigen Schnittstellenverzeichnis gestartet werden. Im Hinblick auf Systemressourcen ist das unkritisch: jedes laufende a99 belegt h\'f6chstens 2.5MB Arbeitsspeicher und braucht nur dann Rechenleistung, wenn gerade eine Anfrage bearbeitet wird. 
\par \tab\b\'c4nderungen\b0 : (markiert mit XXX) Immer n\'f6tig in der Datei \cf1\b FIND-S.FLX\cf0\b0 ` , die aus OPAC.HTM aufgerufen wird. Au\'dferdem in \cf1\b GETEDIT.FLX\cf0\b0  und \cf1\b WRITE.FLX\cf0\b0  sowie \cf1\b D-EDIT.APR\cf0\b0 , wenn man Schreibzugriffe erlauben will. F\'fcr die Einstellung der Sortierposition auch \cf1\b FIND-D.FLX\cf0\b0 . Wenn die HTM-Startseite nicht OPAC.HTM hei\'dft, mu\'df man den Namen jeweils in den FLX-Dateien \'e4ndern. 
\par 
\par \lang1033\b 6.\b0\tab\lang1031 Wer nicht mit dem Standardschema A.CFG arbeitet: F\'fcr die eigene Datenbank mu\'df eine Datei \cf1\f3 D-HTML.cPR\cf0\f0  angelegt werden (wobei c der eigene Konfigurationsbuchstabe ist, z.B. \b P\b0  f\'fcr Pica), sowie eine \cf1\f3 D-EDIT.cPR\cf0 ,\f0  wenn man Schreibzugriff anbieten will.  Letztere kann eine Kopie der D-EDIT.APR sein. 
\par \tab Die Datei \b\f3 D-H0.APR\b0\f0  kann unver\'e4ndert auf \cf1 D-H0.cPR\cf0  kopiert werden, sie wird f\'fcr einige Hilfsfunktionen unbedingt gebraucht. 
\par \pard\li720 
\par \pard\i Schnelle L\'f6sung:\i0  
\par \pard\li720 Man kopiert \b\f3 D-H0.APR\b0\f0  zus\'e4tzlich auf \f3 D-HTML.cPR\f0 . Dann bekommt man zwar nur eine Anzeige im Internformat, aber es funktioniert. 
\par Au\'dferdem:`\f3  P-HTM.APT\f0   auf  \f3 P-HTM.cPT \f0  kopieren. 
\par \pard\i Aufwendige L\'f6sung:\i0  
\par \pard\li720 Man erstellt` \f3 D-HTML.cPR\f0  aus der in der Regel vorhandenen \f3 D-1.cPR\f0 , indem man diese Einstellungen darin vornimmt: 
\par \f3 
\par zl=80 
\par ze=10 
\par zm=0 
\par zb=" " 
\par ab="" 
\par as="" 
\par t\f4 ad-aw\f0\fs28 
\par \fs20 
\par die letzte Zeile am besten ans Ende der Datei! (sie enth\'e4lt eine Codetabelle ASCII - ANSI) 
\par Wenn man keine  \f3 A\f4 D-AW\f3 .\f4 c\f3 PT\f0  hat, kopiert man \f3 A\f4 D-AW\f3 .APT\f0  auf diesen Namen. Im allgemeinen wird es dann schon klappen. Das Erscheinungsbild der Datens\'e4tze l\'e4\'dft sich durch Bearbeitung der D-HTML.cPR` noch beliebig verbessern. 
\par In die Hilfsparameter \f4 D-H0\f3 .APR\f0  wird man normalerweise nicht eingreifen m\'fcssen. Diese erledigen einige bei allen Datenbanken gleiche Aufgaben, wie das Formatieren der Kurzlistenausgabe oder der Liste aller symbolischen Registernamen. Die Standardisierung solcher Aufgaben ist eine Erleichterung. 
\par \pard 
\par \b\fs28 Die Funktionsweise\b0\fs20  
\par \pard{\pntext\f12\'B7\tab}{\*\pn\pnlvlblt\pnf12\pnindent360{\pntxtb\'B7}}\fi-360\li720 F\'fcr die \'dcbergabe von Nutzerdaten werden ganz normale HTML-Formulare verwendet. Diese werden an ein kleines CGI-Programm \'fcbergeben, CGI.EXE. Es ist in C geschrieben und daher viel schneller als z.B. Perl. 
\par {\pntext\f12\'B7\tab}CGI.EXE wandelt die Formulardaten um, verbindet sie mit einem vorgefertigten FLEX, dessen Name im Formular steckt, und \'fcbergibt diesen an a99. 
\par {\pntext\f12\'B7\tab}Der FLEX veranla\'dft a99, eine Ausgabe HTML-Ausgabe zu erzeugen, die durch CGI unmittelbar an den Nutzer \'fcbergeben wird. Auch hier k\'f6nnen vorgefertigte Teile zum Einsatz kommen, z.B. HTML-Kopfdateien. 
\par {\pntext\f12\'B7\tab}Schematischer Ablauf:` 
\par \pard\li720\'b7\tab\'b7\tab\'b7\tab\'b7\tab\'b7\tab ` 
\par \i\f3 Nutzer:\i0 ` `  CGI . . . . . . . . . . .  . . . .CGI` \i Nutzer:\i0\f0 
\par \f3 HTML-Seite` ` ` ` ` ` ` ` ` ` ` ` `  HTML` ` ` ` ` neue\f0  
\par \f3 mit` ` ` `  --->` FLEX ---> a99 ---> Ausgabe` ---> HTML-` ` --> Anfang\f0  
\par \f3 Formular` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` `  ` Seite 
\par \f0 
\par \pard Es gibt eine Anzahl von vorgefertigten FLEXen mit wichtigen Grundfunktionen, die auf diesem Wege aktiviert werden k\'f6nnen. Diese sind jeweils ausf\'fchrlich kommentiert. Insbesondere ist mit XXXX markiert, wo man Ver\'e4nderungen vornehmen kann oder mu\'df. 
\par Man braucht nur \b eine einzige\b0  feste HTML-Seite, die f\'fcr den Einstieg (Standard OPAC.HTM). Die anderen werden immer ad-hoc von den FLEXen erstellt. 
\par \b\fs28 
\par 5. Der Ablauf\b0\fs20  
\par \b\fs24 Was sieht/macht der Nutzer -- was wird dann ausgel\'f6st\b0\fs20  \fs28 
\par \fs20 Hier sieht man, wie die FLX-Dateien untereinander zusammenh\'e4ngen. In jedem Fall werden die Formulardaten aus HTML dem CGI-Programm CGI.EXE \'fcbergeben, dieses macht daraus einen FLEX-Auftrag und sendet ihn an a99. a99 produziert als Ausgabe eine neue HTML-Datei, die CGI.EXE nur an den Webserver und dieser dann an den User zur\'fcckgeben mu\'df. 
\par Dabei gibt es f\'fcnf Typen von Seiten, die der User zu sehen bekommt: 
\par \f3 
\par ` START: z.B. 
\par ` \cf1\b OPAC.HTM\cf0\b0 ` --> \cf1 FIND-S.FLX\cf0\f4 ` Ausf\'fchrung einer Suche \f3 
\par ` ` ` ` ` ` ` ` ` ` ` ` ` ` Ausgabe: \b Ergebnisliste\b0  oder \b Registerausschnitt\b0  
\par ` ` ` oder` --> \cf1 DETAIL.FLX\cf0\f4 ` produziert Formular f\'fcr kombinierte Suche \f3 
\par ` ` ` ` ` ` ` ` ` ` ` ` ` ` Ausgabe: Das \b Eingabeformular\b0 
\par ` \b Eingabeformular\b0\f4  f\'fcr kombinierte Suche \f3 
\par ` ` ` ` ` ` --> \cf1 FIND-D.FLX\cf0\f4 ` Neue Suche ausf\'fchren \f3 
\par ` ` ` ` ` ` ` ` ` ` ` ` ` ` Ausgabe: \b Ergebnisliste\b0  oder \b Registerausschnitt\b0  
\par ` \b Ergebnisliste\b0  besteht aus 1 Zeile (mit Link) je Datensatz 
\par \f4 ` ` ` ` ` ` --> GETREC.FLX` holt den ausgew\'e4hlten Satz \f3 
\par ` ` ` ` ` ` ` ` ` ` ` ` ` ` Ausgabe: \b Satzanzeige\b0  
\par \f4 ` ` ` ` ` ` --> FIND-D.FLX` ver\'e4nderte Suche ausf\'fchren - andere \b\f3 Ergebnisliste\b0  
\par ` ` ` ` ` ` --> DETAIL.FLX` Ausgabe: Neues \b Eingabeformular\b0 
\par ` \b Registerausschnitt\b0\f4  jede Zeile steht f\'fcr einen oder mehrere S\'e4tze \f3 
\par \f4 ` ` ` ` ` ` --> FIND-D.FLX` holt die zu einer Registerzeile geh\'f6rigen S\'e4tze \f3 
\par ` ` ` ` ` ` ` ` ` ` ` ` ` ` Ausgabe: \b Ergebnisliste\b0  oder \b Satzanzeige\b0  
\par \f4 ` ` ` ` ` ` --> PAGE.FLX` ` eine Seite im Register vor oder zur\'fcck \f3 
\par ` ` ` ` ` ` ` ` ` ` ` ` ` ` Ausgabe: \b Registerausschnitt\b0  
\par ` ` ` ` ` ` --> DETAIL.FLX` Ausgabe: Neues \b Eingabeformular\b0  
\par ` \b Satzanzeige\b0  Vollanzeige des Datensatzes 
\par ` ` ` ` ` ` --> DETAIL.FLX` Ausgabe: Neues \b Eingabeformular\b0 
\par ` ` ` ` ` ` --> \cf1 GETEDIT.FLX\cf0  Satz zum Bearbeiten bereitstellen 
\par ` ` ` ` ` ` ` ` ` ` ` ` ` ` Ausgabe: \b Bearbeitungsformular\b0  
\par ` \b Bearbeitungsformular\b0  
\par ` ` ` ` ` ` --> \cf1 WRITE.FLX\cf0 `  Satz speichern, entw. als Korrektur oder Neusatz\fs24  
\par \f0\fs20 
\par Eingreifen mu\'df man bei eigenen (nicht dem Standard entsprechenden) Datenbanken in die\cf1  rot geschriebenen Dateien\cf0 , denn darin gibt es datenbankabh\'e4ngige Teile. Man findet die Stellen leicht, denn es steht immer XXX und ein Kommentar \'fcber den zu \'e4ndernden Stellen. In \f3 GETEDIT.FLX\f0  kann man auch diejenigen Felder einstellen, die zum Bearbeiten angeboten werden sollen, Kommentare siehe dort. 
\par \b\fs28 
\par 6. Liste der FLEXe\b0\fs20  
\par Diese FLEXe werden als Grundpaket bereitgestellt. Sie erzeugen jeweils eine HTML-Seite als Ausgabe. Sie benutzen jeweils eine (meistens) gleichnamige .HTM-Datei als Kopf. Hier kann man lokale Design-Elemente einbringen, z.B. ein eigenes Logo statt "ruckzuck.gif" (man kopiert das eigene auf diesen Namen, dann hat man weiter nichts zu tun). und Links zu eigenen Seiten. In diesen Kopfdateien kann man aber auch JavaScript-Funktionen unterbringen. 
\par In die FLEXe eingebunden sind die HTM-Seiten immer mit dem Befehl` \b\f3 write F\b0\i filename. \i0\f0 Die HTM-K\'f6pfe enthalten keinen Abschnitt "<head>...</head>", denn dieser wird schon von CGI erstellt und enth\'e4lt nur einen <title>...</title> mit der internen Nummer des Jobs. 
\par 
\par Liste der FLEXe mit zugeh\'f6rigen HTM-Kopfdateien (werden automatisch eingebunden): 
\par \b\f3 
\par FIND-S.FLX\b0 `  wird von der Startseite OPAC.HTM gestartet\f0  
\par \f3 find.htm\f0  
\par \b\f3 
\par DETAIL.FLX\b0 `  kann von OPAC.HTM aufgerufen werden, und durch den Link\f0  
\par \f3 detail.htm`  "Neue Suche" von anderen Stellen\f0  
\par \f3 ` ` ` ` ` `  Holt sich die Registernamen automatisch\f0  
\par \b\f3 
\par FIND-D.FLX\b0 `  Start aus DETAIL.FLX und aus PAGE.FLX\f0  
\par \f3 find.htm` `  Erg.Menge (wenn mehr als 1 Satz), sonst Satzanzeige, 
\par \tab\tab  ODER Anzeige eines\f0   \f3 Registerabschnitts\f0  
\par \b\f3 
\par PAGE.FLX\b0\f4 ` `  Ruft sich selber auf mit [Seite h\'f6her] / [Seite weiter]\f0  
\par \f3 page.htm` `  Zeigt einen Registerabschnitt, ruft FIND-D.FLX auf, wenn\f0  
\par \f3 ` ` ` ` ` `  eine Zeile angeklickt wird.\f0  
\par \b\f3 
\par GETREC.FLX\b0 `  Aufruf aus FIND-D.FLX, wenn ein einzelner Satz gezeigt werden soll\f0  
\par \pard\fi-1562\li1562\f4 getrec.htm` `Startet GETEDIT.FLX, wenn gew\'fcnscht\f0  (sonst ausblenden in GETREC.FLX und FIND-D.FLX) 
\par \pard\b\f3 
\par GETEDIT.FLX\b0 ` Start aus GETREC.FLX\f0   oder  \f3 FIND-D.FLX\f0 
\par \f3 getedit.htm` Legt einen Satz zum Bearbeiten vor. Mit \cf2\f0 JavaScript-Beispiel\cf0  zur 
\par \f3 ` ` ` ` ` `  Eingabekontrolle\f0  
\par \b\f3 
\par WRITE.FLX\b0 ` ` Start aus GETEDIT.FLX\f0  
\par \pard\fi-1562\li1562\f4 getrec.htm`  Schreibt den Datensatz zur\'fcck, wahlweise als neuen Satz oder Korrektur\f0  
\par \pard\b\fs28 
\par \fs24 Weitere Hinweise f\'fcr CGI-kundige Leser\b0  \fs20 
\par Das Programm CGI.EXE kann sowohl POST wie auch GET-Auftr\'e4ge entgegennehmen, d.h. man kann Auftr\'e4ge \'fcber Formulare bzw. \'fcber Links erzeugen. 
\par Ein Auftrag mu\'df bestimmte Dinge enthalten: 
\par \b\fs28 
\par \f3\fs24 VuwD=\b0\i\f0 Name des Verz., wo a99 l\'e4uft (working Directory).\i0\fs20  Das ist \b nicht\b0  das Datenverzeichnis! 
\par \b\f3\fs24 flex=\b0\i\f0 Name eines FLEXes\i0\fs28  \fs20 (der auf dem VuwD liegen mu\'df) 
\par \b\f3\fs24 Vuxy=\b0 ...\f0\fs28 `  \fs20 beliebig viele #u-Variablen; werden dem FLEX vorangestellt 
\par optional k\'f6nnen folgende Variablen auftreten` (nur bei Schreibauftr\'e4gen sinnvoll, s. WRITE.FLX): 
\par \b\f3\fs24 Vnnn=\b0 ...\f0\fs28 `  \fs20 beliebig viele normale Datenfelder, die dann mit den angegebenen Inhalten besetzt werden 
\par \b\f3\fs24 Rnum=\b0 ...\f0\fs28 `  \fs20 interne Nummer des zu bearbeitenden Satzes. Ist diese Variable gegeben, dann wird dieser Satz zuerst geladen, bevor der FLEX anl\'e4uft und bevor die V-Befehle ausgef\'fchrt werden, d.h. die in den anderen Variablen mitgelieferten Kategorien werden in den Satz eingeordnet, bevor der eigentliche FLEX beginnt. 
\par \b\f3\fs24 Text=\b0 ...\f0\fs28 `  \fs20 Inhalt eines TEXTAREA-Feldes in einem Eingabeformular; Verwendung in GETEDIT.FLX, siehe dort. 
\par 
\par Die Variablen Vuxy werden also dem zu startenden FLEX \'fcberreicht, d.h. CGI.EXE fabriziert einen neuen FLEX (und l\'f6scht ihn hinterher sofort wieder) Dieser tempor\'e4re FLEX enth\'e4lt am Anfang die Setzung der #uxy-Variablen etc. (s.o.) und am Ende deren L\'f6schung. Man verwende daher nicht den Befehl "end", sondern statt dessen "jump exit", denn die Sprungmarke :exit wird ebenfalls erzeugt. 
\par Anders gesagt: CGI erstellt einen "Sandwich"-FLEX: 
\par 
\par \fs28 ` \i Laden des Satzes (wenn Rnum gegeben)\i0\fs20  
\par \fs28 ` \i Setzungen der Variablen #uxy f\'fcr a99\i0\fs20  
\par \i\fs28 ` Inhalt des Text-Feldes\i0\fs20 
\par \i\fs28 ` ` ` `  (d.h. Einf\'fcgen der darin enth. Kategorien in den Datensatz)\i0\fs20  
\par \fs28 ` \f3\fs24 der FLEX aus der CGI-Variablen flex=... 
\par `:exit\f0\fs20 
\par \fs28 ` \i L\'f6schen der #u-Variablen\i0\fs20  
\par 
\par Der Name des tempor\'e4ren FLEX enth\'e4lt u.a. die Uhrzeit in Sekunden, daher ist keine Kollision zweier Auftr\'e4ge zu bef\'fcrchten. 
\par CGI sendet diesen Namen an a99 und wartet, bis die Ausgabedatei fertig ist (d.h. von a99 das Signal zur\'fcckkommt, es sei alles erledigt). Keines der Programme mu\'df also st\'e4ndig die Platte \'fcberwachen oder dergleichen, sondern die Kommunikation geschieht \'fcber Windows-Systemmeldungen. 
\par Als Exportparameter f\'fcr die Vollanzeige von S\'e4tzen wird per default D-HTML.cPR benutzt. Zus\'e4tzlich f\'fcr immer gleiche Standardaufgaben eine D-H0.APR - wenn die FLEX-Sprache nicht reicht, um einen output zu produzieren. Ansonsten ist der Output des FLEXes genau das, was CGI.EXE dann dem Web-Server zur\'fcckreicht, d.h. man mu\'df in seinem FLEX den kompletten HTML-Ausgabetext fabrizieren. Das kann abwechselnd durch "write"- und "download"-Befehle passieren. Bei "write" hat man ja die M\'f6glichkeit, ganze Fertigteile, d.h. Dateien "name.htm", mit  \b\f3\fs24 wri Fname.htm\b0\f0\fs28  \fs20 auszugeben. 
\par \'dcbrigens kann auf dem Rechner, auf dem der Webserver, a99 und CGI laufen, durchaus ganz normal gearbeitet werden. Z.B. kann man darauf Netscape starten und den Katalog selber benutzen, indem man die Adresse` ` http://127.0.0.1/allegro/opac.htm` aufruft. 
\par \b\i 
\par Tips\b0\i0  
\par Sollen einige Nutzer Schreibrechte haben, andere aber nicht: zwei Eingangsseiten und zwei Startverzeichnisse anlegen, a99 zweimal starten (auf jedem der Verzeichnisse). In der INI-Datei f\'fcr die Nutzer ohne Schreibrecht kann man zur Sicherheit eintragen:` access=0.` In GETREC.FLX und FIND-D.FLX nimmt man die kommentierten Zeilen heraus, die den Link "Bearbeiten" erzeugen. 
\par Den Zugang zu der Eingangsseite mit Schreibrecht kann man zus\'e4tzlich durch Passwort absichern. 
\par Auf einem weiteren Verzeichnis kann man ein drittes a99 starten, um damit ohne St\'f6rung durch die Web-Zugriffe selber an der Datenbank arbeiten zu k\'f6nnen. Hier sollte dann access=4 in der INI-Datei stehen, damit man alles machen kann. 
\par \b 
\par \b0 
\par \b\fs28 7. Hinweise f\'fcr \i allegro\i0 -Kundige\b0\fs20  
\par Die Parameterdatei D-H0.APR besorgt einige Standardaufgaben wie das Produzieren von Registerausz\'fcgen und SELECT-Listen f\'fcr die Registerauswahl. Sie wird \'fcber den neuen FLEX-Befehl "Download" (mit gro\'dfem D) benutzt. Dieser benutzt zum` Exportieren nicht die \b Export\b0 Parameter, sondern die \b Print\b0 Parameter - die man als solche f\'fcr RuckZuck nicht braucht. In der INI-Datei mu\'df stehen` \f3 PrintParameter=d-h0\f0 . So wird vermieden, da\'df man die Anzeigeparameter D-HTML.APR auch noch mit diesen Sonderaufgaben befrachten bzw. da\'df man in vorhandene Anzeigeparameter, die man f\'fcr "avanti" schon gemacht hat, die etwas komplizierten Hilfsprozeduren auch noch einbauen mu\'df. Das spart u.U. viel Zeit. 
\par Ausnutzen kann man in eigenen FLEXen evtl. zwei weitere Nutzervariablen: #urH und #urA. Diese enthalten jeweils den Namen des Host bzw. die Adresse, von der aus der FLEX gekommen ist. 
\par \i allegro\i0 -Anwender wissen: fast nichts ist unverr\'fcckbar festgeschraubt, fast alles l\'e4\'dft sich irgendwie variieren oder die Entwicklungsabteilung macht, wenn begr\'fcndete Vorschl\'e4ge kommen, eine Programmverbesserung. Das gilt auch f\'fcr RuckZuck. 
\par 
\par \f3 
\par \b\f7\fs28 8. HTML-Dokumentation f\'fcr RuckZuck\b0\f3 
\par \f7\fs20 Hier wird beschrieben, wie die verschiedenen RuckZuck-Seiten in HTML aussehen m\'fcssen. 
\par Das ist n\'fctzlich, wenn man eigene Abfragen und Befehle per HTML-Seite an einen a99-Server senden will. 
\par Man mu\'df dazu wissen: es gibt im HTTP-Protokoll keine "Sitzung" (wie z.B. im Z39-Protokoll), sondern jede HTML-Seite ist eine selbst\'e4ndige Einheit. Daher kann ein Auftrag an a99, der in  eine HTM-Seite eingebettet ist, nicht auf eine vorher gelaufene Aktion Bezug nehmen. Das macht die Dinge einerseits viel einfacher als bei einem Sitzungsprotokoll, andererseits in mancher Beziehung auch schwieriger - es kommt darauf an, was gemacht werden soll. Z.B. das Zur\'fcckholen einer fr\'fcheren Ergebnismenge ist ein schwieriges Problem, auch das Bl\'e4ttern in einer gro\'dfen Ergebnismenge, die nicht als Ganzes \'fcbermittelt werden kann.  Wir wollen das an dieser Stelle nicht vertiefen (und RuckZuck l\'f6st diese schwierigen Probleme nicht!), sondern uns mit einigen einfachen Prozeduren begn\'fcgen. 
\par Wir betrachten als Beispiele die verschiedenen Elemente, die man in RuckZuck-Seiten sieht, und zeigen, was jeweils dahinter steckt. 
\par Damit kann man \'e4hnliche Dinge dann selber stricken. 
\par Um alles leichter durchschaubar zu machen, verwenden wir ein paar Farben: 
\par \cf1\f3 Rot \tab\cf4\f4 sind die Namen der Argumente, die dem Programm CGI.EXE \'fcbergeben werden \f3 
\par \cf2 Blau\cf1  \tab\cf4\f4 sind die zugeh\'f6rigen Werte, und \f3 
\par \cf5\b\f4 Gr\'fcn \f3\tab\cf4\b0\f4 Teile, die unver\'e4ndert immer so aussehen m\'fcssen.\cf0\f3 
\par 
\par \cf1\b\f7\fs24 Startseite\b0 
\par \cf0\fs20 Diese ist als einzige \b fest\b0  eingerichtet, die anderen mu\'df man nicht schreiben und pflegen, sondern sie werden jeweils \b dynamisch\b0  erzeugt, und zwar von einem FLEX. Der FLEX setzt in der Regel einen festen Kopfteil mit einem per Export und/oder mit "write"-Befehlen erzeugten Teil zusammen. 
\par 
\par \cf5\b\f3 <form action="/cgi-bin/cgi.exe" method=post>\cf0\b0 
\par 
\par <table> 
\par <tr> 
\par   <td ALIGN=RIGHT>Titelwort:</td> 
\par 
\par   <td><input name="\cf1 Vus1\cf0 " type=text size=40 maxlength=40 default></td> 
\par 
\par   <td>(Einzelnes Wort!)</td> 
\par </tr> 
\par 
\par <tr> 
\par   <td ALIGN=RIGHT>Personenname:</td> 
\par   <td><input name="\cf1 Vus2\cf0 " type=text size=40 maxlength=40></td> 
\par   <td>(Nachname, Vorname)</td> 
\par </tr> 
\par </table> 
\par 
\par <input type=radio name="\cf1 VusI\cf0 " value="">Suchen&nbsp; 
\par <input type=radio name="\cf1 VusI\cf0 " checked value="\cf2\b i\cf0\b0 ">Registerlisten 
\par   <br>Beide Angaben werden automatisch trunkiert. 
\par   <br>Wenn Sie in beide Felder etwas eintragen, wird mit UND verkn&uuml;pft 
\par \f0 
\par Die folgenden 4  Zeilen sind ganz typisch f\'fcr POST-Auftr\'e4ge (Formularauftr\'e4ge). Variabel ist nur der Name des FLEXes, hier \cf2\f3 find-s\cf0\f0 :\f3 
\par 
\par <\cf5\b input type="hidden"\cf0\b0  name="\cf1 flex\cf0 " value="\cf2 find-s\cf0 "> 
\par <\cf5\b input type="hidden"\cf0\b0  name="\cf1 VuwD\cf0 " value="\cf2 c:\\opac\cf0 "> 
\par <\cf5\b input type=submit\cf0\b0  value="Ausf&uuml;hren"> 
\par <\cf5\b input type=reset\cf0\b0  value="Neuer Versuch"> 
\par </form> 
\par \f0 
\par Die Zeilen vom Typ "hidden" k\'f6nnen innerhalb des Formulars an beliebiger Stelle stehen, weil sie nicht sichtbar werden. Der genannte FLEX, hier \cf2 find-s.flx\cf0 , wird mit den Formulardaten zu einem lauff\'e4higen FLEX zusammengesetzt. Beispiele siehe unten. \f3 
\par 
\par 
\par \cf1\b\f4 Links f\'fcr Neue Suche und Detail-Suche\cf0\b0\f3   
\par 
\par Auf fast allen Seiten sieht man den Link  \cf2\ul\b Neue Suche\cf0\ulnone\b0 
\par Das ist sehr einfach: es wird nur die Startseite wieder angezeigt: 
\par <\cf5\b a href="/allegro/opac.htm"\cf0\b0 > 
\par     <h3>Neue Suche</h3> 
\par </a> 
\par 
\par 
\par \f7 Der Link \cf2\ul\b Detailsuche\cf0\ulnone\b0   macht dagegen etwas ganz anderes: 
\par \f3 
\par <\cf5\b a href="/cgi-bin/cgi.exe?\cf1\b0 flex\cf0 =\cf2 detail\cf0 &\cf1 VuwD\cf0 =\cf2 c:\\opac\cf0 "> 
\par   Detail-Suche 
\par <\cf5\b /a\cf0\b0 > 
\par 
\par \f7 Aufgerufen wird das Programm CGI.EXE. Es erstellt auf dem Verzeichnis \cf2 c:\\opac\cf0  einen FLEX, der aus einer Kopie von \cf2 detail.flx\cf0  besteht. 
\par Diesen f\'fchrt a99 dann aus.  Es entsteht die Seite mit der "Suchmaske", die dann erscheint: \f3 
\par 
\par 
\par \cf1\b\f7 Detail-Suche\cf0\b0 
\par Die "Suchmaske" ist im HTML-Text ein Formular und sieht wie folgt aus. Erstellt wird diese Datei vom FLEX \b detail.flx\b0 , d..h. man mu\'df sie nicht selber erstellen! 
\par (In Wirklichkeit ist der HTM-Text nicht so sch\'f6n ordentlich einger\'fcckt!) Soll das Formular anders aussehen? Dann mu\'df man in \b detail.flx\b0  eingreifen. 
\par 
\par \f3 <\cf5\b FORM\b0  \b action="/cgi-bin/cgi.exe" method=POST\cf0\b0 > 
\par <table> 
\par <tr><td>Register: </td> 
\par     <td><SELECT name="\cf1 Vui1\cf0 " size=""> 
\par           <OPTION value="\cf2 PER 1\cf0 ">Personennamen</OPTION> 
\par           <OPTION value="\cf2 TIT 3\cf0\f4 ">Titelw\'f6rter, Schlagw\'f6rter</OPTION> \f3 
\par           <OPTION value="\cf2 TAF 4\cf0\f4 ">Titelanf\'e4nge</OPTION> \f3 
\par           ...  \f0 [etc. Auswahlliste der Register]\f3 
\par         </select> 
\par     </td> 
\par </tr> 
\par <tr><td><b>Ihr Suchbegriff:</b> </td> 
\par     <td><input name="\cf1 Vus1\cf0 " type=text size=40 maxlength=40> 
\par         <input type="Checkbox" name="\cf1 Vut1\cf0 " checked value="\cf2\b ?\cf0\b0 ">Trunkieren 
\par     </td> 
\par </tr> 
\par <tr><td>2. Register: </td> 
\par     <td><SELECT name="\cf1 Vui2\cf0 " size=""> 
\par         <OPTION value="\cf2 PER 1\cf0 ">Personennamen</OPTION> 
\par         ... 
\par         </select></td></tr> 
\par <tr><td><b>2. Suchbegriff:</b> 
\par     </td> 
\par     <td><input name="\cf1 Vus2\cf0 " type=text size=40 maxlength=40> 
\par         <input type="Checkbox" name="\cf1 Vut2\cf0 " checked value="\cf2\b ?\cf0\b0 ">              Trunkieren 
\par     </td> 
\par </tr> 
\par <tr><td>Eingrenzung: </td> 
\par     <td><SELECT name="\cf1 VurS\cf0 " size=""> 
\par           <OPTION value="\cf2 PYR\cf0 ">Erscheinungsjahr</OPTION> 
\par           <OPTION value="\cf2 TYP\cf0 ">Typ</OPTION> 
\par           <OPTION value="\cf2 BDT\cf0 ">Bestelldatum</OPTION> 
\par         </SELECT></td></tr><tr> 
\par     <td><b>Ihre Eingabe:</b> </td> 
\par     <td><SELECT name="\cf1 VuoP\cf0 " size=""> 
\par           <option value="\cf2\b >\cf0\b0 ">gr&ouml;&szlig;er als</option> 
\par           <option value="\cf2\b =\cf0\b0 ">gleich</option> 
\par           <option value="\cf2\b <\cf0\b0 ">kleiner als</option> 
\par         </select> 
\par        <input name="\cf1 VurE\cf0 " type=text size=10 maxlength=10> 
\par     </td> 
\par </tr> 
\par <tr><td> </td> 
\par     <td> \cf5\b <input type="hidden" name="\cf1 flex\cf5 " value="\cf2 find-d\cf0 ">\b0 
\par          \cf5\b <input type="hidden" name="\cf1\b0 VuwD\cf5\b " value="\cf2\b0 c:\\opac\cf0\b ">\b0 
\par          <input type=radio name="\cf1 VusI\cf0 " checked value="">Suchen 
\par          <input type=radio name="\cf1 VusI\cf0 " value="\cf2\b i\cf0\b0 ">Registerlisten 
\par     </td> 
\par </tr> 
\par <tr><td> </td> 
\par     <td> \cf5\b <input type=submit value="Ausf&uuml;hren"> 
\par          <input type=reset value="Neuer Versuch"> 
\par \cf0\b0     </td> 
\par </tr> 
\par </table> 
\par </table> 
\par <\cf5\b /FORM\cf0\b0 > 
\par 
\par \f7 Dieses Formular arbeitet mit der \cf5\b POST\cf0\b0 -Methode, typisch sind daf\'fcr die gr\'fcn markierten Teile. Das hei\'dft: 
\par Alle in rot zu sehenden \cf1 Variablen\cf0  werden an CGI.EXE gegeben, wenn der  \b submit\b0 -Button gedr\'fcckt wird (auf dem "Ausf\'fchren" steht). 
\par CDI.EXE macht daraus einen FLEX, den es auf das Verzeichnis schreibt, das mit \cf1 VuwD\cf0  angegeben ist. In diesem FLEX, stehen dann nacheinander die Variablen \cf1 #ui1, #us1, #ut1\cf0  usw., die aus den Werten \cf1 Vui1\cf0  usw. gebildet werden, dann wird der FLEX  \cf2 find-d.flx\cf0  angeh\'e4ngt. 
\par 
\par 
\par \cf1\b Registeranzeige\cf0 
\par \b0 Typisch ist folgende Anzeige. 
\par Zuerst kommen z\f4 wei Links f\'fcr das Bl\'e4ttern: \f3 
\par \b 
\par \cf2\ul\i\f8\fs24 Eine Seite h\'f6her\cf0\ulnone\f9  / \cf2\ul Eine Seite weiter\cf0\ulnone\b0\i0 
\par \pard\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f3\fs20 
\par \f7 Dahinter stecken CGI-Aufrufe, die wie folgt aussehen. Dies sind typische Beispiele f\'fcr die \b GET\b0 -Methode der CGI-Technik, im Gegensatz zu der \b POST\b0 -Methode, die immer mit einer Formularkonstruktion  <form>...</form> arbeitet. 
\par \f3 
\par \pard\cf5\b <a href="/cgi-bin/cgi.exe?\cf1\b0 flex\cf0 =\cf2 page\cf0 &\cf1 VuwD\cf0 =\cf2 c:\\opac\cf0 &\cf1 VupG\cf0 =\cf2\b -15+|3\cf0\b0 &\cf1 VurG\cf0 =\cf2 tit+3 \cf0 &\cf1 VuzL\cf0 =\cf2 shakespaere\cf5\b ">\cf0\b0 
\par Eine Seite h&ouml;her 
\par \cf5\b </a>\cf0\b0  / 
\par \cf5\b <a href="/cgi-bin/cgi.exe?\cf1\b0 flex\cf0 =\cf2 page\cf0 &\cf1 VuwD\cf0 =\cf2 c:\\opac\cf0 &\cf1 VupG\cf0 =\cf2\b 15+|3\cf0\b0 &\cf1 VurG\cf0 =\cf2 tit+3 \cf0 &\cf1 VuzL\cf0 =\cf2 shakespeares\cf5\b ">\cf0\b0 
\par Eine Seite weiter 
\par \cf5\b </a>\cf0\b0 
\par 
\par \f7 Dem Programm CGI.EXE werden hier per GET-Methode f\'fcnf Werte \'fcbergeben  (Das + steht immer f\'fcr das Leerzeichen, wie bei CGI \'fcblich): \f3 
\par \cf1 flex\cf0\f4   :  der Name der FLEX-Datei, die auszuf\'fchren ist: \cf2\f3 page\cf0 .flx 
\par \cf1 VurG\cf0   :  Name und Nummer des Registers 
\par \cf1 VuzL\cf0\f4   :  Die Zeile, mit der das Bl\'e4ttern beginnen soll \f3 
\par \cf1 VupG\cf0\f4   :  Die Anzahl Zeilen und die Nummer des Registers, aus der sie zu holen sind. Bei "Seite h\'f6her" ist die Anzahl negativ! \f3 
\par \cf1 VuwD\cf0   :  Verzeichnis, wo der a99-Server arbeitet 
\par 
\par Dann die \cf1\b Registerzeilen:  \cf0\b0\f4 (aufbereitet in D-H0.APR, wobei die Variable #uII vorher per FLEX pr\'e4pariert wird) \f3 
\par \cf2\f4\tab\ul shakespaere\cf0\ulnone\f3  (1) 
\par \cf2\f4\tab\ul\f3 shakespear\cf0\ulnone  (3) 
\par \cf2\f4\tab\ul\f3 shakespeare\cf0\ulnone  (78) 
\par \cf2\f4\tab\ul\f3 shakespeare *\cf0\ulnone  (1) 
\par \cf2\f4\tab\ul\f3 shakespeare, william -- 1564-1616 *\cf0\ulnone  (1) 
\par \cf2\f4\tab\f3 ...\ul 
\par \ulnone\f4\tab\ul\f3 shakespeares\cf0\ulnone  (32) 
\par \pard\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631      \f4  \f3 .... 
\par \pard 
\par \f7 Hinter einer typischen Zeile, der dritten, steckt dieses (auch wieder ein GET-Auftrag): 
\par 
\par \f3 <\cf5\b a href="/cgi-bin/cgi.exe?\cf1\b0 flex\cf0 =\cf2 find-d\cf0 &\cf1 VuwD\cf0 =\cf2 c:\\opac\cf0 &\cf1 VufC\cf0 =\cf2 |3+'_shakespeare'\cf0 "> 
\par shakespeare 
\par \cf5\b </a>\cf0\b0   (78) 
\par \cf1 
\par flex\cf0\f4   :  der Name der FLEX-Datei, die auszuf\'fchren ist: \b\f3 find-d.flx\b0 
\par \cf1 VuwD\cf0   :  Verzeichnis, wo der a99-Server arbeitet 
\par \cf1 VufC\cf0   :  Register und Inhalt der Zeile. Letztere mit '...' eingeschlossen und _ vorweg, da exakt gesucht werden soll. 
\par Auch in  \b VufC\b0  \f4  m\'fcssen Leerzeichen durch + ersetzt werden! \f3 
\par 
\par 
\par \cf1\b Kurzliste: Struktur einer Titelzeile\cf0 
\par \b0 
\par \pard\tx0\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\b\f10 2.    \cf2\ul\f11 Mikroprozessortechnik                  \'b7M\'fcller, He\'b71992\'b72716-0826\cf0\ulnone\b0\f10 
\par \pard\f9\fs24 
\par Der HTM-Text dahinter sieht so aus: 
\par 
\par \f3\fs20 2.    \cf5\b <a href="/cgi-bin/cgi.exe?\cf1\b0 flex\cf0 =\cf2 getrec\cf0 &\cf1 VuwD\cf0 =\cf2 c:\\opac\cf0 &\cf1 Vurn\cf0 =\cf2 229\cf0 "> 
\par \f4  Mikroprozessortechnik                  \'b7M\'fcller, He\'b71992\'b727160826 \f3 
\par \cf5\b </a>\cf0\b0 
\par 
\par \f4 Dem Programm CGI.EXE werden drei Werte \'fcbergeben: \f3 
\par \cf1 flex\cf0\f4   :  der Name der FLEX-Datei, die auszuf\'fchren ist: \cf2\b\f3 getrec.flx\cf0\b0 
\par \cf1 VuwD, Vurn\cf0\f4   :  Die Werte f\'fcr die Variablen #uwD und #urn, die der FLEX ben\'f6tigt. \f3 
\par #uwd ist das Verzeichnis, wo der a99-Server arbeitet, und #urn die interne Nummer des Satzes, der geholt werden soll. 
\par 
\par 
\par \cf1\b Link zum Bearbeiten eines Satzes\cf0\b0 
\par 
\par \cf2\ul\b Bearbeiten\cf0\ulnone\b0 
\par 
\par \f7 Auch hier steckt ein CGI-Befehl dahinter, nur mit einem anderen FLEX: 
\par 
\par \cf5\b\f3 <a href="/cgi-bin/cgi.exe?\cf1\b0 flex\cf0 =getedit&\cf1 VuwD\cf0 =c:\\opac&\cf1 Vurn\cf0 =43"> 
\par    Bearbeiten 
\par \cf5\b </a>\cf0\b0 
\par 
\par \f7 Der FLEX  getedit.flx  produziert damit die Seite, die man anschlie\'dfend sieht, mit eingebettetem Bearbeitungsformular. 
\par Soll dieses anders aussehen: einen anderen FLEX schaffen, abgeleitet von getedit.flx, und dessen Namen oben einsetzen. 
\par Auch der Baustein GETEDIT.HTM (Kopfteil der Ergebnisseite) mu\'df evtl. modifiziert werden. 
\par \f3 
\par \f9\fs24 
\par 
\par \cf1\b\f7\fs20 Bearbeitungsformular\cf0\b0 
\par 
\par \b Beispiel:\b0  So sieht in HTML das Formular aus, das zum Editieren vorgelegt wird. 
\par Erzeugt wird es von GETEDIT.FLX und D-EDIT.APR (nur f\'fcr die TEXTAREA), wodurch die in blau zusehenden Werte des aktuellen Satzes eingef\'fcgt werden. 
\par Darin sind die Stellen f\'fcr Anpassungen mit XXX markiert! Beim Absenden wird der FLEX  \b write.flx\b0   angesto\'dfen. 
\par Als Kopf wird GETEDIT.HTM benutzt. Zu beachten ist die Variable VusM f\'fcr den Speichermodus: Ist diese besetzt, wird im FLEX der Befehl \b new\b0  gegeben, womit der \'fcbergebene Satz als neuer Satz gespeichert wird. Diese Setzung nimmt schon das Programm CGI.EXE vor, es steht nicht im WRITE.FLX. Das mu\'df sein, weil schon vor dem WRITE.FLX die Feldinhalte eingesetzt werden, und new mu\'df davor kommen. 
\par 
\par \cf4\b\f3 ...\cf5 
\par <form name=\cf0\b0 "Satz" \cf5\b action="/cgi-bin/cgi.exe" method=POST \cf0\b0 onSubmit="return CheckIn();"> 
\par \cf5\b <input type="hidden" name="\cf1 flex\cf5 " value="\cf2 write\cf5 "> 
\par <input type="hidden" name="\cf1 VuwD\cf5 " value="\cf2 c:\\opac\cf5 ">\cf0\b0 
\par <input type="hidden" name="\cf1 Rnum\cf0 " value="\cf2 #350\cf0 "> 
\par <input type="hidden" name="\cf1 Vurn\cf0 " value="\cf2 350\cf0 "> 
\par <input type="hidden" name="\cf1 VueD\cf0 " value="\cf2 20010303\cf0 "> 
\par <\cf5\b input type=submit value=\cf0\b0 "Speicherung ausf&uuml;hren"> 
\par <input type=radio name="\cf1\b VusM\cf0\b0 " checked value="">als Korrektur 
\par <input type=radio name="\cf1\b VusM\cf0\b0 " value="\cf2\b i\cf0\b0 ">als Neusatz 
\par <table> 
\par <tr> 
\par  <td><b>Titel:</b> </td> 
\par  <td><font face="allegro Lucida Console"> 
\par  <input name="\cf1 V20 \cf0 " type=text size=100 maxlength=200 value="\cf2\f4\'acThe\'ac Prince and the \f3 
\par    professor\cf0 "></td> 
\par  </tr> 
\par <tr> 
\par <td><b>Name:</b> </td> 
\par <td><font face="allegro Lucida Console"> 
\par <input name="\cf1 V40 \cf0 " type=text size=100 maxlength=200 value="\cf2 Fleissner, Robert F\cf0 "></td> 
\par </tr> 
\par <tr><td valign=top><b>Rest:</b> </td> 
\par <td><font face="allegro Lucida Console"> 
\par <\cf5\b TEXTAREA name="Text"\cf0\b0  rows=12 cols=100> 
\par \cf2 #30asl 
\par \f4 #31p_s4054714; Goethe, Johann Wolfgang \'acvon; Marlowe, Christopher; Frost, Robert \f3 
\par #31tHamlet; Faust 
\par #74 Heidelberg 
\par #75 Winter 
\par #76 1986 
\par #77 XXVII, 217 S. 
\par \f4 #85 Beitr\'e4ge zur neueren Literaturgeschichte Folge 3 ; 73 \f3 
\par #87 3-533-03791-6 = 3-533-03792-4 
\par #90 2651-4101 
\par \cf5\b </TEXTAREA>\cf0\b0 
\par </td></tr> 
\par </table><br> 
\par </form><hr> 
\par ... 
\par 
\par 
\par Zu guter Letzt 
\par \b\f0 Hinweis zum Laden eigener Daten\b0  
\par Mehr zu dem Thema steht in einem eigenen Text \'fcber `\cf2\ul\b Fremddaten\cf0\ulnone\b0 `. 
\par Das gilt in dieser Form f\'fcr Datenbanken mit dem CoOL-Schema. 
\par Sollen eigene Daten in die Datenbank eingemischt werden, mu\'df man eine Datei EXTERN.DAT in folgender Form bereitstellen (und zwar auf dem Verzeichnis, wo man a99 gestartet hat): 
\par \f3 #00  IdNr  <optional>\f0 
\par \f3 #20  Titel\f0  
\par \f3 #8e  URL\f0  
\par \f4 #30  Sachgruppe (z.B. ma f\'fcr Mathematik; s. Register 7)\f0  
\par \f4 #0c  Rubrik (z.B. 015 f\'fcr E-Journal; s. Register 7 unter F)\f0  
\par \f3 #40  Verfassername (falls einer existiert)\f0  
\par \f4 #61  K\'f6rperschaftsname\f0  
\par \f3 #88  ISSN\f0  
\par \f3 #98  Annotation\f0  
\par Zwischen zwei Datens\'e4tzen eine Leerzeile. 
\par Zeichencodierung: DOS-ASCII. 
\par Weitere Kategorien: siehe \cf4 `\cf2\ul\b "allegro"-Formatdokumentation\cf4\ulnone\b0 `\cf0 . 
\par Das Einlesen geht dann so: In a99 w\'e4hlt man den Men\'fcpunkt` "Datei | Externe Ergebnismenge laden", dann wird die Datei EXTERN.DAT zunaechst in einer Kurz\'fcbersicht angezeigt. Wenn alles richtig aussieht: "Datei | Offline-Datei - Datenbank". 
\par Lange Datenfelder, z.B. #98, k\'f6nnen umgebrochen sein, dann mu\'df aber jede Fortsetzungszeile mit einem Leerzeichen anfangen. 
\par 
\par 
\par 
\par ?Wer kann RuckZuck brauchen?=h =1. Wer kann RuckZuck brauchen 
\par ?Was ist RuckZuck?=h =2. Was ist "RuckZuck"? 
\par ?Wie startet man RuckZuck?=h =3. Wie startet man RuckZuck? 
\par ?Funktionsweise=h =4. Wie geht das? 
\par ?Was macht/sieht der Nutzer?=h =5. Der Ablauf 
\par ?FLEXe, Hinweise f\'fcr CGI-Kundige=h =6. Liste der FLEXe 
\par ?Hinweise f\'fcr allegro-Kenner=h =7. Hinweise 
\par ?HTML-Dokumentation=h =8. HTML-Dokumentation 
\par ?"allegro"-Formatdokumentation=h aca-1 
\par ?allegro-WWW-Schnittstelle=x jan http://www.allegro-c.de/ac-dbs.htm 
\par ?"populo"-Paket=x jan http://www.gymel.com 
\par ?Fremddaten=h fremd 
\par ?PHP=h phpac 
\par ?XAMPP-Paket=x jan http://www.apachefriends.org/de/xampp-windows.html#628 
\par }
 