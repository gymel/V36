{\rtf1\ansi\ansicpg932\deff0\deflang1031{\fonttbl{\f0\fswiss\fprq2\fcharset0 Verdana;}{\f1\fmodern\fprq1\fcharset0 Lucida Console;}{\f2\froman\fprq2 allegro New Roman;}{\f3\froman\fprq2\fcharset0 allegro New Roman;}{\f4\fmodern  allegro Lucida Console;}{\f5\fmodern\fcharset0  allegro Lucida Console;}{\f6\fmodern\fprq1\fcharset0 Courier New;}{\f7\fmodern\fprq1 Courier New;}{\f8\froman\fprq2\fcharset2 Symbol;}{\f9\fswiss\fprq2 Arial;}{\f10\fswiss\fprq2\fcharset0 Arial;}}
{\colortbl ;\red255\green0\blue0;\red0\green0\blue0;\red220\green0\blue0;\red0\green0\blue255;}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\li142\qc\f0\fs24   \par
\b\fs28 Was sollte man noch wissen \'fcber \par
\pard\li142\fs32\par
\pard\li142\qc\cf1 Bits\cf0  und \cf1 Bytes\cf0 , \cf1 Daten\cf0  und \cf1 Dateien\cf0 ? \par
\pard\li142\b0\fs20\par
Fangen wir mal ganz anders an. Nicht am unteren Ende (bei den Bits) und nicht am oberen (bei den Datenbanken), sondern in der Mitte. Da liegt das, was jeder kennt: der \b Datensatz\b0 , in Bibliotheken fr\'fcher \i Titelaufnahme\i0  genannt. %=x set db`var "Mit F11 kann man die Anzeige wieder normal machen!"`sho iv% \par
Hier ist ein Datensatz:  (wie er in vielen \i allegro\i0 -Datenbanken aussieht) \par
\par
\f1\fs18 #00 216478049 \par
#20 \'acDer\'ac Herzogsproze\'df : ein Bericht \'fcber den Proze\'df des welfischen Herzogshauses gegen den \par
 Freistaat Braunschweig um das Kammergut (1921/25) \par
#30age \par
#30k15.51 \par
#31sF\'fcrstenabfindung; Braunschweig <Staat> \par
#37 de \par
#39 von Burkhard Schmidt \par
#40 Schmidt, Burkhard \par
#74 Wolfenb\'fcttel \par
#75 Braunschweig. Geschichtsverein \par
#76 1996 \par
#77 184 S. : Ill \par
#81 Literaturverz. S. 172 - 176 \par
#85 Beihefte zum Braunschweigischen Jahrbuch ; 12 \par
#87 3-928009-10-9 \par
#89D952579413 \par
#90 Q4-1234 \par
\f0\fs20\par
Verwirrend? Altgediente \i Bibliothekare\i0  erwarten vielleicht so etwas wie das hier: \par
\pard\li142\qc\par
\pard\li142\qr\b\f2\fs22 Signatur: Q4-1234 \par
\pard\li142\cf2 Schmidt, Burkhard:\b0\par
\b\f3 Der Herzogsproze\'df\b0  : ein Bericht \'fcber den Proze\'df des welfischen \f2\par
Herzogshauses gegen den Freistaat Braunschweig um das Kammergut (1921/25) \par
/ von Burkhard Schmidt. \par
\f3 Wolfenb\'fcttel : Braunschweig. Geschichtsverein, 1996. - 184 S. : Ill\i\f2\par
(Beihefte zum Braunschweigischen Jahrbuch ; 12)\i0\par
ISBN 3-928009-10-9 \par
Literaturverz. S. 172 - 176 \par
\cf3 Themen: \cf2\f3 F\'fcrstenabfindung; Braunschweig <Staat> \f2\par
\pard\li142\qc\f4\fs18\par
\pard\li142\f0\fs20\tab\par
Oder so \'e4hnlich. Warum kann man Daten nicht \i so\i0  eingeben und speichern? Das hat zwei Gr\'fcnde: \par
1.\tab Computer sind zu dumm. Sie brauchen die Daten in kleineren H\'e4ppchen, sonst k\'f6nnen sie die Angaben nicht sicher unterscheiden und getrennt auffindbar machen. Deshalb sollte man alles in Elemente zerlegen. Die nennt man "Datenfelder". Oben sieht man das. \par
2.\tab Ein Online-Katalog soll nicht nur ein elektronischer Zettelkatalog sein! Er soll noch andere Funktionen erf\'fcllen (Erwerbung, Ausleihe) und andere Produkte hervorbringen (Listen verschiedenster Art, Statistiken). Auch deshalb sind die Daten in Elemente zu zerlegen, die man auch getrennt verwenden kann und mit denen Programme arbeiten k\'f6nnen. Dabei ist eine strikte, formale Einheitlichkeit wichtig - Automatismen gehen sonst schief, weil sie keine echte Intelligenz besitzen. \par
\par
Altgediente \i Datenbankleute\i0  erwarten dagegen was ganz anderes, n\'e4mlich sowas wie eine \i Tabelle\i0 : \par
\par
\par
\i IdNr\tab\tab\i0 Titel\tab\tab\tab Verfasser\tab\tab Ort\tab\tab\tab Verlag\tab\tab Jahr\tab ...\tab\par
\i ...\tab\i0 ...\tab\tab\tab\tab\tab\tab\par
\f4\fs18 216478049\f0\fs20\tab\f5\fs18\'acDer\'ac Herzogspr..\f0\fs20  \tab\f4\fs18 Schmidt, Burkh.\f0\fs20\tab\f6 Wolfenb\'fcttel\f7\tab\f0 Geschichtsverein\tab\f7 1996\tab\f0 ...\tab\par
\f4\fs18 ...\tab ...\tab\tab\f0\fs20\tab\tab\tab\tab\par
\par
Warum wird's nicht \i so\i0  gemacht? Das hat mehr als zwei Gr\'fcnde, die an anderer Stelle ausf\'fchrlich zusammengestellt wurden: "Vergleichende Gegen\'fcberstellung \i allegro\i0  - Relationale Datenbanksysteme", `\cf4\ul http://www.allegro-c.de/a-r.htm\cf2\ulnone `. (Die Tabelle ist das Grundkonzept der relationalen Datenbanken!) \par
Wichtige Gr\'fcnde sind: \par
\f8\'b7\tab\f0 Man braucht sehr viele Spalten, d.h. die Tabelle wird un\'fcbersichtlich breit, \par
\f8\'b7\tab\f0 Schwierig und un\'fcbersichtlich wird es auch, wenn lange Inhalte auftreten (Titel, Namen) \par
\f8\'b7\tab\f0 Etliche Felder werden recht selten gebraucht, d.h. man hat oft viele leere Spalten, \par
\f8\'b7\tab\f0 Mehrfachfelder (z.B. f\'fcr Personen und Schlagw\'f6rter) sind nicht gut m\'f6glich, \par
\f8\'b7\tab\f0 Strukturen innerhalb von Spalten werden vom System nicht unterst\'fctzt (z.B. Nichtsortierzeichen oder vorgeschriebene Interpunktion, Unterfelder) \par
\f8\'b7\tab\f0 Einf\'fcgen neuer Spalten in eine einmal existierende Datenbank ist schwierig. \par
\par
Die Tabelle ist somit nicht die beste Idee f\'fcr Bibliotheksdaten. (F\'fcr Neugierige steht in einem anderen Papier ganz ausf\'fchrlich, warum es so ist und was die besonderen Anforderungen bibliographischer Daten sind: `\cf4\ul http://www.allegro-c.de/formate/formneu.htm\cf2\ulnone `) \par
\par
Wir halten fest: Ein Datensatz besteht in fast allen Systemen aus numerierten Elementen, wie z.B. \par
\f4\fs18 #40 Schmidt, Burkhard\f0\fs20\par
was ja offenbar ein Verfassername ist. Und \b\f7 #20\b0\f0  steht wohl f\'fcr den Titel, \b\f7 #76\b0\f0  f\'fcr das Erscheinungsjahr - einiges kann man erraten. Diese Elemente werden oft \i Kategorien\i0   genannt. Das hat sich im Bibliothekswesen so eingeb\'fcrgert, in der Informatik jedoch nicht, da spricht man von \i Datenfeldern\i0 . Die Datenfelder haben Nummern, die man auch \i tags\i0  nennt (das ist Englisch und hei\'dft sowas wie \i Etikett\i0  ). Es gibt mehrere solche Nummernsysteme, die man auch "Bibliothekarische Datenformate" nennt: das weltweit bekannteste ist MARC21. In Deutschland wird f\'fcr den Austausch von Daten MAB2 verwendet. \i allegro\i0  -Anwender benutzen meistens das leichter zu lernende und zu handhabende "Konsolidierte Format": \par
`\cf4\ul http://www.allegro-c.de/doku/form2004\cf2\ulnone ` . \par
Es gibt noch andere, und MARC wie auch MAB sind von System zu System immer irgendwie anders. \par
Innerhalb einer Datenbank m\'fcssen die Daten einheitlich sein, daher ist am Anfang, wenn man eine neue Datenbank aufmachen will, die Entscheidung f\'fcr eines der Formate zu treffen. Alles \'fcber Bibliothekarische Datenformate und vieles mehr verr\'e4t die Web-Adresse  `\cf4\ul http://www.allegro-c.de/formate/\cf2\ulnone ` . \par
\par
Summa summarum: aus der Titelkarte im Zettelkatalog wird ein \b Datensatz\b0  im Online-Katalog. Der Online-Katalog ist eine besondere Art von \b Datenbank\b0 . Eine Datenbank besteht also aus einer Menge von Datens\'e4tzen und ein Datensatz aus einer Anzahl von Datenfeldern, d.h. wir haben es mit drei Ebenen zu tun: \par
\par
\pard\li142\qc\b\fs48 Datenbank\b0\fs20   enth\'e4lt  \b\fs36 Datens\'e4tze\b0\fs20   bestehend aus  \b\fs24 Datenfeldern\b0\fs20\par
\pard\li142\par
\b Was ist anders als bei Karteien? \par
\b0 Einen Zettelkatalog - das ist nichts anderes als eine Kartei - kann sich jeder vorstellen. Neue Zettel werden von Hand an den richtigen Stellen eingeordnet. Wie ist das bei einer Datenbank, was passiert da mit neuen Datens\'e4tzen? Das Eintippen der Daten ist Handarbeit, wie fr\'fcher das Schreiben der Zettel, aber das Einordnen (hier sagt man "Abspeichern"), damit man alles hinterher leicht wiederfindet, das passiert vollautomatisch. Allerdings nur, weil f\'fcr diese Aufgabe eine Software da ist, ein Programmsystem, das sich \b Datenbanksystem\b0  nennt. Von sich aus, nur mit \i Windows\i0  oder\i  UNIX \i0 ausgestattet, kann ein Computer das nicht machen - von Hause aus hat er davon keine Ahnung. \par
\i allegro\i0  ist ein solches Datenbanksystem. \i Pica\i0  ist ein ganz anderes, und es gibt noch viel mehr von der Sorte. \par
Den Datensatz kann man sich gut vorstellen, man kann ihn ja sehen. Sowas wie ein kleiner Text ist das, ein Dokument, aufschreibbar auf einer Karteikarte oder einem Blatt Papier. Aber wie kann man sich die Datenbank genauer vorstellen? Ist das nur ein gro\'dfes Dokument, das sich aus vielen kleinen (eben den Datens\'e4tzen) zusammensetzt? Das w\'e4re zu simpel, es geh\'f6rt noch einiges mehr dazu. Es ist auch mehr als ein Karteischrank voller Zettel oder ein Ordner voller Dokumente. Solche Vorstellungen taugen nur f\'fcr den Anfang. \par
Fragen wir noch mal etwas anders: \par
\par
\b Ist ein Datensatz eine Datei - ist die Datenbank ein Ordner? \par
\b0 Nein, so einfach ist das auch wieder nicht. Wer mit Windows arbeitet, wird immer wieder mit "Ordnern" konfrontiert. Die Ordner haben Namen, z.B. gibt es da den Ordner "Eigene Dateien". L\'e4\'dft man sich  einen Ordner vom "Explorer" oder vom "Arbeitsplatz" aus zeigen, dann sieht man eine Menge Namen und Symbole. Diese stehen f\'fcr weitere Ordner (Unterordner) oder f\'fcr \b Dateien\b0 .  Die Ordner und Unterordner erkennt man an Symbolen, die so aussehen wie eine Karteischublade oder eine Aktenmappe: man soll intuitiv ahnen: da stecken mehrere Dinge (Dokumente oder Dateien) drin. \par
\'dcbrigens: das englische Wort f\'fcr "Datei" ist \b file\b0 . Das hei\'dft zugleich "Kartei". Die Ordner werden "folder" genannt. \par
Klickt man auf ein solches Symbol, dann erscheint, was drinsteckt: der Inhalt des Ordners, und das ist ein neues Sortiment von Symbolen und Namen - ein Unterordner kann wieder weitere Unterordner und weitere Dateien umfassen. \par
Die Symbole sind \'fcbrigens nur eine Orientierungshilfe f\'fcr den Nutzer, von Microsoft spendiert, sie sind nicht gespeichert, sie geh\'f6ren nicht zum Inhalt der Ordner und Dateien. \par
\par
\b Aber was \i ist\i0  wirklich eine "Datei"? \par
\b0 Computer speichern alles in Dateien, wirklich \i alles\i0 . Auch ein Dokument ist nur eine Datei, auch Bilder und Filme.\par
Auch Programme sind Dateien! Man nennt solche auch "ausf\'fchrbare" Dateien, denn es stehen lauter Befehle drin, die der Computer ausf\'fchren kann - wenn er die Sprache beherrscht, in der das Programm geschrieben ist. \par
\par
Haben Sie irgendwie das Gef\'fchl, noch nicht alles kapiert zu haben? Es gibt noch einen `\cf4\ul\b anderen Text\cf2\ulnone\b0 `, der das Thema etwas anders anpackt! \par
\par
Aber eine Daten\i bank\i0  ist \i mehr\i0  als \i eine\i0  Datei, es geh\'f6ren mehrere dazu. Diese Dateien stecken zwar meistens alle in einem Ordner, aber nicht unbedingt: das ist Sache der Software. Ein Daten\i satz\i0  ist \i weniger\i0  als eine Datei, denn meistens stecken sehr viele Datens\'e4tze zusammen in \i einer\i0  Datei. \par
\i\par
Abschweifung : \i0  Was hei\'dft eigentlich "eine Datei \'f6ffnen"? \par
\f8\'b7\tab\f0  Man doppelklickt auf ein Dateisymbol um die Datei zu \'f6ffnen - jeder kennt das. Das wirkt so selbstverst\'e4ndlich, ist es aber nicht. Windows verbirgt dabei die Tatsache: Es geht nicht ohne ein Programm, das mit der Datei etwas anfangen kann. Und wie hei\'dft dieses Programm? Das sieht man an der Stelle nicht.\par
\f8\'b7\tab\f0 Wenn die Datei einen Namen hat, der mit .DOC endet, dann wird das Programm Word gestartet und Word \'f6ffnet die Datei. Oft hei\'dft es hier zwar \i Dokument,\i0   es ist aber nichts anderes als eine Datei. Wenn man Word nicht installiert hat, kann der Computer eine DOC-Datei nicht \'f6ffnen. Sie erscheint ihm dann als eine unbekannte Datei - als eine lange Folge von Zahlen und sonst nichts. Wenn andersrum ein Dateiname mit .DOC endet, ist es nicht unbedingt eine Word-Datei, es kann also passieren, da\'df Word daran scheitert. Nicht der Name ist entscheidend, sondern die Struktur des Inhalts.\par
\f8\'b7\tab\f0 Oft gibt es mehr als ein Programm, mit dem man eine Datei \'f6ffnen kann! Windows nimmt automatisch dasjenige, das f\'fcr die Namenserweiterung intern eingetragen ist. Wer Bescheid wei\'df , kann aber ein anderes nehmen - und dann sieht die Datei u.U. etwas anders aus, obwohl der Inhalt (die Zahlenfolge) nat\'fcrlich derselbe ist. \par
\f8\'b7\tab\f0 Wenn die Datei einen Namen hat, der mit .EXE endet, ist es ein Programm, und "\'f6ffnen" ist dann ein ung\'fcnstiges Wort, man k\'f6nnte besser "starten" sagen. \par
\f8\'b7\tab\i\f0 Aber:\i0  Wenn man an einen Dateinamen einfach .DOC anh\'e4ngt oder .EXE, dann wird aus der Datei keineswegs ein Word-Dokument bzw. ein Programm! So einfach ist das nicht. \par
\par
\i Tip: \i0 Windows hat im "Explorer" oder "Arbeitsplatz" eine Einstellm\'f6glichkeit unter "Extras / Ordneroptionen / Ansicht", die da lautet "Erweiterungen bei bekannten Dateitypen ausblenden". Nehmen sie das Kreuzchen weg, das dort normal eingestellt ist! Machen Sie das unbedingt, Sie werden sonst in den Datei\'fcbersichten unvollst\'e4ndig informiert. \par
\par
\b Aus was \i besteht\i0  eine Datei?\b0\par
Jede Datei hat einen \cf1 Namen\cf2  und einen \cf1 Inhalt\cf2 . In der \'dcbersicht des Ordners sieht man die Namen und ein Symbol. Dieses geh\'f6rt, wie gesagt, nicht zur Datei! Windows hat eine Liste von Namenserweiterungen und ordnet diesen jeweils ein Symbol zu, aber genau genommen hat dieses mit der Datei nichts zu tun. \par
Der \cf1\b Dateiname\cf2\b0  (auch ein Ordnername) kann  bis zu 255 Zeichen lang sein, inkl. der Erweiterung. Es ist sehr zu raten, nicht solche langen Namen zu verwenden, denn das hat Nachteile. Wenn man aufgefordert wird, einer Datei einen Namen zu geben (z.B. bei "Speichern unter..."), halte man sich an folgende Regeln (es sei denn, man wei\'df genau, was man will und warum): \par
\f8\'b7\tab\f0 Nicht mehr als 20 Zeichen \par
\f8\'b7\tab\f0 Nur \b Klein\b0 buchstaben, Ziffern und Bindestrich verwenden \par
\f8\'b7\tab\f0 Ein Punkt nur zwischen Name und Erweiterung \par
\f8\'b7\tab\f0 Keine Leerzeichen im Namen (besonders wichtig) \par
\f8\'b7\tab\f0 Keine Umlaute oder anderen Sonderbuchstaben \par
\f8\'b7\tab\f0 Keine andere Erweiterung als die automatisch vorgeschlagene. Wenn keine vorgeschlagen wird, dann nicht mehr als drei Zeichen. \par
\par
Diese Regeln sind nicht zwingend, d.h. Microsoft besteht nicht darauf, aber man erspart sich damit wirklich \'c4rger, z.B. bei der \'dcbertragung von Dateien nach UNIX oder Linux. \par
\i Nebenbei:\i0  Word, hilfreich wie es ist, schl\'e4gt als Namen immer die erste Zeile des neuen Textes vor. \'c4ndern Sie das dann unbedingt, denn fast immer ist so ein "Name" viel zu lang und enth\'e4lt Leer- und Sonderzeichen. \par
\par
Fr\'fcher, zu DOS-Zeiten, durfte ein Name nur aus 8 Zeichen plus 3 Zeichen Erweiterung bestehen. Viele halten sich noch heute daran, um keine Probleme beim Kopieren zwischen den Plattformen, beim Austausch mit anderen Anwendern und bei der Arbeit unter DOS zu haben. Auch alle offiziellen \i allegro\i0 -Dateien folgen dieser Regel. \par
\par
Der \cf1\b Inhalt einer Datei\cf2\b0 , ob .DOC oder .EXE oder .TXT oder sonstwas, ist (wir sagten es schon) \i immer\i0  nur eine Folge von Zahlen, und zwar Zahlen zwischen 0 und 255. Das sind die Zahlen, die man mit 8 Nullen und Einsen (sog. Bits) codieren kann, daher kommt das. (Ab 256 braucht man 9 Bit.) Eine Folge von 8 Bit nennt man auch \b Byte\b0 . Auf den unteren Ebenen k\'f6nnen die Rechner nur mit Bytes arbeiten, daher ist das eine so wichtige Einheit. \par
Zum Verst\'e4ndnis sehr wichtig: In der Datei steht keine Information \'fcber sich selbst, sie enth\'e4lt keine Angaben (sog. "Metadaten") zu ihrer eigenen Struktur und zu ihrem Inhalt! Wenn man nur die Zahlenfolge betrachtet, wird man nicht schlau draus. Der Dateityp, .DOC oder .html oder was auch immer, ist eine \'c4u\'dferlichkeit, die vollkommen irref\'fchrend sein kann. \par
Die kleinste m\'f6gliche Datei hat 0 Byte Inhalt, d.h. sie besteht nur aus ihrem Namen. Nach oben gibt es kaum eine Grenze.  Wenn man sich von einem Ordner die "Detail"-Ansicht ansieht, erkennt man, wie gro\'df jede Datei ist. Meistens ist das angegeben in K, wobei ein K = 1024 Byte ist. (Warum 1024? Das ist 2 hoch 10.)\up10\fs13\par
\up0\fs20\par
Wo sind aber die \i Buchstaben\i0  in einer Textdatei, wenn die nur aus Zahlen besteht? Sie sind nat\'fcrlich verschl\'fcsselt. Jeder Buchstabe bekommt eine Nummer zugeordnet, z.B. wird das 'A' mit 65, das 'a' aber mit 97 verschl\'fcsselt. Meistens jedenfalls! Eine Software kann es u.U. auch anders machen, das kann der Nutzer nicht sehen. Was er sieht, ist fast nie das, was \i wirklich\i0  gespeichert ist. Das erschwert an vielen Stellen das Verst\'e4ndnis,  das ist klar, mit Intuition kann man das nicht durchschauen. \par
Au\'dfer den \i Textzeichen\i0  braucht eine Textdatei noch mindestens ein besonderes \i Steuerzeichen\i0  f\'fcr "Neue Zeile". Unter DOS/Windows sind das zwei Zeichen: die Codes 13 und 10 hintereinander. Sie sind  normalerweise unsichtbar, wenn man die Datei "\'f6ffnet". Was man sieht, ist ihre Wirkung: es beginnt eine neue Zeile.  Unter UNIX ist es nur der Code 10, der zwei Zeilen trennt. Ein anderes Steuerzeichen kommt auch oft vor: Code 09 f\'fcr "Tabulator". Eine TXT-Datei enth\'e4lt nur Text und diese wenigen Steuerzeichen, eine .DOC-Datei enth\'e4lt noch sehr viel mehr Steuerzeichen - nur WinWord kennt sie alle und kann damit umgehen... \par
Neuerdings wird immer mehr mit \b Unicode\b0  gearbeitet. Das ist eine Methode, mit der man mehr als 256 verschiedene Zeichen codieren kann. Was \'fcber die normalen Buchstaben und Ziffern hinausgeht, das wird mit Hilfe von zwei oder drei Bytes verschl\'fcsselt. Das 'a' ist dabei weiterhin Code 97, aber '\'e4' besteht aus zwei Codes: 195/164 statt 132 bei DOS und 228 bei Windows! \par
Mehr dazu steht in einem eigenen Kapitel `\cf4\ul http://www.allegro-c.de/unicode/\cf2\ulnone `. \par
\par
\par
Eine \b Datenbank\b0\par
\f8\'b7\tab\f0 Besteht meistens aus mehreren Dateien \par
\f8\'b7\tab\f0 Diese m\'fcssen nicht im selben Ordner liegen, tun es aber meistens \par
\f8\'b7\tab\f0 Die Dateien unterscheiden sich mehrfacher Hinsicht: \par
\tab 1.\tab Inhalt  (was f\'fcr Angaben stecken drin?) \par
\tab 2.\tab Struktur  (wie sind die Angaben gestaltet und codiert?) \par
\tab 3.\tab Funktion  (was wird damit gemacht, wof\'fcr wird die Datei gebraucht?) \par
\tab 4.\tab Wichtigkeit (manche Dateien d\'fcrfen fehlen, andere sind extrem wichtig) \par
\tab 5.\tab Gr\'f6\'dfe (das ist die Anzahl der Bytes) \par
Mindestens eine der Dateien enth\'e4lt die Daten, die man eingetippt hat, das d\'fcrfte klar sein. Aber welche ist es? Und wozu gibt es da noch andere Dateien - \i sollte\i0  man das wissen, sollte man sich darum k\'fcmmern? Im Prinzip k\'f6nnte es reichen, wenn die \i Software\i0  alles wei\'df, aber es gibt Situationen, wo ein paar Kenntnisse doch sehr helfen. Denn Wissen gibt Sicherheit, Unwissenheit macht abh\'e4ngig und verletzbar. \par
Am Beispiel einer \i allegro\i0 -Datenbank sind die Dinge gut erkl\'e4rbar. (\f8 B\f0 ei anderen Systemen kann es \'e4hnlich, aber auch v\'f6llig anders aussehen.) Ganz ausf\'fchrlich steht es in den Kapiteln 0.3 und 0.8 des Handbuchs. Hier beschreiben wir nur die wichtigen Bestandteile, die immer gebraucht werden. \par
Die Datenbank braucht einen Namen. Der Name der Demo-Datenbank ist \b\f7 CAT\b0\f0 . Die Namen der zugeh\'f6rigen Dateien beginnen deshalb alle mit \f7 CAT\f0 . Die wichtigsten Dateien sind diese: \par
\f9\fs18\par
\pard\li142\tx1988\tx3266\i Datei\f10  \tab\f9 Name.Typ\tab Wozu ist sie gut, was steht drin?\tab\i0\par
Datendateien\tab   \f7 CAT_1.ALD\tab\f9 Enthalten die eingegebenen Daten. Solche Dateien kann es mehrere geben\f7\tab\f9  \tab\par
\lang1040\f10 Indexdatei\tab   \f7 CAT.ADX\tab\lang1031\f10 Die alphabetischen Register, \'fcber die man zugreift\f9\tab\par
Kurztiteldatei\tab   \f7 CAT.STL\tab\f9 Die Kurzzeilen, die man sieht, wenn man eine Ergebnismenge betrachtet\tab\par
Adressentabelle\tab   \f7 CAT.TBL\tab\f10 Die Adressen (= Positionen) der Datens\'e4tze in den Datendateien\f9\tab\par
*Restriktionendat. \f10\tab   \f7 CAT.RES\tab\f10 Hilfsdatei zur Einschr\'e4nkung von Erg.Mengen (nicht bei jeder Datenbank)\f9\tab\par
*LOG-Datei\tab   \f7 CAT.LOG\tab\f10 Zur Datensicherung: Kopien der neuen und ver\'e4nderten Datens\'e4tze\f9\tab\par
Konfiguration\tab   \f7 A.CFG\tab\f9 Darin steht, welche Datenfelder es geben kann und andere Einstellungen\tab\par
Indexparameter\tab   \f7 CAT.API\tab\f10 Vorschriften f\'fcr die Bildung der Index-Eintr\'e4ge aus den Daten\f9\tab\par
Anzeigeparameter \f10\tab   \f7 D-*.APR\tab\f10 Vorschriften f\'fcr den Aufbau der Anzeige eines Datensatzes\f9\tab\par
\lang1040\f10 *INI-Datei\tab   \f7 CAT.INI\tab\lang1031\f10 Einstellungen f\'fcr die Benutzung der Datenbank\f9\tab\par
\par
\pard\li142\f0\fs20 Genau diese Dateien liegen manchmal alle zusammen in einem Ordner, die letzten vier aber oft woanders, und zwar im Programmordner (normalerweise \b\f7 c:\\allegro\b0\f0  ). Als Beispiel schauen Sie sich den Ordner \b\f7 demo2\b0\f0  an, der an Ihrem \i allegro\i0 -Programmordner h\'e4ngt. \par
Was man eintippt, das steckt das Datenbanksystem also alles nur in die Dateien des Typs .ALD, die anderen Dateien werden mitgeliefert oder legt das System selber an, und sie lassen sich notfalls (\'fcber das "Reorganisieren"-Men\'fc ) wiederherstellen. Die mit * markierten Dateien sind nicht lebensnotwendig, aber wenn eine der anderen fehlt, kann man mit der Datenbank nicht arbeiten, die Software streikt dann mit entsprechenden Fehlermeldungen. \par
Die letzten vier Dateien sind schlichte Textdateien, die man modifizieren kann. Ein Hilfsprogramm f\'fcr die Bearbeitung von Textdateien, ein sog. \b Editor\b0  , wird dazu gebraucht. Theoretisch kann man WinWord nehmen, es wird aber davon abgeraten! Der Anhang D des Handbuchs beschreibt, wie man den zu \i allegro \i0 geh\'f6rigen Texteditor X.EXE benutzt. Das kann man in wenigen Minuten lernen, so einfach ist es. Weil man dabei automatisch ein besseres Gef\'fchl daf\'fcr bekommt, was Dateien eigentlich sind (jedenfalls  Textdateien), wird es sehr dringend empfohlen, den Umgang mit diesem Editor zu lernen. \par
\i Geheimtip:\i0  Geben Sie im Schreibfeld ein: \par
\f7 `\cf4\ul\b h dos\cf2\ulnone\b0 ` \par
\f0 dann erhalten Sie eine Kurzeinf\'fchrung mit \'dcbung. Sie werden es kaum bereuen, wenn Ihnen bisher auch noch nie so recht klar war, was DOS eigentlich ist. (Jedoch: In einem Windows-64bit-System gibt es DOS nur noch mit besonderen Tricks.)\par
\par
Noch viel mehr zum spannenden Thema "Bibliothekarische Daten" steht in einem Kapitel des Standardwerks "Was sind und was sollen bibliothekarische Datenformate": \par
`\cf4\ul\b http://www.allegro-c.de/formate/\cf2\ulnone\b0 ` \par
Dort erst erfahren Sie, wie vielschichtig die Sache wirklich ist: man kann das Thema "Daten und Dateien" auf insgesamt sieben Ebenen betrachten, die \'fcbereinander geschichtet sind... Sp\'e4testens da sieht man, wie alles zwar kompliziert, aber doch ganz logisch ist. \par
\par
?http://www.allegro-c.de/a-r.htm=~start http://www.allegro-c.de/a-r.htm \par
?h dos=h dos \par
?http://www.allegro-c.de/unicode/=~start http://www.allegro-c.de/unicode/ \par
?http://www.allegro-c.de/formate/=~start http://www.allegro-c.de/formate/ \par
?http://www.allegro-c.de/doku/format=~start http://www.allegro-c.de/doku/format \par
?http://www.allegro-c.de/formate/formneu.htm=~start http://www.allegro-c.de/formate/formneu.htm \par
?anderen Text=h dos-file \par
\par
}
 