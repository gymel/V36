  C-TAGS.APR : Count frequency of tags in database
  2001-03-01
  based on   c-0.apr     960214

  Output : sortable records containing
           #u1 tag 
           #u2 tag

  Batch  : COUNT.BAT
           copy this file to count.apr first:
           copy c-tags.apr count.apr

pn="C-TAGS.APR " 

  No Configuration specific parts!
  Application specifics are marked with ~~~
  ~~~~~~~~~~~
  This parameter set produces records in this format:

  #u1 sort code (in small letters and without special characters)
  #u2 Original form of the field represented by #u1
      this will be used in the last stage to prepare the listing
 
  2nd stage : ASORT sorts the resulting file
  3rd stage : SRCH exports the sorted file using COUNT2.APR

  COUNT2.APR is independent of the underlying format, i.e. you can use it
  with any .CFG.    

  --------- Constants ---------------------------------------------

zl=0        no line breaking
ks=0        we want the tags, not the text!
ze=""       no line end character
  --------- this is all! ------------------------------------------

   The heading command is very probably the only thing you need
   to change if you want to evaluate other fields:

   ======== heading command ======================================

ak=0..+A 1..+A 2..+A 3..+A 4..+A 5..+A 6..+A 7..+A 8..+A 9..+A
   ~~~~~~~~~

   ===============================================================

   ******** field list *******************************************
   
#+-         if there was no heading, do nothing

#-A
#u1 b1 e3 p{ 1 "u1 " }     #u1 contains the string to be evaluated.
    ~~~~~~~~~                   it is prefixed by <01h> and "u1 " to make it
                                exportable (after the sort) by SRCH
   if only part of the field is to be evaluated, add appropriate
   manipulation commands. For example:
   !u1 e"-" p{ 1 "u1 " }     cut #u1 at '-' , use only the part preceding '-'
                             may be useful to evaluate call number groups
#nr b4 p""           internal rec#
    ~~

#t{ 0 }                      field end : Code 00h
   
#u1 e4 p"u2 "         same field in printable form as #u2
    ~~~~~~~~~

#t{ 0 13 10 }                record end : codes 0 13 10


