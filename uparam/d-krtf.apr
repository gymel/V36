  D-KRTF.APR : a99-Anzeige incl. verkn. Satzstrukturen, tabellarisch
  Plus Nachladungen von ueber- und untergeordneten Saetzen
  2002-02-15
  Wenn keine hierarchischen oder verknuepften Saetze vorkommen,
  dann genuegt einfaches Modell  D-SRTF.APR  

pn="Hierarchie-Export RTF"

  Fuellen Sie die Bereiche zwischen den mit <<<<<<<<<  und >>>>>>>>>
  markierten Zeilen mit Ihren Exportbefehlen aus!
  Meistens reicht es, den Abschnitt unter Sprungmarke #-Z anzupassen!
  (siehe ganz unten)

  Der aktuelle (anzuzeigende oder auszugebende) Satz wird PRIMaeRSATZ genannt.
  Dabei handelt es sich um entweder

  A.  einen Hauptsatz
      wenn er unabhaengig gespeicherte Untersaetze hat, muss die
      Kategorie #00 mit  einer eindeutigen IdNr X besetzt sein.
      In der Anzeige sollen unter dem auptsatz alle untergeordneten
      Saetze erscheinen.
      Die untergeordneten Saetze haben dann in #00 IdNummern der Form  X+n
      mit einer Bandnummer n :

  B.  einen Untersatz
      dann enthaelt #00 die IdNr des Hauptsatzes PLUS eine Bandnummer
      z.B.  #00 123456+005=Vol.5
      (hinter '='  kann eine Bandnummer in Textform folgen, sonst wird
      die auf '+' folgende Nummer genommen, fuehrende Nullen werden beseitigt)
      In der Anzeige sollen stufenfoermig die unmittelbar uebergeordneten, 
      aber nicht die nebengeordneten Saetze erscheinen.

  C.  beides, auch "Mittelsatz" genannt: der Primaersatz ist einerseits
      einem anderen untergeordnet, besitzt aber auch selbst Untersaetze.
      In der Anzeige soll fuer die untergeordneten Saetze nach A, fuer die
      uebergeordneten nach B verfahren werden.


  Es kann bis zu 5 untergeordnete Stufen geben (theoretisch noch mehr).
  Jede weitere Stufe enthaelt in der #00 oder #09 ein weiteres '+' . 
  Dieses wird fuer den Nachladevorgang ausgewertet.

  *********** Grundparameter, nicht ohne Grund aendern: ***************
td-rtf   RTF-Steuerbefehle
tutf-rtf   utf-rtf.apt : Unicode -> RTF

zl=0   Zeilenlaenge, nicht besonders wichtig!
         denn es wird kein Zeilenvorschub gemacht:
ze=" "  
zb=" -"   Umbruch bei Leerz. und Bindestrich
zm=0      keine Seitenschaltung
dx=1      Umcodierung einschalten

  ae="</table>"   fuer HTML aktivieren

i4=1    V14-Ersetzungen ausfuehren

  <<<<<<<<<<<<    Raum fuer Ihre Zwischenteile (Textkonstanten)
  Empfehlung: Nummern 30 bis 59
  >>>>>>>>>>>>    Ende der anwendungsspezifischen Textkonstanten
4="\par "

  Tabellen-Parameter RTF              erste Spalte:
18="\pard\uc1\tx2272\li1800\fi-1800\f4\fs18 "       breit
19="\pard\uc1\tx2272\li1800\fi-1800\f4\fs18 "         schmal
   \f6 = Schrift 6 = Verdana.  \f0 einstellen, wenn Sonderzeichen noetig

  18=""   fuer HTML
  19="<table>"   fuer HTML

13="\par "
20="\par \i "     Neue Tabellenzeile
21="\i0 \tab "      zwischen zwei Tab.Spalten
22=""            Ende der Tab.Zeile (bei RTF nichts)
23=t20 t21
    nur bei HTML:
  29="<pre>"
  28="</pre>"


p ª 1     Nichtsortierzeichen ausblenden
      RTF-Steuerzeichen maskieren:
p { "\{"
p } "\}"
p \ "\\"
      Absatzende
p  "\par \tab "

td-k     d-k.apt laden
to
   <<<<<<<<< Unterprogramme hier anfuegen, wenn man welche hat <<<<<<<
   Abschnitt fuer die Kategorie-Anzeige
#-(

#t18
#nr =aF e0
#bp .20 182
#t29
#t{ t4 }
#nr p"x" e2 =dm

#t{ s0 }       oder 5 statt 4 wenn 3stelliges Schema!

#u01
#-)

#u02 +) p4
 ##                oder
 #L            alternativ: Anzeige mit Labels aus der CFG
#t{ t4 }
#t28
#bp  "\par \tab "
#+#

   Unterprogramm fuer URL
#(U
#t{ t20 "URL: " t21 }
#cc +#8eZ i5,: e0
#cc e"" p"start " =Z~
#cc B"?" =Y~
#cc B"?" p69 P68
#)U
#8eZ
#cc e"" p"X _access!" e"!" =Z~
#cc B"?" =Y~
#cc B"?" p69 P68
#)U
   >>>>>>>>> Ende der Unterprogramme >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


p .127 1
p .31 178
